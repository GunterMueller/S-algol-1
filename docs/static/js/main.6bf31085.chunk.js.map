{"version":3,"sources":["compiler/parser/parser.ts","compiler/examples/escher.S.ts","compiler/codegen/forwards.ts","compiler/analyzer/analyzer.ts","App.tsx","compiler/codegen/codegen.ts","compiler/codegen/prelude.ts","components/Editor.tsx","components/Image.tsx","components/Menu.tsx","compiler/examples/tests.S.ts","compiler/examples/fast.S.ts","index.tsx"],"names":["Type_","val","String_","Id_","Number_","Parser","programRaw","typeR","numberR","idR","stringR","wsR","semicolonR","symbolsR","commentR","cursor","program","terminals","lookaheads","Program","concat","Program0","Sequence","Sequence0","SequenceFollow","SequenceFollow0","SequenceEl","SequenceEl0","SequenceEl1","Declaration","Declaration0","Declaration1","Declaration2","Declaration3","LetDecl","LetDecl0","InitOp","InitOp0","InitOp1","StructureDecl","StructureDecl0","StructureDeclFields","StructureDeclFields0","FieldList","FieldList0","FieldListFollow","FieldListFollow0","FieldListEl","FieldListEl0","ProcDecl","ProcDecl0","ProcDeclType","ProcDeclType0","ParameterList","ParameterList0","ParameterListFollow","ParameterListFollow0","Parameter","Parameter0","Parameter1","Parameter2","ProcType","ProcType0","ReturnTypex","ReturnTypex0","PtypeList","PtypeList0","PtypeListFollow","PtypeListFollow0","PtypeListEl","PtypeListEl0","PtypeListEl1","PtypeListEl2","SDecl","SDecl0","SDeclFollow","SDeclFollow0","Forward","Forward0","IdentifierList","IdentifierList0","IdentifierListFollow","IdentifierListFollow0","Clause","Clause0","Clause1","Clause2","Clause3","Clause4","Clause5","Clause6","Clause7","Clause8","ClauseDo","ClauseDo0","ClauseBy","ClauseBy0","ClauseExprFollow","ClauseExprFollow0","IfClauseThen","IfClauseThen0","IfClauseThen1","CaseList","CaseList0","CaseListFollow","CaseListFollow0","CaseListEl","CaseListEl0","WriteClause","WriteClause0","WriteClause1","WriteClause2","WriteClause3","WriteClause4","WriteList","WriteList0","WriteListFollow","WriteListFollow0","WriteListEl","WriteListEl0","WriteListElFollow","WriteListElFollow0","Raster","Raster0","RasterOp","RasterOp0","RasterOp1","RasterOp2","RasterOp3","RasterOp4","RasterOp5","RasterOp6","RasterOp7","ClauseList","ClauseList0","ClauseListFollow","ClauseListFollow0","Expression","Expression0","ExpressionFollow","ExpressionFollow0","Exp1","Exp10","Exp1Follow","Exp1Follow0","Exp2","Exp20","Exp21","Exp2Tilde","Exp2Tilde0","Exp2Op","Exp2Op0","Exp3","Exp30","Exp3Op","Exp3Op0","Exp4","Exp40","Exp4Op","Exp4Op0","Exp5","Exp50","Exp51","Exp5Follow","Exp5Follow0","ExpressionArg","ExpressionArg0","ExpressionArgFollow","ExpressionArgFollow0","ExpressionArgFollow1","Exp6","Exp60","Exp61","Exp62","Exp63","Exp64","Exp65","Exp66","ValueConstructor","ValueConstructor0","ValueConstructor1","ValueConstructor2","ValueConstructor3","VectorConstr","VectorConstr0","VectorConstr1","VectorConstrFollow","VectorConstrFollow0","Range","Range0","RangeFollow","RangeFollow0","RangeEl","RangeEl0","ImageConstr","ImageConstr0","SubimageConstr","SubimageConstr0","SubimageConstrMid","SubimageConstrMid0","SubimageConstrEnd","SubimageConstrEnd0","PictureConstr","PictureConstr0","PictureConstr1","PictureConstr2","PictureConstr3","PictureConstr4","PictureConstr5","Literal","Literal0","Literal1","Literal2","Literal3","Literal4","Literal5","IntegerLiteral","IntegerLiteral0","BooleanLiteral","BooleanLiteral0","BooleanLiteral1","PixelLiteral","PixelLiteral0","PixelLiteral1","PixelLiteralFollow","PixelLiteralFollow0","AddOp","AddOp0","AddOp1","MultOp","MultOp0","MultOp1","MultOp2","MultOp3","MultOp4","MultOp5","MultOp6","RelOp","RelOp0","RelOp1","RelOp2","EqOp","EqOp0","EqOp1","ComparOp","ComparOp0","ComparOp1","ComparOp2","ComparOp3","TypeOp","TypeOp0","TypeOp1","Identifier","Identifier0","Identifier1","StandardExp","StandardExp0","StandardName","StandardName0","StandardName1","StandardName2","StandardName3","StandardName4","StandardName5","StandardName6","StandardName7","StandardName8","StandardName9","StandardName10","StandardName11","StandardName12","StandardName13","StandardId","StandardId0","StandardId1","StandardId2","StandardId3","StandardId4","StandardId5","StandardId6","StandardId7","StandardId8","StandardId9","StandardId10","this","split","map","l","commentM","match","replace","repeat","length","join","createProgram","e","pos","from","wsM","slice","s","semicolonM","Error","skipWS","isWord","nextWord","next","startsWith","nextLookaheads","nextMatches","idM","typeM","includes","symbolsM","stringM","numberM","Number","parseFloat","sequence","createSequence","sequenceEl","createSequenceEl","sequenceFollow","push","createSequenceFollow","expect","declaration","createDeclaration","clause","createClause","letDecl","createLetDecl","structureDecl","createStructureDecl","procDecl","createProcDecl","forward","createForward","identifier","createIdentifier","initOp","createInitOp","structureDeclFields","undefined","createStructureDeclFields","fieldList","createFieldList","fieldListEl","createFieldListEl","fieldListFollow","createFieldListFollow","type","createType_","identifierList","createIdentifierList","procDeclType","createProcDeclType","parameterList","createParameterList","returnTypex","createReturnTypex","parameter","createParameter","parameterListFollow","createParameterListFollow","procType","createProcType","ptypeList","createPtypeList","ptypeListEl","createPtypeListEl","ptypeListFollow","createPtypeListFollow","sDecl","createSDecl","sDeclFollow","createSDeclFollow","identifierListFollow","createIdentifierListFollow","ifClauseThen","createIfClauseThen","whilex","clauseDo","createClauseDo","dox","to","clauseBy","createClauseBy","casex","caseList","createCaseList","defaultx","writeClause","createWriteClause","raster","createRaster","expression","createExpression","clauseExprFollow","createClauseExprFollow","then","elsex","caseListEl","createCaseListEl","caseListFollow","createCaseListFollow","clauseList","createClauseList","writeList","createWriteList","b","c","writeListEl","createWriteListEl","writeListFollow","createWriteListFollow","writeListElFollow","createWriteListElFollow","rasterOp","createRasterOp","thisx","that","clauseListFollow","createClauseListFollow","exp1","createExp1","expressionFollow","createExpressionFollow","exp2","createExp2","exp1Follow","createExp1Follow","exp2Tilde","createExp2Tilde","exp3","createExp3","exp2Op","createExp2Op","relOp","createRelOp","exp4","createExp4","exp3Op","createExp3Op","addOp","createAddOp","exp5","createExp5","exp4Op","createExp4Op","multOp","createMultOp","exp6","createExp6","exp5Follow","createExp5Follow","expressionArg","createExpressionArg","expressionArgFollow","createExpressionArgFollow","standardExp","createStandardExp","literal","createLiteral","valueConstructor","createValueConstructor","vectorConstr","createVectorConstr","imageConstr","createImageConstr","subimageConstr","createSubimageConstr","pictureConstr","createPictureConstr","range","createRange","vectorConstrFollow","createVectorConstrFollow","rangeEl","createRangeEl","rangeFollow","createRangeFollow","a","image","by","of","subimageConstrMid","createSubimageConstrMid","subimageConstrEnd","createSubimageConstrEnd","at1","at2","d","integerLiteral","createIntegerLiteral","booleanLiteral","createBooleanLiteral","string","createString_","pixelLiteral","createPixelLiteral","number","createNumber_","pixelLiteralFollow","createPixelLiteralFollow","eqOp","createEqOp","comparOp","createComparOp","typeOp","createTypeOp","id","createId_","standardId","createStandardId","standardName","createStandardName","forwards","AccessType","AnalyzerError","message","VarType","accessType","StructureType","fields","ProcedureType","parameters","returnType","ProcInner","ProcInnerSDecl","types","ForwardType","TypeStore","TypeStack","stores","pop","varName","onlyCurrent","findInStore","store","currTypes","t","currStore","i","Analyzer","typeStack","seedTypes","getTypeProgram","defaultVar","VAR","expected","actual","p","resolveType","actualT","getStoredType","expectedT","rType","rewrites","int","real","rewriteKeys","Object","keys","matchCheck","nonvoid","writeable","ordered","vector","substr","r","getTypeStandardId","requireSoftID","st","args","expectedFieldCount","actualFieldCount","expectedType","values","actualType","getTypeClause","expectType","pc","arg","arg_type","param","ret","n","addFromFieldListEl","fle","forEach","ident","flf","handleEl","pel","pullProcType","sd","sdf","plf","existingType","params","parseParam","ilf","struct","pullStructureDecl","pList","pl","getTypeSequence","getTypeSequenceEl","getTypeSequenceFollow","getTypeDeclaration","getTypeLetDecl","getTypeStructureDecl","getTypeProcDecl","getTypeForward","CONST","proc","pullProcDecl","pushStore","paramName","clauseType","popStore","nst","conditionalType","ift","thenType","elseType","repeatType","doType","fromType","toType","byType","caseClauseType","defaultType","checkCaseListEl","cle","clf","getTypeWriteClause","getTypeRaster","expType","getTypeExpression","heldVar","getTypeWriteList","checkWriteListEl","wle","wlf","getTypeExp1","ef","getTypeExp2","checkRel","left","getTypeExp3","e2op","right","getTypeExp4","e3op","getTypeExp5","e4op","getTypeExp6","index","cl","v_type","idFromClause","fieldType","eArg","matchStructureCreation","matchProcCall","getTypeStandardExp","getTypeLiteral","getTypeValueConstructor","getTypeVectorConstr","getTypeImageConstr","getTypeSubimageConstr","getTypePictureConstr","checkRangeEl","re","rf","vcf","imageType","getTypeStandardName","genAST","ast","parse","error","typeCheck","run","genCode","code","CodeGen","generate","jsBeautify","js_beautify","prettyError","msg","lineNum","App","useState","escherS","programCode","setProgramCode","errMsg","setErrMsg","output","setOutput","img","setImg","window","compile","includePrelude","pCode","typeCheckErr","prelude","compileAndRun","olog","eval","output_log","out","setAndCompile","loadFile","input","document","createElement","addEventListener","files","reader","FileReader","onload","result","readAsText","remove","click","saveFile","blob","Blob","url","URL","createObjectURL","href","download","revokeObjectURL","useEffect","className","StructDef","name","ProcDec","maps","reads","readi","upb","lwb","dump","now","has","k","m","genProgram","trim","getSoftID","f","x","genSequence","sequences","sf","se","genSequenceEl","immediate","genDeclaration","genClause","genLetDecl","genStructureDecl","genProcDecl","genForward","isConst","el","flattenIdentifierList","ifClause","doClause","thenClause","elseClause","whileClause","repeatClause","fromClause","toClause","byClause","switchClause","defaultClause","cases","subCases","genWriteClause","expr","genExpression","console","log","genWriteList","genWriteListEl","genExp1","genExp2","genExp3","eop","genRelOp","genExp4","genAddOp","genExp5","genMultOp","e6g","genExp6","follows","genExpressionArg","parts","accessClauses","ac","genStandardExp","genLiteral","genValueConstructor","genIdentifier","genVectorConstr","genPictureConstr","toString","genEqOp","genComparOp","genTypeOp","genStandardId","genStandardName","monaco","init","languages","register","setMonarchTokensProvider","keywords","typeKeywords","operators","symbols","escapes","tokenizer","root","include","token","bracket","whitespace","EditorPort","props","value","onChange","_","v","language","Image","canvasRef","useRef","current","ctx","getContext","clearRect","width","height","beginPath","moveTo","lineTo","stroke","ref","Button","onClick","clicked","text","Menu","preloadedFiles","item","key","ReactDOM","render","getElementById"],"mappings":"o2HAAaA,EACX,WAAmBC,GAAc,yBAAdA,OAGRC,EACX,WAAmBD,GAAc,yBAAdA,OAGRE,EACX,WAAmBF,GAAc,yBAAdA,OAGRG,EACX,WAAmBH,GAAc,yBAAdA,OAGRI,EAAb,WAaE,WAAoBC,GAAqB,IAAD,gCAApBA,aAAoB,KAZhCC,MAAQ,oEAYwB,KAXhCC,QAAU,0BAWsB,KAVhCC,IAAM,oBAU0B,KAThCC,QAAU,qBASsB,KAPhCC,IAAM,OAO0B,KANhCC,WAAa,eAMmB,KALhCC,SAAW,YAKqB,KAJhCC,SAAW,SAIqB,KAFhCC,OAAS,EAEuB,KADhCC,aACgC,OAoKhCC,UAAY,CAClB,IACA,MACA,IACA,KACA,YACA,IACA,IACA,IACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,YACA,IACA,IACA,IACA,UACA,IACA,KACA,SACA,QACA,QACA,KACA,MACA,IACA,KACA,KACA,OACA,KACA,UACA,IACA,QACA,KACA,KACA,KACA,KACA,OACA,OACA,IACA,IACA,QACA,SACA,IACA,WACA,IACA,IACA,SACA,IACA,IACA,SACA,IACA,IACA,IACA,OACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,KACA,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,QACA,MACA,IACA,IACA,SACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,KACA,QACA,KACA,KACA,QACA,KACA,KACA,KACA,IACA,QACA,KACA,IACA,QACA,KACA,IACA,SACA,KACA,SACA,KACA,OACA,OACA,IACA,KACA,IACA,IACA,IACA,IACA,MACA,WACA,OACA,QACA,KACA,MACA,IACA,IACA,IACA,KACA,MACA,MACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,IACA,KACA,IACA,KACA,OACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,UAzUsC,KA8/C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6Q,KAAKyB,YAAY9B,GAAYrQ,cAEtC,OADA0Q,KAAKyC,OAAO,WACL,IAAI9C,GAAYxQ,GAClB,GAAI6Q,KAAKyB,YAAY7B,GAAYtQ,cAEtC,OADA0Q,KAAKyC,OAAO,WACL,IAAI7C,GAAYzQ,GAClB,GAAI6Q,KAAKyB,YAAY5B,GAAYvQ,cAEtC,OADA0Q,KAAKyC,OAAO,MACL,IAAI5C,GAAY1Q,GAClB,GAAI6Q,KAAKyB,YAAY3B,GAAYxQ,cAEtC,OADA0Q,KAAKyC,OAAO,UACL,IAAI3C,GAAY3Q,GAClB,GAAI6Q,KAAKyB,YAAY1B,GAAazQ,cAEvC,OADA0Q,KAAKyC,OAAO,UACL,IAAI1C,GAAa5Q,GACnB,MAAM,IAAI+R,MAAM,wBAzgD3B,KAgvDazR,EAAb,WACE,WAAmBmR,EAAoBsB,GAAqB,yBAAzCtB,MAAwC,KAApBsB,WADzC,8DAGI,MAAO,CACL,MACA,YACA,YACA,UACA,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cA5EN,KAiFavS,EAAb,WACE,WACSiR,EACAwB,EACAE,GACN,yBAHM1B,MAGP,KAFOwB,aAEP,KADOE,iBAJX,8DAOI,MAAO,CACL,MACA,YACA,YACA,UACA,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,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CA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cAzDN,KAuEahT,GAAb,WACE,WAAmB0M,EAAoBgC,GAAiB,yBAArChC,MAAoC,KAAhBgC,SADzC,8DAGI,MAAO,CAAC,UAHZ,KAOaxO,GAAb,WACE,WAAmBwM,EAAoBgC,GAAiB,yBAArChC,MAAoC,KAAhBgC,SADzC,8DAGI,MAAO,CAAC,UAHZ,KAOatO,GAAb,WACE,WAAmBsM,EAAoBgC,GAAiB,yBAArChC,MAAoC,KAAhBgC,SADzC,8DAGI,MAAO,CAAC,UAHZ,KAOapO,GAAb,WACE,WAAmBoM,EAAoBgC,GAAiB,yBAArChC,MAAoC,KAAhBgC,SADzC,8DAGI,MAAO,CAAC,UAHZ,KAManO,GAAb,WACE,WAAmBmM,EAAoBwG,EAAqBC,GAAgB,yBAAzDzG,MAAwD,KAApCwG,OAAoC,KAAfC,QAD9D,8DAGI,MAAO,CAAC,YAHZ,KAOa1S,GAAb,WACE,WACSiM,EACA0G,EACAE,GACN,yBAHM5G,MAGP,KAFO0G,aAEP,KADOE,iBAJX,8DAOI,MAAO,CACL,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cA5EN,KAiFa3S,GAAb,WACE,WAAmB+L,EAAoB0G,GAAyB,yBAA7C1G,MAA4C,KAAxB0G,aADzC,8DAGI,MAAO,CAAC,SAHZ,KAOavS,GAAb,WACE,WACS6L,EACA8G,EACA9E,GACN,yBAHMhC,MAGP,KAFO8G,aAEP,KADO9E,SAJX,8DAOI,MAAO,CACL,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cA5EN,KAiFa3N,GAAb,WACE,WAAmB2L,EAAoBgH,GAAuB,yBAA3ChH,MAA0C,KAAtBgH,YADzC,8DAGI,MAAO,CAAC,aAHZ,KAMa1S,GAAb,WACE,WACS0L,EACAgC,EACAgF,GACN,yBAHMhH,MAGP,KAFOgC,SAEP,KADOgF,YAJX,8DAOI,MAAO,CAAC,cAPZ,KAUazS,GAAb,WACE,WACSyL,EACAgC,EACAkF,EACAC,GACN,yBAJMnH,MAIP,KAHOgC,SAGP,KAFOkF,IAEP,KADOC,IALX,8DAQI,MAAO,CAAC,gBARZ,KAWa3S,GAAb,WACE,WACSwL,EACAgC,EACAkF,EACAC,GACN,yBAJMnH,MAIP,KAHOgC,SAGP,KAFOkF,IAEP,KADOC,IALX,8DAQI,MAAO,CAAC,cARZ,KAWa1S,GAAb,WACE,WAAmBuL,EAAoBgC,EAAuBkF,GAAY,yBAAvDlH,MAAsD,KAAlCgC,SAAkC,KAAXkF,IADhE,8DAGI,MAAO,CAAC,cAHZ,KAYavS,GAAb,WACE,WACSqL,EACAoH,EACAE,GACN,yBAHMtH,MAGP,KAFOoH,cAEP,KADOE,kBAJX,8DAOI,MAAO,CACL,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cA5EN,KAiFazS,GAAb,WACE,WAAmBmL,EAAoBoH,GAA2B,yBAA/CpH,MAA8C,KAA1BoH,cADzC,8DAGI,MAAO,CAAC,SAHZ,KAOarS,GAAb,WACE,WACSiL,EACAgC,EACAwF,GACN,yBAHMxH,MAGP,KAFOgC,SAEP,KADOwF,oBAJX,8DAOI,MAAO,CACL,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cA5EN,KAiFavS,GAAb,WACE,WAAmB+K,EAAoBgC,GAAiB,yBAArChC,MAAoC,KAAhBgC,SADzC,8DAGI,MAAO,CAAC,SAHZ,KAOa7M,GAAb,WACE,WACS6K,EACA0H,EACAE,EACAC,GACN,yBAJM7H,MAIP,KAHO0H,WAGP,KAFOE,QAEP,KADOC,OALX,8DAQI,MAAO,CAAC,MAAO,OAAQ,MAAO,OAAQ,OAAQ,MAAO,MAAO,YARhE,KAYaxS,GAAb,WACE,WAAmB2K,GAAc,yBAAdA,MADrB,8DAGI,MAAO,CAAC,WAHZ,KAMa1K,GAAb,WACE,WAAmB0K,GAAc,yBAAdA,MADrB,8DAGI,MAAO,CAAC,YAHZ,KAMazK,GAAb,WACE,WAAmByK,GAAc,yBAAdA,MADrB,8DAGI,MAAO,CAAC,WAHZ,KAMaxK,GAAb,WACE,WAAmBwK,GAAc,yBAAdA,MADrB,8DAGI,MAAO,CAAC,YAHZ,KAMavK,GAAb,WACE,WAAmBuK,GAAc,yBAAdA,MADrB,8DAGI,MAAO,CAAC,YAHZ,KAMatK,GAAb,WACE,WAAmBsK,GAAc,yBAAdA,MADrB,8DAGI,MAAO,CAAC,WAHZ,KAMarK,GAAb,WACE,WAAmBqK,GAAc,yBAAdA,MADrB,8DAGI,MAAO,CAAC,WAHZ,KAMapK,GAAb,WACE,WAAmBoK,GAAc,yBAAdA,MADrB,8DAGI,MAAO,CAAC,YAHZ,KAealK,GAAb,WACE,WACSkK,EACAgC,EACA8F,GACN,yBAHM9H,MAGP,KAFOgC,SAEP,KADO8F,mBAJX,8DAOI,MAAO,CACL,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cA5EN,KAiFa9R,GAAb,WACE,WAAmBgK,EAAoBgC,GAAiB,yBAArChC,MAAoC,KAAhBgC,SADzC,8DAGI,MAAO,CAAC,SAHZ,KAOa9L,GAAb,WACE,WACS8J,EACAgI,EACAE,GACN,yBAHMlI,MAGP,KAFOgI,OAEP,KADOE,mBAJX,8DAOI,MAAO,CACL,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cAzDN,KA8Da9R,GAAb,WACE,WAAmB4J,EAAoBgI,GAAa,yBAAjChI,MAAgC,KAAZgI,OADzC,8DAGI,MAAO,CAAC,UAHZ,KAOa1R,GAAb,WACE,WACS0J,EACAoI,EACAE,GACN,yBAHMtI,MAGP,KAFOoI,OAEP,KADOE,aAJX,8DAOI,MAAO,CACL,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cAzDN,KA8Da9R,GAAb,WACE,WAAmBwJ,EAAoBoI,GAAa,yBAAjCpI,MAAgC,KAAZoI,OADzC,8DAGI,MAAO,CAAC,WAHZ,KAOa1R,GAAb,WACE,WACSsJ,EACAwI,EACAE,EACAE,GACN,yBAJM5I,MAIP,KAHOwI,YAGP,KAFOE,OAEP,KADOE,SALX,8DAQI,MAAO,CAAC,SARZ,KAWajS,GAAb,WACE,WAAmBqJ,EAAoB0I,EAAmBE,GAAmB,yBAA1D5I,MAAyD,KAArC0I,OAAqC,KAAlBE,SAD5D,8DAGI,MAAO,CACL,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cApDN,KAyDa/R,GAAb,WACE,WAAmBmJ,GAAc,yBAAdA,MADrB,8DAGI,MAAO,CAAC,SAHZ,KAOajJ,GAAb,WACE,WAAmBiJ,EAAoB8I,EAAqBJ,GAAa,yBAAtD1I,MAAqD,KAAjC8I,QAAiC,KAAZJ,OAD9D,8DAGI,MAAO,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,YAHnD,KAOazR,GAAb,WACE,WAAmB+I,EAAoBgJ,EAAmBE,GAAmB,yBAA1DlJ,MAAyD,KAArCgJ,OAAqC,KAAlBE,SAD5D,8DAGI,MAAO,CACL,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cApDN,KAyDa/R,GAAb,WACE,WAAmB6I,EAAoBoJ,EAAqBJ,GAAa,yBAAtDhJ,MAAqD,KAAjCoJ,QAAiC,KAAZJ,OAD9D,8DAGI,MAAO,CAAC,IAAK,SAHjB,KAOa3R,GAAb,WACE,WAAmB2I,EAAoBsJ,EAAmBE,GAAmB,yBAA1DxJ,MAAyD,KAArCsJ,OAAqC,KAAlBE,SAD5D,8DAGI,MAAO,CACL,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cApDN,KAyDajS,GAAb,WACE,WAAmByI,EAAoB0J,EAAuBJ,GAAa,yBAAxDtJ,MAAuD,KAAnC0J,SAAmC,KAAZJ,OADhE,8DAGI,MAAO,CAAC,KAAM,MAAO,MAAO,IAAK,IAAK,IAAK,SAH/C,KAOa7R,GAAb,WACE,WACSuI,EACAoJ,EACAQ,EACAE,GACN,yBAJM9J,MAIP,KAHOoJ,QAGP,KAFOQ,OAEP,KADOE,aALX,8DAQI,MAAO,CAAC,IAAK,SARjB,KAWapS,GAAb,WACE,WACSsI,EACA4J,EACAE,GACN,yBAHM9J,MAGP,KAFO4J,OAEP,KADOE,aAJX,8DAOI,MAAO,CACL,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cAtDN,KA2DalS,GAAb,WACE,WAAmBoI,EAAoBgK,GAA+B,yBAAnDhK,MAAkD,KAA9BgK,gBADzC,8DAGI,MAAO,CAAC,SAHZ,KAOalS,GAAb,WACE,WACSkI,EACAgC,EACAkI,GACN,yBAHMlK,MAGP,KAFOgC,SAEP,KADOkI,sBAJX,8DAOI,MAAO,CACL,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cA5EN,KAiFalS,GAAb,WACE,WAAmBgI,EAAoBgC,GAAiB,yBAArChC,MAAoC,KAAhBgC,SADzC,8DAGI,MAAO,CAAC,SAHZ,KAMa/J,GAAb,WACE,WAAmB+H,EAAoB8G,GAAyB,yBAA7C9G,MAA4C,KAAxB8G,aADzC,8DAGI,MAAO,CAAC,SAHZ,KAOa3O,GAAb,WACE,WAAmB6H,EAAoBgC,GAAiB,yBAArChC,MAAoC,KAAhBgC,SADzC,8DAGI,MAAO,CAAC,SAHZ,KAMa5J,GAAb,WACE,WAAmB4H,EAAoBsB,GAA4B,yBAAhDtB,MAA+C,KAA3BsB,WADzC,8DAGI,MAAO,CAAC,aAHZ,KAMajJ,GAAb,WACE,WAAmB2H,EAAoBsB,GAA4B,yBAAhDtB,MAA+C,KAA3BsB,WADzC,8DAGI,MAAO,CAAC,SAHZ,KAMahJ,GAAb,WACE,WAAmB0H,EAAoBoK,GAA2B,yBAA/CpK,MAA8C,KAA1BoK,cADzC,8DAGI,MAAO,CACL,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,eAjBN,KAqBa7R,GAAb,WACE,WAAmByH,EAAoBsK,GAAmB,yBAAvCtK,MAAsC,KAAlBsK,UADzC,8DAGI,MAAO,CACL,MACA,WACA,WACA,OACA,QACA,WACA,KACA,WAXN,KAea9R,GAAb,WACE,WAAmBwH,EAAoBwK,GAAqC,yBAAzDxK,MAAwD,KAApCwK,mBADzC,8DAGI,MAAO,CACL,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,SAbN,KAiBa/R,GAAb,WACE,WAAmBuH,EAAoB0C,GAAyB,yBAA7C1C,MAA4C,KAAxB0C,aADzC,8DAGI,MAAO,CACL,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cAfN,KAoBa/J,GAAb,WACE,WAAmBqH,EAAoB0K,GAA6B,yBAAjD1K,MAAgD,KAA5B0K,eADzC,8DAGI,MAAO,CAAC,SAAU,SAHtB,KAMa9R,GAAb,WACE,WAAmBoH,EAAoB4K,GAA2B,yBAA/C5K,MAA8C,KAA1B4K,cADzC,8DAGI,MAAO,CAAC,aAHZ,KAMa/R,GAAb,WACE,WAAmBmH,EAAoB8K,GAAiC,yBAArD9K,MAAoD,KAAhC8K,iBADzC,8DAGI,MAAO,CAAC,aAHZ,KAMahS,GAAb,WACE,WAAmBkH,EAAoBgL,GAA+B,yBAAnDhL,MAAkD,KAA9BgL,gBADzC,8DAGI,MAAO,CAAC,QAAS,QAAS,SAAU,SAAU,OAAQ,SAH1D,KAWahS,GAAb,WACE,WAAmBgH,EAAoBkL,EAAqBlJ,GAAiB,yBAA1DhC,MAAyD,KAArCkL,QAAqC,KAAhBlJ,SAD9D,8DAGI,MAAO,CAAC,cAHZ,KAMa/I,GAAb,WACE,WACS+G,EACAgC,EACAuB,EACA2D,EACAkE,GACN,yBALMpL,MAKP,KAJOgC,SAIP,KAHOuB,OAGP,KAFO2D,IAEP,KADOkE,qBANX,8DASI,MAAO,CAAC,SATZ,KAaajS,GAAb,WACE,WAAmB6G,EAAoBgC,GAAiB,yBAArChC,MAAoC,KAAhBgC,SADzC,8DAGI,MAAO,CAAC,SAHZ,KAOa3I,GAAb,WACE,WACS2G,EACAsL,EACAE,GACN,yBAHMxL,MAGP,KAFOsL,UAEP,KADOE,cAJX,8DAOI,MAAO,CACL,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cA5EN,KAiFajS,GAAb,WACE,WAAmByG,EAAoBsL,GAAmB,yBAAvCtL,MAAsC,KAAlBsL,UADzC,8DAGI,MAAO,CAAC,SAHZ,KAOa7R,GAAb,WACE,WAAmBuG,EAAoB0L,EAAkBxE,GAAY,yBAAlDlH,MAAiD,KAA7B0L,IAA6B,KAAXxE,IAD3D,8DAGI,MAAO,CACL,KACA,SACA,QACA,MACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,IACA,IACA,IACA,IACA,QACA,IACA,MACA,MACA,MACA,cACA,OACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,UACA,UACA,MACA,WACA,WACA,OACA,QACA,WACA,KACA,MACA,SACA,IACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,IACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,UACA,UACA,KACA,SACA,cAxEN,KA6EavN,GAAb,WACE,WACSqG,EACA2L,EACAC,EACAC,GACN,yBAJM7L,MAIP,KAHO2L,QAGP,KAFOC,KAEP,KADOC,KALX,8DAQI,MAAO,CAAC,aARZ,KAYahS,GAAb,WACE,WACSmG,EACAgC,EACA8J,EACAE,GACN,yBAJMhM,MAIP,KAHOgC,SAGP,KA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,IAAI1P,MAAM,sBArgBpB,gCAwgBoB6R,GAChB,GAAIA,aAAanC,KACf,MAAO,aACF,GAAImC,aAAanC,KACtB,MAAO,GAGT,MAAM,IAAI1P,MAAM,sBA/gBpB,oCAkhBwB6R,GACpB,GAAIA,aAAanC,IACf,OAAO5Q,KAAKyd,UAAU1K,GACjB,GAAIA,aAAanC,IACtB,OAAO5Q,KAAKyhB,cAAc1O,EAAE1E,YAG9B,MAAM,IAAInN,MAAM,sBAzhBpB,qCA4hByB6R,GACrB,OAAO/S,KAAK0hB,gBAAgB3O,EAAExE,gBA7hBlC,sCAgiB0BwE,GACtB,GAAIA,aAAanC,KACf,MAAO,MACF,GAAImC,aAAanC,KACtB,MAAO,MACF,GAAImC,aAAanC,KACtB,MAAO,MACF,GAAImC,aAAanC,KACtB,MAAO,cACF,GAAImC,aAAanC,KACtB,MAAO,OACF,GAAImC,aAAanC,KACtB,MAAO,QACF,GAAImC,aAAanC,KACtB,MAAO,QACF,GAAImC,aAAanC,KACtB,MAAO,QACF,GAAImC,aAAanC,KACtB,MAAO,OACF,GAAImC,aAAanC,KACtB,MAAO,QACF,GAAImC,aAAanC,KACtB,MAAO,YACF,GAAImC,aAAanC,KACtB,MAAO,YACF,GAAImC,aAAanC,KACtB,MAAO,UACF,GAAImC,aAAanC,KACtB,MAAO,UAGT,MAAM,IAAI1P,MAAM,sBA/jBpB,oCAkkBwB6R,GACpB,GAAIA,aAAanC,KACf,MAAO,MACF,GAAImC,aAAanC,KACtB,MAAO,MACF,GAAImC,aAAanC,KACtB,MAAO,MACF,GAAImC,aAAanC,KACtB,MAAO,MACF,GAAImC,aAAanC,KACtB,MAAO,MACF,GAAImC,aAAanC,KACtB,MAAO,SACF,GAAImC,aAAanC,KACtB,MAAO,UACF,GAAImC,aAAanC,KACtB,MAAO,UACF,GAAImC,aAAanC,KACtB,MAAO,KACF,GAAImC,aAAanC,KACtB,MAAO,SACF,GAAImC,aAAanC,KACtB,MAAO,SAGT,MAAM,IAAI1P,MAAM,wBA3lBpB,M,gCC9BA,kCAAO,IAAMyZ,EAAO,o0D,gCCApB,oEAKAgH,SAAOC,OAAOxa,MAAK,SAACkW,GAClBA,EAAEuE,UAAUC,SAAS,CAAE3T,GAAI,WAC3BmP,EAAEuE,UAAUE,yBAAyB,SAAU,CAC7CC,SAAU,CACR,QACA,MACA,KACA,QACA,KACA,IACA,OACA,SACA,UACA,KACA,OACA,MACA,MACA,UACA,QACA,MACA,UACA,OACA,MACA,KACA,KACA,MACA,QACA,MACA,SACA,UACA,MACA,WACA,KACA,MACA,KACA,OACA,KACA,SACA,SACA,WACA,SACA,OACA,KACA,YACA,MACA,OACA,UACA,UACA,cACA,YACA,YACA,QACA,QACA,QACA,QACA,SACA,SACA,MACA,MACA,MACA,QACA,SACA,QACA,YACA,OACA,OACA,KACA,OACA,MACA,SACA,QACA,SAGFC,aAAc,CACZ,OACA,QACA,QACA,UACA,SACA,OACA,QACA,QACA,UACA,WACA,SACA,UACA,SACA,OACA,OACA,QACA,MACA,QACA,OACA,OACA,MACA,UAGFC,UAAW,CACT,IACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,KACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,OACA,OACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,KACA,QAIFC,QAAS,sBAGTC,QAAS,wEAGTC,UAAW,CACTC,KAAM,CAEJ,CACE,SACA,CACEhD,MAAO,CACL,gBAAiB,UACjB,YAAa,UACb,WAAY,gBAMlB,CAAEiD,QAAS,eAGX,CAAC,WAAY,aACb,CAAC,mBAAoB,aACrB,CAAC,WAAY,CAAEjD,MAAO,CAAE,aAAc,WAAY,WAAY,MAI9D,CAAC,aAAc,CAAEkD,MAAO,eAGxB,CAAC,0BAA2B,gBAC5B,CAAC,oBAAqB,cACtB,CAAC,MAAO,UAGR,CAAC,QAAS,aAGV,CAAC,kBAAmB,kBACpB,CAAC,IAAK,CAAEA,MAAO,eAAgBC,QAAS,QAASnhB,KAAM,YAGvD,CAAC,WAAY,UACb,CAAC,mBAAoB,CAAC,SAAU,gBAAiB,WACjD,CAAC,IAAK,mBAGR+L,OAAQ,CACN,CAAC,UAAW,UACZ,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAC,IAAK,CAAEmV,MAAO,eAAgBC,QAAS,SAAUnhB,KAAM,UAG1DohB,WAAY,CACV,CAAC,aAAc,SACf,CAAC,OAAQ,kBAMV,IAAMC,EAAa,SAACC,GAAD,OAIxB,kBAAC,mBAAD,CACEC,MAAOD,EAAM9I,YACbgJ,SAAU,SAACC,EAAGC,GAAJ,OAAUJ,EAAM7I,eAAeiJ,IACzCC,SAAS,a,6FClNAC,EAAQ,SAACN,GAEpB,IAAMO,EAAYC,iBAA0B,MAsB5C,OAnBA5G,qBAAU,WAER,IAAMzU,EAAIob,EAAUE,QAEdC,EAAMvb,EAAEwb,WAAW,MAGzBD,EAAIE,UAAU,EAAG,EAAGzb,EAAE0b,MAAO1b,EAAE2b,QAE/BJ,EAAIK,YATU,oBAWGf,EAAMrW,OAXT,IAWd,2BAA8B,CAAC,IAApBkS,EAAmB,QAC5B6E,EAAIM,OAAOnF,EAAG,GAAG,GAAIA,EAAG,GAAG,IAC3B6E,EAAIO,OAAOpF,EAAG,GAAG,GAAIA,EAAG,GAAG,KAbf,8BAgBd6E,EAAIQ,WACH,CAAClB,EAAMrW,QAEH,4BAAQkX,MAAM,MAAMC,OAAO,MAAMK,IAAKZ,M,4DC3B/C,kCAKA,IAAMa,EAAS,SAACpB,GAAD,OACb,yBACEqB,QAASrB,EAAMsB,QACfzH,UAAU,iEAETmG,EAAMuB,OAIEC,EAAO,SAACxB,GAOnB,IAAMyB,EAAiB,CACrB,CAAC,UCtBe,4vGDuBhB,CAAC,SEvBe,sqDFwBhB,CAAC,WAAYxK,MAGf,OACE,yBAAK4C,UAAU,sBACb,yBAAKA,UAAU,qBAAf,oBACA,yBAAKA,UAAU,aACZ4H,EAAenkB,KAAI,SAACokB,GAAD,OAClB,kBAAC,EAAD,CACEC,IAAKD,EAAK,GACVJ,QAAS,kBAAMtB,EAAM3H,cAAcqJ,EAAK,KACxCH,KAAI,eAAUG,EAAK,SAGvB,kBAAC,EAAD,CAAQJ,QAAS,kBAAMtB,EAAM1H,YAAYiJ,KAAK,cAC9C,kBAAC,EAAD,CAAQD,QAAS,kBAAMtB,EAAM7G,YAAYoI,KAAK,cAC9C,kBAAC,EAAD,CAAQD,QAAS,kBAAMtB,EAAMrI,SAAQ,IAAQ4J,KAAK,YAClD,kBAAC,EAAD,CAAQD,QAAS,kBAAMtB,EAAMhI,iBAAiBuJ,KAAK,Y,oEGzC3D,oDAIAK,IAASC,OAAO,kBAAC,IAAD,MAASrJ,SAASsJ,eAAe,U","file":"static/js/main.6bf31085.chunk.js","sourcesContent":["export class Type_ {\n  constructor(public val: string) {}\n}\n\nexport class String_ {\n  constructor(public val: string) {}\n}\n\nexport class Id_ {\n  constructor(public val: string) {}\n}\n\nexport class Number_ {\n  constructor(public val: number) {}\n}\n\nexport class Parser {\n  private typeR = /^[*c]*(?:int|real|bool|string|pixel|pic|pntr|file|#pixel|#cpixel)/;\n  private numberR = /^\\d+(?:\\.\\d*)?(?:e\\d+)?/;\n  private idR = /^\\w+(?:[.\\w]*\\w)?/;\n  private stringR = /^\"((?:'\"|''|.)*?)\"/;\n\n  private wsR = /^\\s+/;\n  private semicolonR = /^\\s*[\\n;]\\s*/;\n  private symbolsR = /^[^\\s\\w]+/;\n  private commentR = /![^\"]*/;\n\n  private cursor = 0;\n  private program: string;\n  constructor(private programRaw: string) {\n    // Replace comments\n    this.program = programRaw\n      .split(\"\\n\")\n      .map((l) => {\n        const commentM = l.match(this.commentR);\n        // Replace comments with equal length whitespace\n        if (commentM)\n          return l.replace(this.commentR, \" \".repeat(commentM[0].length));\n        else return l;\n      })\n      .join(\"\\n\");\n  }\n\n  public parse(): Program {\n    try {\n      return this.createProgram();\n    } catch (e) {\n      e.pos = this.cursor;\n      throw e;\n    }\n  }\n\n  private next(from: number = this.cursor): string {\n    const wsM = this.program.slice(from).match(this.wsR);\n\n    if (wsM) return this.program.slice(from + wsM[0].length);\n    else return this.program.slice(from);\n  }\n\n  private skipWS(): void {\n    const wsM = this.program.slice(this.cursor).match(this.wsR);\n    if (wsM) this.cursor += wsM[0].length;\n  }\n\n  private isWord(s: string): boolean {\n    return s.match(this.idR) !== null;\n  }\n\n  private expect(s: string): void {\n    // Must match - if it does not, error out\n    if (s === \";\") {\n      // Match a semicolon\n      const semicolonM = this.program.slice(this.cursor).match(this.semicolonR);\n      if (!semicolonM) throw new Error(\"Expected semicolon\");\n      this.cursor += semicolonM[0].length;\n    } else if (s === \"__TYPE\") {\n      throw new Error(\"Called type match - should not be called in expect\");\n    } else if (s === \"__NUMBER\") {\n      throw new Error(\"Called number match - should not be called in expect\");\n    } else if (s === \"__ID\") {\n      throw new Error(\"Called ID match - should not be called in expect\");\n    } else if (s === \"__STRING\") {\n      throw new Error(\"Called string match - should not be called in expect\");\n    } else {\n      this.skipWS();\n      // Check if matching a word or symbols\n      if (this.isWord(s)) {\n        // If a word, needs to totally match the entire next word \\w+\n        const nextWord = this.next().match(this.idR);\n        if (!nextWord || nextWord[0] !== s) throw new Error(\"Expected \" + s);\n        this.cursor += s.length;\n      } else {\n        // If a symbol, only needs to prefix match\n        if (!this.next().startsWith(s)) throw new Error(\"Expected \" + s);\n        this.cursor += s.length;\n      }\n    }\n  }\n\n  private nextMatches(\n    lookaheads: string[],\n    nextLookaheads: string[] | void,\n    from: number = this.cursor\n  ): boolean {\n    for (const l of lookaheads) {\n      if (l === \";\") {\n        // Magic semicolon matching\n        // If nextLookaheads is set, also only match if that matches\n        const semicolonM = this.program.slice(from).match(this.semicolonR);\n        if (!semicolonM) continue;\n        if (!nextLookaheads) return true;\n        return this.nextMatches(\n          nextLookaheads,\n          [],\n          from + semicolonM[0].length\n        );\n      } else if (l === \"__TYPE\") {\n        // Match against a type\n        if (this.next(from).match(this.typeR)) return true;\n      } else if (l === \"__NUMBER\") {\n        // Match against a number\n        if (this.next(from).match(this.numberR)) return true;\n      } else if (l === \"__ID\") {\n        // Match an ID\n        // Must not be in terminals and cannot be a fully matched type\n        const idM = this.next(from).match(this.idR);\n        const typeM = this.next(from).match(this.typeR);\n        if (\n          idM &&\n          (!typeM || idM[0] !== typeM[0]) &&\n          !this.terminals.includes(idM[0])\n        )\n          return true;\n      } else if (l === \"__STRING\") {\n        // Match a string\n        if (this.next(from).match(this.stringR)) return true;\n      } else {\n        if (this.isWord(l)) {\n          // Match word\n          // Full match\n          const idM = this.next(from).match(this.idR);\n          if (idM && idM[0] === l) return true;\n        } else {\n          // Match symbols\n          // Prefix match\n          const symbolsM = this.next(from).match(this.symbolsR);\n          if (symbolsM && this.next(from).startsWith(l)) return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private createType_(): Type_ {\n    // Match a single type\n    this.skipWS();\n\n    const typeM = this.next().match(this.typeR)!;\n    this.cursor += typeM[0].length;\n    return new Type_(typeM[0]);\n  }\n\n  private createString_(): String_ {\n    // Match a string\n    this.skipWS();\n\n    const stringM = this.next().match(this.stringR)!;\n    this.cursor += stringM[0].length;\n    return new String_(stringM[1]);\n  }\n\n  private createId_(): Id_ {\n    // Match an ID\n    this.skipWS();\n\n    const idM = this.next().match(this.idR)!;\n    this.cursor += idM[0].length;\n    return new Id_(idM[0]);\n  }\n\n  private createNumber_(): Number_ {\n    // Match a number\n    this.skipWS();\n\n    const numberM = this.next().match(this.numberR)!;\n    this.cursor += numberM[0].length;\n    return new Number_(Number.parseFloat(numberM[0]));\n  }\n\n  // DO NOT MODIFY BELOW THIS LINE\n  // PARSER IS AUTO GENERATED AND ANY CHANGES WILL BE REMOVED\n\n  private terminals = [\n    \";\",\n    \"let\",\n    \"=\",\n    \":=\",\n    \"structure\",\n    \"(\",\n    \")\",\n    \";\",\n    \"procedure\",\n    \";\",\n    \"(\",\n    \")\",\n    \";\",\n    \"(\",\n    \")\",\n    \"->\",\n    \",\",\n    \"structure\",\n    \"(\",\n    \")\",\n    \",\",\n    \"forward\",\n    \",\",\n    \"if\",\n    \"repeat\",\n    \"while\",\n    \"while\",\n    \"do\",\n    \"for\",\n    \"=\",\n    \"to\",\n    \"do\",\n    \"case\",\n    \"of\",\n    \"default\",\n    \":\",\n    \"abort\",\n    \"do\",\n    \"by\",\n    \":=\",\n    \"do\",\n    \"then\",\n    \"else\",\n    \";\",\n    \":\",\n    \"write\",\n    \"output\",\n    \",\",\n    \"out.byte\",\n    \",\",\n    \",\",\n    \"out.16\",\n    \",\",\n    \",\",\n    \"out.32\",\n    \",\",\n    \",\",\n    \":\",\n    \"onto\",\n    \"ror\",\n    \"rand\",\n    \"xor\",\n    \"copy\",\n    \"nand\",\n    \"nor\",\n    \"not\",\n    \"xnor\",\n    \",\",\n    \"or\",\n    \"and\",\n    \"~\",\n    \"(\",\n    \")\",\n    \"|\",\n    \",\",\n    \"(\",\n    \")\",\n    \"begin\",\n    \"end\",\n    \"{\",\n    \"}\",\n    \"vector\",\n    \"of\",\n    \"@\",\n    \"of\",\n    \"[\",\n    \"]\",\n    \",\",\n    \",\",\n    \"::\",\n    \"image\",\n    \"by\",\n    \"of\",\n    \"limit\",\n    \"to\",\n    \"by\",\n    \"at\",\n    \",\",\n    \"shift\",\n    \"by\",\n    \",\",\n    \"scale\",\n    \"by\",\n    \",\",\n    \"rotate\",\n    \"by\",\n    \"colour\",\n    \"in\",\n    \"text\",\n    \"from\",\n    \",\",\n    \"to\",\n    \",\",\n    \"[\",\n    \",\",\n    \"]\",\n    \"nil\",\n    \"nullfile\",\n    \"true\",\n    \"false\",\n    \"on\",\n    \"off\",\n    \"&\",\n    \"+\",\n    \"-\",\n    \"++\",\n    \"div\",\n    \"rem\",\n    \"*\",\n    \"/\",\n    \"^\",\n    \"&\",\n    \"=\",\n    \"~=\",\n    \"<=\",\n    \"<\",\n    \">=\",\n    \">\",\n    \"is\",\n    \"isnt\",\n    \"upb\",\n    \"lwb\",\n    \"eof\",\n    \"read.a.line\",\n    \"read\",\n    \"readi\",\n    \"readr\",\n    \"readb\",\n    \"peek\",\n    \"reads\",\n    \"read.name\",\n    \"read.byte\",\n    \"read.16\",\n    \"read.32\",\n    \"r.w\",\n    \"i.w\",\n    \"s.w\",\n    \"s.o\",\n    \"s.i\",\n    \"maxint\",\n    \"maxreal\",\n    \"epsilon\",\n    \"pi\",\n    \"cursor\",\n    \"screen\",\n  ];\n  private createProgram(): Program {\n    const cursor = this.cursor;\n    if (this.nextMatches(Program0.lookaheads())) {\n      const sequence = this.createSequence();\n      return new Program0(cursor, sequence);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createSequence(): Sequence {\n    const cursor = this.cursor;\n    if (this.nextMatches(Sequence0.lookaheads())) {\n      const sequenceEl = this.createSequenceEl();\n      const sequenceFollow: SequenceFollow[] = [];\n      while (\n        this.nextMatches(\n          this.lookaheads[\"SequenceFollow\"],\n          this.lookaheads[\"SequenceEl\"]\n        )\n      ) {\n        sequenceFollow.push(this.createSequenceFollow());\n      }\n      return new Sequence0(cursor, sequenceEl, sequenceFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createSequenceFollow(): SequenceFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(SequenceFollow0.lookaheads())) {\n      this.expect(\";\");\n      const sequenceEl = this.createSequenceEl();\n      return new SequenceFollow0(cursor, sequenceEl);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createSequenceEl(): SequenceEl {\n    const cursor = this.cursor;\n    if (this.nextMatches(SequenceEl0.lookaheads())) {\n      const declaration = this.createDeclaration();\n      return new SequenceEl0(cursor, declaration);\n    } else if (this.nextMatches(SequenceEl1.lookaheads())) {\n      const clause = this.createClause();\n      return new SequenceEl1(cursor, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createDeclaration(): Declaration {\n    const cursor = this.cursor;\n    if (this.nextMatches(Declaration0.lookaheads())) {\n      const letDecl = this.createLetDecl();\n      return new Declaration0(cursor, letDecl);\n    } else if (this.nextMatches(Declaration1.lookaheads())) {\n      const structureDecl = this.createStructureDecl();\n      return new Declaration1(cursor, structureDecl);\n    } else if (this.nextMatches(Declaration2.lookaheads())) {\n      const procDecl = this.createProcDecl();\n      return new Declaration2(cursor, procDecl);\n    } else if (this.nextMatches(Declaration3.lookaheads())) {\n      const forward = this.createForward();\n      return new Declaration3(cursor, forward);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createLetDecl(): LetDecl {\n    const cursor = this.cursor;\n    if (this.nextMatches(LetDecl0.lookaheads())) {\n      this.expect(\"let\");\n      const identifier = this.createIdentifier();\n      const initOp = this.createInitOp();\n      const clause = this.createClause();\n      return new LetDecl0(cursor, identifier, initOp, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createInitOp(): InitOp {\n    const cursor = this.cursor;\n    if (this.nextMatches(InitOp0.lookaheads())) {\n      this.expect(\"=\");\n      return new InitOp0(cursor);\n    } else if (this.nextMatches(InitOp1.lookaheads())) {\n      this.expect(\":=\");\n      return new InitOp1(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createStructureDecl(): StructureDecl {\n    const cursor = this.cursor;\n    if (this.nextMatches(StructureDecl0.lookaheads())) {\n      this.expect(\"structure\");\n      const identifier = this.createIdentifier();\n      let structureDeclFields: StructureDeclFields | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"StructureDeclFields\"])) {\n        structureDeclFields = this.createStructureDeclFields();\n      }\n      return new StructureDecl0(cursor, identifier, structureDeclFields);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createStructureDeclFields(): StructureDeclFields {\n    const cursor = this.cursor;\n    if (this.nextMatches(StructureDeclFields0.lookaheads())) {\n      this.expect(\"(\");\n      let fieldList: FieldList | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"FieldList\"])) {\n        fieldList = this.createFieldList();\n      }\n      this.expect(\")\");\n      return new StructureDeclFields0(cursor, fieldList);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createFieldList(): FieldList {\n    const cursor = this.cursor;\n    if (this.nextMatches(FieldList0.lookaheads())) {\n      const fieldListEl = this.createFieldListEl();\n      const fieldListFollow: FieldListFollow[] = [];\n      while (\n        this.nextMatches(\n          this.lookaheads[\"FieldListFollow\"],\n          this.lookaheads[\"FieldListEl\"]\n        )\n      ) {\n        fieldListFollow.push(this.createFieldListFollow());\n      }\n      return new FieldList0(cursor, fieldListEl, fieldListFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createFieldListFollow(): FieldListFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(FieldListFollow0.lookaheads())) {\n      this.expect(\";\");\n      const fieldListEl = this.createFieldListEl();\n      return new FieldListFollow0(cursor, fieldListEl);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createFieldListEl(): FieldListEl {\n    const cursor = this.cursor;\n    if (this.nextMatches(FieldListEl0.lookaheads())) {\n      const type = this.createType_();\n      const identifierList = this.createIdentifierList();\n      return new FieldListEl0(cursor, type, identifierList);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createProcDecl(): ProcDecl {\n    const cursor = this.cursor;\n    if (this.nextMatches(ProcDecl0.lookaheads())) {\n      this.expect(\"procedure\");\n      const identifier = this.createIdentifier();\n      let procDeclType: ProcDeclType | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"ProcDeclType\"])) {\n        procDeclType = this.createProcDeclType();\n      }\n      this.expect(\";\");\n      const clause = this.createClause();\n      return new ProcDecl0(cursor, identifier, procDeclType, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createProcDeclType(): ProcDeclType {\n    const cursor = this.cursor;\n    if (this.nextMatches(ProcDeclType0.lookaheads())) {\n      this.expect(\"(\");\n      let parameterList: ParameterList | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"ParameterList\"])) {\n        parameterList = this.createParameterList();\n      }\n      let returnTypex: ReturnTypex | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"ReturnTypex\"])) {\n        returnTypex = this.createReturnTypex();\n      }\n      this.expect(\")\");\n      return new ProcDeclType0(cursor, parameterList, returnTypex);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createParameterList(): ParameterList {\n    const cursor = this.cursor;\n    if (this.nextMatches(ParameterList0.lookaheads())) {\n      const parameter = this.createParameter();\n      const parameterListFollow: ParameterListFollow[] = [];\n      while (\n        this.nextMatches(\n          this.lookaheads[\"ParameterListFollow\"],\n          this.lookaheads[\"Parameter\"]\n        )\n      ) {\n        parameterListFollow.push(this.createParameterListFollow());\n      }\n      return new ParameterList0(cursor, parameter, parameterListFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createParameterListFollow(): ParameterListFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(ParameterListFollow0.lookaheads())) {\n      this.expect(\";\");\n      const parameter = this.createParameter();\n      return new ParameterListFollow0(cursor, parameter);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createParameter(): Parameter {\n    const cursor = this.cursor;\n    if (this.nextMatches(Parameter0.lookaheads())) {\n      const type = this.createType_();\n      const identifierList = this.createIdentifierList();\n      return new Parameter0(cursor, type, identifierList);\n    } else if (this.nextMatches(Parameter1.lookaheads())) {\n      const structureDecl = this.createStructureDecl();\n      return new Parameter1(cursor, structureDecl);\n    } else if (this.nextMatches(Parameter2.lookaheads())) {\n      const procType = this.createProcType();\n      const identifierList = this.createIdentifierList();\n      return new Parameter2(cursor, procType, identifierList);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createProcType(): ProcType {\n    const cursor = this.cursor;\n    if (this.nextMatches(ProcType0.lookaheads())) {\n      this.expect(\"(\");\n      let ptypeList: PtypeList | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"PtypeList\"])) {\n        ptypeList = this.createPtypeList();\n      }\n      let returnTypex: ReturnTypex | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"ReturnTypex\"])) {\n        returnTypex = this.createReturnTypex();\n      }\n      this.expect(\")\");\n      return new ProcType0(cursor, ptypeList, returnTypex);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createReturnTypex(): ReturnTypex {\n    const cursor = this.cursor;\n    if (this.nextMatches(ReturnTypex0.lookaheads())) {\n      this.expect(\"->\");\n      const type = this.createType_();\n      return new ReturnTypex0(cursor, type);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createPtypeList(): PtypeList {\n    const cursor = this.cursor;\n    if (this.nextMatches(PtypeList0.lookaheads())) {\n      const ptypeListEl = this.createPtypeListEl();\n      const ptypeListFollow: PtypeListFollow[] = [];\n      while (this.nextMatches(this.lookaheads[\"PtypeListFollow\"])) {\n        ptypeListFollow.push(this.createPtypeListFollow());\n      }\n      return new PtypeList0(cursor, ptypeListEl, ptypeListFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createPtypeListFollow(): PtypeListFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(PtypeListFollow0.lookaheads())) {\n      this.expect(\",\");\n      const ptypeListEl = this.createPtypeListEl();\n      return new PtypeListFollow0(cursor, ptypeListEl);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createPtypeListEl(): PtypeListEl {\n    const cursor = this.cursor;\n    if (this.nextMatches(PtypeListEl0.lookaheads())) {\n      const type = this.createType_();\n      return new PtypeListEl0(cursor, type);\n    } else if (this.nextMatches(PtypeListEl1.lookaheads())) {\n      const procType = this.createProcType();\n      return new PtypeListEl1(cursor, procType);\n    } else if (this.nextMatches(PtypeListEl2.lookaheads())) {\n      const sDecl = this.createSDecl();\n      return new PtypeListEl2(cursor, sDecl);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createSDecl(): SDecl {\n    const cursor = this.cursor;\n    if (this.nextMatches(SDecl0.lookaheads())) {\n      this.expect(\"structure\");\n      this.expect(\"(\");\n      const type = this.createType_();\n      const sDeclFollow: SDeclFollow[] = [];\n      while (this.nextMatches(this.lookaheads[\"SDeclFollow\"])) {\n        sDeclFollow.push(this.createSDeclFollow());\n      }\n      this.expect(\")\");\n      return new SDecl0(cursor, type, sDeclFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createSDeclFollow(): SDeclFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(SDeclFollow0.lookaheads())) {\n      this.expect(\",\");\n      const type = this.createType_();\n      return new SDeclFollow0(cursor, type);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createForward(): Forward {\n    const cursor = this.cursor;\n    if (this.nextMatches(Forward0.lookaheads())) {\n      this.expect(\"forward\");\n      const identifier = this.createIdentifier();\n      let procType: ProcType | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"ProcType\"])) {\n        procType = this.createProcType();\n      }\n      return new Forward0(cursor, identifier, procType);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createIdentifierList(): IdentifierList {\n    const cursor = this.cursor;\n    if (this.nextMatches(IdentifierList0.lookaheads())) {\n      const identifier = this.createIdentifier();\n      const identifierListFollow: IdentifierListFollow[] = [];\n      while (this.nextMatches(this.lookaheads[\"IdentifierListFollow\"])) {\n        identifierListFollow.push(this.createIdentifierListFollow());\n      }\n      return new IdentifierList0(cursor, identifier, identifierListFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createIdentifierListFollow(): IdentifierListFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(IdentifierListFollow0.lookaheads())) {\n      this.expect(\",\");\n      const identifier = this.createIdentifier();\n      return new IdentifierListFollow0(cursor, identifier);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createClause(): Clause {\n    const cursor = this.cursor;\n    if (this.nextMatches(Clause0.lookaheads())) {\n      this.expect(\"if\");\n      const clause = this.createClause();\n      const ifClauseThen = this.createIfClauseThen();\n      return new Clause0(cursor, clause, ifClauseThen);\n    } else if (this.nextMatches(Clause1.lookaheads())) {\n      this.expect(\"repeat\");\n      const repeat = this.createClause();\n      this.expect(\"while\");\n      const whilex = this.createClause();\n      let clauseDo: ClauseDo | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"ClauseDo\"])) {\n        clauseDo = this.createClauseDo();\n      }\n      return new Clause1(cursor, repeat, whilex, clauseDo);\n    } else if (this.nextMatches(Clause2.lookaheads())) {\n      this.expect(\"while\");\n      const whilex = this.createClause();\n      this.expect(\"do\");\n      const dox = this.createClause();\n      return new Clause2(cursor, whilex, dox);\n    } else if (this.nextMatches(Clause3.lookaheads())) {\n      this.expect(\"for\");\n      const identifier = this.createIdentifier();\n      this.expect(\"=\");\n      const from = this.createClause();\n      this.expect(\"to\");\n      const to = this.createClause();\n      let clauseBy: ClauseBy | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"ClauseBy\"])) {\n        clauseBy = this.createClauseBy();\n      }\n      this.expect(\"do\");\n      const dox = this.createClause();\n      return new Clause3(cursor, identifier, from, to, clauseBy, dox);\n    } else if (this.nextMatches(Clause4.lookaheads())) {\n      this.expect(\"case\");\n      const casex = this.createClause();\n      this.expect(\"of\");\n      const caseList = this.createCaseList();\n      this.expect(\"default\");\n      this.expect(\":\");\n      const defaultx = this.createClause();\n      return new Clause4(cursor, casex, caseList, defaultx);\n    } else if (this.nextMatches(Clause5.lookaheads())) {\n      this.expect(\"abort\");\n      return new Clause5(cursor);\n    } else if (this.nextMatches(Clause6.lookaheads())) {\n      const writeClause = this.createWriteClause();\n      return new Clause6(cursor, writeClause);\n    } else if (this.nextMatches(Clause7.lookaheads())) {\n      const raster = this.createRaster();\n      return new Clause7(cursor, raster);\n    } else if (this.nextMatches(Clause8.lookaheads())) {\n      const expression = this.createExpression();\n      let clauseExprFollow: ClauseExprFollow | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"ClauseExprFollow\"])) {\n        clauseExprFollow = this.createClauseExprFollow();\n      }\n      return new Clause8(cursor, expression, clauseExprFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createClauseDo(): ClauseDo {\n    const cursor = this.cursor;\n    if (this.nextMatches(ClauseDo0.lookaheads())) {\n      this.expect(\"do\");\n      const clause = this.createClause();\n      return new ClauseDo0(cursor, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createClauseBy(): ClauseBy {\n    const cursor = this.cursor;\n    if (this.nextMatches(ClauseBy0.lookaheads())) {\n      this.expect(\"by\");\n      const clause = this.createClause();\n      return new ClauseBy0(cursor, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createClauseExprFollow(): ClauseExprFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(ClauseExprFollow0.lookaheads())) {\n      this.expect(\":=\");\n      const clause = this.createClause();\n      return new ClauseExprFollow0(cursor, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createIfClauseThen(): IfClauseThen {\n    const cursor = this.cursor;\n    if (this.nextMatches(IfClauseThen0.lookaheads())) {\n      this.expect(\"do\");\n      const clause = this.createClause();\n      return new IfClauseThen0(cursor, clause);\n    } else if (this.nextMatches(IfClauseThen1.lookaheads())) {\n      this.expect(\"then\");\n      const then = this.createClause();\n      this.expect(\"else\");\n      const elsex = this.createClause();\n      return new IfClauseThen1(cursor, then, elsex);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createCaseList(): CaseList {\n    const cursor = this.cursor;\n    if (this.nextMatches(CaseList0.lookaheads())) {\n      const caseListEl = this.createCaseListEl();\n      const caseListFollow: CaseListFollow[] = [];\n      while (\n        this.nextMatches(\n          this.lookaheads[\"CaseListFollow\"],\n          this.lookaheads[\"CaseListEl\"]\n        )\n      ) {\n        caseListFollow.push(this.createCaseListFollow());\n      }\n      return new CaseList0(cursor, caseListEl, caseListFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createCaseListFollow(): CaseListFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(CaseListFollow0.lookaheads())) {\n      this.expect(\";\");\n      const caseListEl = this.createCaseListEl();\n      return new CaseListFollow0(cursor, caseListEl);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createCaseListEl(): CaseListEl {\n    const cursor = this.cursor;\n    if (this.nextMatches(CaseListEl0.lookaheads())) {\n      const clauseList = this.createClauseList();\n      this.expect(\":\");\n      const clause = this.createClause();\n      return new CaseListEl0(cursor, clauseList, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createWriteClause(): WriteClause {\n    const cursor = this.cursor;\n    if (this.nextMatches(WriteClause0.lookaheads())) {\n      this.expect(\"write\");\n      const writeList = this.createWriteList();\n      return new WriteClause0(cursor, writeList);\n    } else if (this.nextMatches(WriteClause1.lookaheads())) {\n      this.expect(\"output\");\n      const clause = this.createClause();\n      this.expect(\",\");\n      const writeList = this.createWriteList();\n      return new WriteClause1(cursor, clause, writeList);\n    } else if (this.nextMatches(WriteClause2.lookaheads())) {\n      this.expect(\"out.byte\");\n      const clause = this.createClause();\n      this.expect(\",\");\n      const b = this.createClause();\n      this.expect(\",\");\n      const c = this.createClause();\n      return new WriteClause2(cursor, clause, b, c);\n    } else if (this.nextMatches(WriteClause3.lookaheads())) {\n      this.expect(\"out.16\");\n      const clause = this.createClause();\n      this.expect(\",\");\n      const b = this.createClause();\n      this.expect(\",\");\n      const c = this.createClause();\n      return new WriteClause3(cursor, clause, b, c);\n    } else if (this.nextMatches(WriteClause4.lookaheads())) {\n      this.expect(\"out.32\");\n      const clause = this.createClause();\n      this.expect(\",\");\n      const b = this.createClause();\n      return new WriteClause4(cursor, clause, b);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createWriteList(): WriteList {\n    const cursor = this.cursor;\n    if (this.nextMatches(WriteList0.lookaheads())) {\n      const writeListEl = this.createWriteListEl();\n      const writeListFollow: WriteListFollow[] = [];\n      while (this.nextMatches(this.lookaheads[\"WriteListFollow\"])) {\n        writeListFollow.push(this.createWriteListFollow());\n      }\n      return new WriteList0(cursor, writeListEl, writeListFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createWriteListFollow(): WriteListFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(WriteListFollow0.lookaheads())) {\n      this.expect(\",\");\n      const writeListEl = this.createWriteListEl();\n      return new WriteListFollow0(cursor, writeListEl);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createWriteListEl(): WriteListEl {\n    const cursor = this.cursor;\n    if (this.nextMatches(WriteListEl0.lookaheads())) {\n      const clause = this.createClause();\n      let writeListElFollow: WriteListElFollow | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"WriteListElFollow\"])) {\n        writeListElFollow = this.createWriteListElFollow();\n      }\n      return new WriteListEl0(cursor, clause, writeListElFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createWriteListElFollow(): WriteListElFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(WriteListElFollow0.lookaheads())) {\n      this.expect(\":\");\n      const clause = this.createClause();\n      return new WriteListElFollow0(cursor, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createRaster(): Raster {\n    const cursor = this.cursor;\n    if (this.nextMatches(Raster0.lookaheads())) {\n      const rasterOp = this.createRasterOp();\n      const thisx = this.createClause();\n      this.expect(\"onto\");\n      const that = this.createClause();\n      return new Raster0(cursor, rasterOp, thisx, that);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createRasterOp(): RasterOp {\n    const cursor = this.cursor;\n    if (this.nextMatches(RasterOp0.lookaheads())) {\n      this.expect(\"ror\");\n      return new RasterOp0(cursor);\n    } else if (this.nextMatches(RasterOp1.lookaheads())) {\n      this.expect(\"rand\");\n      return new RasterOp1(cursor);\n    } else if (this.nextMatches(RasterOp2.lookaheads())) {\n      this.expect(\"xor\");\n      return new RasterOp2(cursor);\n    } else if (this.nextMatches(RasterOp3.lookaheads())) {\n      this.expect(\"copy\");\n      return new RasterOp3(cursor);\n    } else if (this.nextMatches(RasterOp4.lookaheads())) {\n      this.expect(\"nand\");\n      return new RasterOp4(cursor);\n    } else if (this.nextMatches(RasterOp5.lookaheads())) {\n      this.expect(\"nor\");\n      return new RasterOp5(cursor);\n    } else if (this.nextMatches(RasterOp6.lookaheads())) {\n      this.expect(\"not\");\n      return new RasterOp6(cursor);\n    } else if (this.nextMatches(RasterOp7.lookaheads())) {\n      this.expect(\"xnor\");\n      return new RasterOp7(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createClauseList(): ClauseList {\n    const cursor = this.cursor;\n    if (this.nextMatches(ClauseList0.lookaheads())) {\n      const clause = this.createClause();\n      const clauseListFollow: ClauseListFollow[] = [];\n      while (this.nextMatches(this.lookaheads[\"ClauseListFollow\"])) {\n        clauseListFollow.push(this.createClauseListFollow());\n      }\n      return new ClauseList0(cursor, clause, clauseListFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createClauseListFollow(): ClauseListFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(ClauseListFollow0.lookaheads())) {\n      this.expect(\",\");\n      const clause = this.createClause();\n      return new ClauseListFollow0(cursor, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExpression(): Expression {\n    const cursor = this.cursor;\n    if (this.nextMatches(Expression0.lookaheads())) {\n      const exp1 = this.createExp1();\n      const expressionFollow: ExpressionFollow[] = [];\n      while (this.nextMatches(this.lookaheads[\"ExpressionFollow\"])) {\n        expressionFollow.push(this.createExpressionFollow());\n      }\n      return new Expression0(cursor, exp1, expressionFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExpressionFollow(): ExpressionFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(ExpressionFollow0.lookaheads())) {\n      this.expect(\"or\");\n      const exp1 = this.createExp1();\n      return new ExpressionFollow0(cursor, exp1);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp1(): Exp1 {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp10.lookaheads())) {\n      const exp2 = this.createExp2();\n      const exp1Follow: Exp1Follow[] = [];\n      while (this.nextMatches(this.lookaheads[\"Exp1Follow\"])) {\n        exp1Follow.push(this.createExp1Follow());\n      }\n      return new Exp10(cursor, exp2, exp1Follow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp1Follow(): Exp1Follow {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp1Follow0.lookaheads())) {\n      this.expect(\"and\");\n      const exp2 = this.createExp2();\n      return new Exp1Follow0(cursor, exp2);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp2(): Exp2 {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp20.lookaheads())) {\n      const exp2Tilde = this.createExp2Tilde();\n      const exp3 = this.createExp3();\n      const exp2Op: Exp2Op[] = [];\n      while (this.nextMatches(this.lookaheads[\"Exp2Op\"])) {\n        exp2Op.push(this.createExp2Op());\n      }\n      return new Exp20(cursor, exp2Tilde, exp3, exp2Op);\n    } else if (this.nextMatches(Exp21.lookaheads())) {\n      const exp3 = this.createExp3();\n      const exp2Op: Exp2Op[] = [];\n      while (this.nextMatches(this.lookaheads[\"Exp2Op\"])) {\n        exp2Op.push(this.createExp2Op());\n      }\n      return new Exp21(cursor, exp3, exp2Op);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp2Tilde(): Exp2Tilde {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp2Tilde0.lookaheads())) {\n      this.expect(\"~\");\n      return new Exp2Tilde0(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp2Op(): Exp2Op {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp2Op0.lookaheads())) {\n      const relOp = this.createRelOp();\n      const exp3 = this.createExp3();\n      return new Exp2Op0(cursor, relOp, exp3);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp3(): Exp3 {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp30.lookaheads())) {\n      const exp4 = this.createExp4();\n      const exp3Op: Exp3Op[] = [];\n      while (this.nextMatches(this.lookaheads[\"Exp3Op\"])) {\n        exp3Op.push(this.createExp3Op());\n      }\n      return new Exp30(cursor, exp4, exp3Op);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp3Op(): Exp3Op {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp3Op0.lookaheads())) {\n      const addOp = this.createAddOp();\n      const exp4 = this.createExp4();\n      return new Exp3Op0(cursor, addOp, exp4);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp4(): Exp4 {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp40.lookaheads())) {\n      const exp5 = this.createExp5();\n      const exp4Op: Exp4Op[] = [];\n      while (this.nextMatches(this.lookaheads[\"Exp4Op\"])) {\n        exp4Op.push(this.createExp4Op());\n      }\n      return new Exp40(cursor, exp5, exp4Op);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp4Op(): Exp4Op {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp4Op0.lookaheads())) {\n      const multOp = this.createMultOp();\n      const exp5 = this.createExp5();\n      return new Exp4Op0(cursor, multOp, exp5);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp5(): Exp5 {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp50.lookaheads())) {\n      const addOp = this.createAddOp();\n      const exp6 = this.createExp6();\n      const exp5Follow: Exp5Follow[] = [];\n      while (this.nextMatches(this.lookaheads[\"Exp5Follow\"])) {\n        exp5Follow.push(this.createExp5Follow());\n      }\n      return new Exp50(cursor, addOp, exp6, exp5Follow);\n    } else if (this.nextMatches(Exp51.lookaheads())) {\n      const exp6 = this.createExp6();\n      const exp5Follow: Exp5Follow[] = [];\n      while (this.nextMatches(this.lookaheads[\"Exp5Follow\"])) {\n        exp5Follow.push(this.createExp5Follow());\n      }\n      return new Exp51(cursor, exp6, exp5Follow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp5Follow(): Exp5Follow {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp5Follow0.lookaheads())) {\n      this.expect(\"(\");\n      const expressionArg = this.createExpressionArg();\n      this.expect(\")\");\n      return new Exp5Follow0(cursor, expressionArg);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExpressionArg(): ExpressionArg {\n    const cursor = this.cursor;\n    if (this.nextMatches(ExpressionArg0.lookaheads())) {\n      const clause = this.createClause();\n      let expressionArgFollow: ExpressionArgFollow | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"ExpressionArgFollow\"])) {\n        expressionArgFollow = this.createExpressionArgFollow();\n      }\n      return new ExpressionArg0(cursor, clause, expressionArgFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExpressionArgFollow(): ExpressionArgFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(ExpressionArgFollow0.lookaheads())) {\n      this.expect(\"|\");\n      const clause = this.createClause();\n      return new ExpressionArgFollow0(cursor, clause);\n    } else if (this.nextMatches(ExpressionArgFollow1.lookaheads())) {\n      this.expect(\",\");\n      const clauseList = this.createClauseList();\n      return new ExpressionArgFollow1(cursor, clauseList);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createExp6(): Exp6 {\n    const cursor = this.cursor;\n    if (this.nextMatches(Exp60.lookaheads())) {\n      this.expect(\"(\");\n      const clause = this.createClause();\n      this.expect(\")\");\n      return new Exp60(cursor, clause);\n    } else if (this.nextMatches(Exp61.lookaheads())) {\n      this.expect(\"begin\");\n      let sequence: Sequence | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"Sequence\"])) {\n        sequence = this.createSequence();\n      }\n      this.expect(\"end\");\n      return new Exp61(cursor, sequence);\n    } else if (this.nextMatches(Exp62.lookaheads())) {\n      this.expect(\"{\");\n      let sequence: Sequence | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"Sequence\"])) {\n        sequence = this.createSequence();\n      }\n      this.expect(\"}\");\n      return new Exp62(cursor, sequence);\n    } else if (this.nextMatches(Exp63.lookaheads())) {\n      const standardExp = this.createStandardExp();\n      return new Exp63(cursor, standardExp);\n    } else if (this.nextMatches(Exp64.lookaheads())) {\n      const literal = this.createLiteral();\n      return new Exp64(cursor, literal);\n    } else if (this.nextMatches(Exp65.lookaheads())) {\n      const valueConstructor = this.createValueConstructor();\n      return new Exp65(cursor, valueConstructor);\n    } else if (this.nextMatches(Exp66.lookaheads())) {\n      const identifier = this.createIdentifier();\n      return new Exp66(cursor, identifier);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createValueConstructor(): ValueConstructor {\n    const cursor = this.cursor;\n    if (this.nextMatches(ValueConstructor0.lookaheads())) {\n      const vectorConstr = this.createVectorConstr();\n      return new ValueConstructor0(cursor, vectorConstr);\n    } else if (this.nextMatches(ValueConstructor1.lookaheads())) {\n      const imageConstr = this.createImageConstr();\n      return new ValueConstructor1(cursor, imageConstr);\n    } else if (this.nextMatches(ValueConstructor2.lookaheads())) {\n      const subimageConstr = this.createSubimageConstr();\n      return new ValueConstructor2(cursor, subimageConstr);\n    } else if (this.nextMatches(ValueConstructor3.lookaheads())) {\n      const pictureConstr = this.createPictureConstr();\n      return new ValueConstructor3(cursor, pictureConstr);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createVectorConstr(): VectorConstr {\n    const cursor = this.cursor;\n    if (this.nextMatches(VectorConstr0.lookaheads())) {\n      this.expect(\"vector\");\n      const range = this.createRange();\n      this.expect(\"of\");\n      const clause = this.createClause();\n      return new VectorConstr0(cursor, range, clause);\n    } else if (this.nextMatches(VectorConstr1.lookaheads())) {\n      this.expect(\"@\");\n      const clause = this.createClause();\n      this.expect(\"of\");\n      const type = this.createType_();\n      this.expect(\"[\");\n      const b = this.createClause();\n      const vectorConstrFollow: VectorConstrFollow[] = [];\n      while (this.nextMatches(this.lookaheads[\"VectorConstrFollow\"])) {\n        vectorConstrFollow.push(this.createVectorConstrFollow());\n      }\n      this.expect(\"]\");\n      return new VectorConstr1(cursor, clause, type, b, vectorConstrFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createVectorConstrFollow(): VectorConstrFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(VectorConstrFollow0.lookaheads())) {\n      this.expect(\",\");\n      const clause = this.createClause();\n      return new VectorConstrFollow0(cursor, clause);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createRange(): Range {\n    const cursor = this.cursor;\n    if (this.nextMatches(Range0.lookaheads())) {\n      const rangeEl = this.createRangeEl();\n      const rangeFollow: RangeFollow[] = [];\n      while (this.nextMatches(this.lookaheads[\"RangeFollow\"])) {\n        rangeFollow.push(this.createRangeFollow());\n      }\n      return new Range0(cursor, rangeEl, rangeFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createRangeFollow(): RangeFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(RangeFollow0.lookaheads())) {\n      this.expect(\",\");\n      const rangeEl = this.createRangeEl();\n      return new RangeFollow0(cursor, rangeEl);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createRangeEl(): RangeEl {\n    const cursor = this.cursor;\n    if (this.nextMatches(RangeEl0.lookaheads())) {\n      const a = this.createClause();\n      this.expect(\"::\");\n      const b = this.createClause();\n      return new RangeEl0(cursor, a, b);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createImageConstr(): ImageConstr {\n    const cursor = this.cursor;\n    if (this.nextMatches(ImageConstr0.lookaheads())) {\n      this.expect(\"image\");\n      const image = this.createClause();\n      this.expect(\"by\");\n      const by = this.createClause();\n      this.expect(\"of\");\n      const of = this.createClause();\n      return new ImageConstr0(cursor, image, by, of);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createSubimageConstr(): SubimageConstr {\n    const cursor = this.cursor;\n    if (this.nextMatches(SubimageConstr0.lookaheads())) {\n      this.expect(\"limit\");\n      const clause = this.createClause();\n      let subimageConstrMid: SubimageConstrMid | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"SubimageConstrMid\"])) {\n        subimageConstrMid = this.createSubimageConstrMid();\n      }\n      let subimageConstrEnd: SubimageConstrEnd | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"SubimageConstrEnd\"])) {\n        subimageConstrEnd = this.createSubimageConstrEnd();\n      }\n      return new SubimageConstr0(\n        cursor,\n        clause,\n        subimageConstrMid,\n        subimageConstrEnd\n      );\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createSubimageConstrMid(): SubimageConstrMid {\n    const cursor = this.cursor;\n    if (this.nextMatches(SubimageConstrMid0.lookaheads())) {\n      this.expect(\"to\");\n      const to = this.createClause();\n      this.expect(\"by\");\n      const by = this.createClause();\n      return new SubimageConstrMid0(cursor, to, by);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createSubimageConstrEnd(): SubimageConstrEnd {\n    const cursor = this.cursor;\n    if (this.nextMatches(SubimageConstrEnd0.lookaheads())) {\n      this.expect(\"at\");\n      const at1 = this.createClause();\n      this.expect(\",\");\n      const at2 = this.createClause();\n      return new SubimageConstrEnd0(cursor, at1, at2);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createPictureConstr(): PictureConstr {\n    const cursor = this.cursor;\n    if (this.nextMatches(PictureConstr0.lookaheads())) {\n      this.expect(\"shift\");\n      const clause = this.createClause();\n      this.expect(\"by\");\n      const b = this.createClause();\n      this.expect(\",\");\n      const c = this.createClause();\n      return new PictureConstr0(cursor, clause, b, c);\n    } else if (this.nextMatches(PictureConstr1.lookaheads())) {\n      this.expect(\"scale\");\n      const clause = this.createClause();\n      this.expect(\"by\");\n      const b = this.createClause();\n      this.expect(\",\");\n      const c = this.createClause();\n      return new PictureConstr1(cursor, clause, b, c);\n    } else if (this.nextMatches(PictureConstr2.lookaheads())) {\n      this.expect(\"rotate\");\n      const clause = this.createClause();\n      this.expect(\"by\");\n      const b = this.createClause();\n      return new PictureConstr2(cursor, clause, b);\n    } else if (this.nextMatches(PictureConstr3.lookaheads())) {\n      this.expect(\"colour\");\n      const clause = this.createClause();\n      this.expect(\"in\");\n      const b = this.createClause();\n      return new PictureConstr3(cursor, clause, b);\n    } else if (this.nextMatches(PictureConstr4.lookaheads())) {\n      this.expect(\"text\");\n      const clause = this.createClause();\n      this.expect(\"from\");\n      const b = this.createClause();\n      this.expect(\",\");\n      const c = this.createClause();\n      this.expect(\"to\");\n      const d = this.createClause();\n      this.expect(\",\");\n      const e = this.createClause();\n      return new PictureConstr4(cursor, clause, b, c, d, e);\n    } else if (this.nextMatches(PictureConstr5.lookaheads())) {\n      this.expect(\"[\");\n      const clause = this.createClause();\n      this.expect(\",\");\n      const b = this.createClause();\n      this.expect(\"]\");\n      return new PictureConstr5(cursor, clause, b);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createLiteral(): Literal {\n    const cursor = this.cursor;\n    if (this.nextMatches(Literal0.lookaheads())) {\n      this.expect(\"nil\");\n      return new Literal0(cursor);\n    } else if (this.nextMatches(Literal1.lookaheads())) {\n      this.expect(\"nullfile\");\n      return new Literal1(cursor);\n    } else if (this.nextMatches(Literal2.lookaheads())) {\n      const integerLiteral = this.createIntegerLiteral();\n      return new Literal2(cursor, integerLiteral);\n    } else if (this.nextMatches(Literal3.lookaheads())) {\n      const booleanLiteral = this.createBooleanLiteral();\n      return new Literal3(cursor, booleanLiteral);\n    } else if (this.nextMatches(Literal4.lookaheads())) {\n      const string = this.createString_();\n      return new Literal4(cursor, string);\n    } else if (this.nextMatches(Literal5.lookaheads())) {\n      const pixelLiteral = this.createPixelLiteral();\n      return new Literal5(cursor, pixelLiteral);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createIntegerLiteral(): IntegerLiteral {\n    const cursor = this.cursor;\n    if (this.nextMatches(IntegerLiteral0.lookaheads())) {\n      const number = this.createNumber_();\n      return new IntegerLiteral0(cursor, number);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createBooleanLiteral(): BooleanLiteral {\n    const cursor = this.cursor;\n    if (this.nextMatches(BooleanLiteral0.lookaheads())) {\n      this.expect(\"true\");\n      return new BooleanLiteral0(cursor);\n    } else if (this.nextMatches(BooleanLiteral1.lookaheads())) {\n      this.expect(\"false\");\n      return new BooleanLiteral1(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createPixelLiteral(): PixelLiteral {\n    const cursor = this.cursor;\n    if (this.nextMatches(PixelLiteral0.lookaheads())) {\n      this.expect(\"on\");\n      let pixelLiteralFollow: PixelLiteralFollow | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"PixelLiteralFollow\"])) {\n        pixelLiteralFollow = this.createPixelLiteralFollow();\n      }\n      return new PixelLiteral0(cursor, pixelLiteralFollow);\n    } else if (this.nextMatches(PixelLiteral1.lookaheads())) {\n      this.expect(\"off\");\n      let pixelLiteralFollow: PixelLiteralFollow | void = undefined;\n      if (this.nextMatches(this.lookaheads[\"PixelLiteralFollow\"])) {\n        pixelLiteralFollow = this.createPixelLiteralFollow();\n      }\n      return new PixelLiteral1(cursor, pixelLiteralFollow);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createPixelLiteralFollow(): PixelLiteralFollow {\n    const cursor = this.cursor;\n    if (this.nextMatches(PixelLiteralFollow0.lookaheads())) {\n      this.expect(\"&\");\n      const pixelLiteral = this.createPixelLiteral();\n      return new PixelLiteralFollow0(cursor, pixelLiteral);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createAddOp(): AddOp {\n    const cursor = this.cursor;\n    if (this.nextMatches(AddOp0.lookaheads())) {\n      this.expect(\"+\");\n      return new AddOp0(cursor);\n    } else if (this.nextMatches(AddOp1.lookaheads())) {\n      this.expect(\"-\");\n      return new AddOp1(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createMultOp(): MultOp {\n    const cursor = this.cursor;\n    if (this.nextMatches(MultOp0.lookaheads())) {\n      this.expect(\"++\");\n      return new MultOp0(cursor);\n    } else if (this.nextMatches(MultOp1.lookaheads())) {\n      this.expect(\"div\");\n      return new MultOp1(cursor);\n    } else if (this.nextMatches(MultOp2.lookaheads())) {\n      this.expect(\"rem\");\n      return new MultOp2(cursor);\n    } else if (this.nextMatches(MultOp3.lookaheads())) {\n      this.expect(\"*\");\n      return new MultOp3(cursor);\n    } else if (this.nextMatches(MultOp4.lookaheads())) {\n      this.expect(\"/\");\n      return new MultOp4(cursor);\n    } else if (this.nextMatches(MultOp5.lookaheads())) {\n      this.expect(\"^\");\n      return new MultOp5(cursor);\n    } else if (this.nextMatches(MultOp6.lookaheads())) {\n      this.expect(\"&\");\n      return new MultOp6(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createRelOp(): RelOp {\n    const cursor = this.cursor;\n    if (this.nextMatches(RelOp0.lookaheads())) {\n      const eqOp = this.createEqOp();\n      return new RelOp0(cursor, eqOp);\n    } else if (this.nextMatches(RelOp1.lookaheads())) {\n      const comparOp = this.createComparOp();\n      return new RelOp1(cursor, comparOp);\n    } else if (this.nextMatches(RelOp2.lookaheads())) {\n      const typeOp = this.createTypeOp();\n      return new RelOp2(cursor, typeOp);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createEqOp(): EqOp {\n    const cursor = this.cursor;\n    if (this.nextMatches(EqOp0.lookaheads())) {\n      this.expect(\"=\");\n      return new EqOp0(cursor);\n    } else if (this.nextMatches(EqOp1.lookaheads())) {\n      this.expect(\"~=\");\n      return new EqOp1(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createComparOp(): ComparOp {\n    const cursor = this.cursor;\n    if (this.nextMatches(ComparOp0.lookaheads())) {\n      this.expect(\"<=\");\n      return new ComparOp0(cursor);\n    } else if (this.nextMatches(ComparOp1.lookaheads())) {\n      this.expect(\"<\");\n      return new ComparOp1(cursor);\n    } else if (this.nextMatches(ComparOp2.lookaheads())) {\n      this.expect(\">=\");\n      return new ComparOp2(cursor);\n    } else if (this.nextMatches(ComparOp3.lookaheads())) {\n      this.expect(\">\");\n      return new ComparOp3(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createTypeOp(): TypeOp {\n    const cursor = this.cursor;\n    if (this.nextMatches(TypeOp0.lookaheads())) {\n      this.expect(\"is\");\n      return new TypeOp0(cursor);\n    } else if (this.nextMatches(TypeOp1.lookaheads())) {\n      this.expect(\"isnt\");\n      return new TypeOp1(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createIdentifier(): Identifier {\n    const cursor = this.cursor;\n    if (this.nextMatches(Identifier0.lookaheads())) {\n      const id = this.createId_();\n      return new Identifier0(cursor, id);\n    } else if (this.nextMatches(Identifier1.lookaheads())) {\n      const standardId = this.createStandardId();\n      return new Identifier1(cursor, standardId);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createStandardExp(): StandardExp {\n    const cursor = this.cursor;\n    if (this.nextMatches(StandardExp0.lookaheads())) {\n      const standardName = this.createStandardName();\n      return new StandardExp0(cursor, standardName);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createStandardName(): StandardName {\n    const cursor = this.cursor;\n    if (this.nextMatches(StandardName0.lookaheads())) {\n      this.expect(\"upb\");\n      return new StandardName0(cursor);\n    } else if (this.nextMatches(StandardName1.lookaheads())) {\n      this.expect(\"lwb\");\n      return new StandardName1(cursor);\n    } else if (this.nextMatches(StandardName2.lookaheads())) {\n      this.expect(\"eof\");\n      return new StandardName2(cursor);\n    } else if (this.nextMatches(StandardName3.lookaheads())) {\n      this.expect(\"read.a.line\");\n      return new StandardName3(cursor);\n    } else if (this.nextMatches(StandardName4.lookaheads())) {\n      this.expect(\"read\");\n      return new StandardName4(cursor);\n    } else if (this.nextMatches(StandardName5.lookaheads())) {\n      this.expect(\"readi\");\n      return new StandardName5(cursor);\n    } else if (this.nextMatches(StandardName6.lookaheads())) {\n      this.expect(\"readr\");\n      return new StandardName6(cursor);\n    } else if (this.nextMatches(StandardName7.lookaheads())) {\n      this.expect(\"readb\");\n      return new StandardName7(cursor);\n    } else if (this.nextMatches(StandardName8.lookaheads())) {\n      this.expect(\"peek\");\n      return new StandardName8(cursor);\n    } else if (this.nextMatches(StandardName9.lookaheads())) {\n      this.expect(\"reads\");\n      return new StandardName9(cursor);\n    } else if (this.nextMatches(StandardName10.lookaheads())) {\n      this.expect(\"read.name\");\n      return new StandardName10(cursor);\n    } else if (this.nextMatches(StandardName11.lookaheads())) {\n      this.expect(\"read.byte\");\n      return new StandardName11(cursor);\n    } else if (this.nextMatches(StandardName12.lookaheads())) {\n      this.expect(\"read.16\");\n      return new StandardName12(cursor);\n    } else if (this.nextMatches(StandardName13.lookaheads())) {\n      this.expect(\"read.32\");\n      return new StandardName13(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private createStandardId(): StandardId {\n    const cursor = this.cursor;\n    if (this.nextMatches(StandardId0.lookaheads())) {\n      this.expect(\"r.w\");\n      return new StandardId0(cursor);\n    } else if (this.nextMatches(StandardId1.lookaheads())) {\n      this.expect(\"i.w\");\n      return new StandardId1(cursor);\n    } else if (this.nextMatches(StandardId2.lookaheads())) {\n      this.expect(\"s.w\");\n      return new StandardId2(cursor);\n    } else if (this.nextMatches(StandardId3.lookaheads())) {\n      this.expect(\"s.o\");\n      return new StandardId3(cursor);\n    } else if (this.nextMatches(StandardId4.lookaheads())) {\n      this.expect(\"s.i\");\n      return new StandardId4(cursor);\n    } else if (this.nextMatches(StandardId5.lookaheads())) {\n      this.expect(\"maxint\");\n      return new StandardId5(cursor);\n    } else if (this.nextMatches(StandardId6.lookaheads())) {\n      this.expect(\"maxreal\");\n      return new StandardId6(cursor);\n    } else if (this.nextMatches(StandardId7.lookaheads())) {\n      this.expect(\"epsilon\");\n      return new StandardId7(cursor);\n    } else if (this.nextMatches(StandardId8.lookaheads())) {\n      this.expect(\"pi\");\n      return new StandardId8(cursor);\n    } else if (this.nextMatches(StandardId9.lookaheads())) {\n      this.expect(\"cursor\");\n      return new StandardId9(cursor);\n    } else if (this.nextMatches(StandardId10.lookaheads())) {\n      this.expect(\"screen\");\n      return new StandardId10(cursor);\n    } else throw new Error(\"Unexpected input\");\n  }\n  private lookaheads = {\n    Program: ([] as string[]).concat(Program0.lookaheads()),\n    Sequence: ([] as string[]).concat(Sequence0.lookaheads()),\n    SequenceFollow: ([] as string[]).concat(SequenceFollow0.lookaheads()),\n    SequenceEl: ([] as string[]).concat(\n      SequenceEl0.lookaheads(),\n      SequenceEl1.lookaheads()\n    ),\n    Declaration: ([] as string[]).concat(\n      Declaration0.lookaheads(),\n      Declaration1.lookaheads(),\n      Declaration2.lookaheads(),\n      Declaration3.lookaheads()\n    ),\n    LetDecl: ([] as string[]).concat(LetDecl0.lookaheads()),\n    InitOp: ([] as string[]).concat(InitOp0.lookaheads(), InitOp1.lookaheads()),\n    StructureDecl: ([] as string[]).concat(StructureDecl0.lookaheads()),\n    StructureDeclFields: ([] as string[]).concat(\n      StructureDeclFields0.lookaheads()\n    ),\n    FieldList: ([] as string[]).concat(FieldList0.lookaheads()),\n    FieldListFollow: ([] as string[]).concat(FieldListFollow0.lookaheads()),\n    FieldListEl: ([] as string[]).concat(FieldListEl0.lookaheads()),\n    ProcDecl: ([] as string[]).concat(ProcDecl0.lookaheads()),\n    ProcDeclType: ([] as string[]).concat(ProcDeclType0.lookaheads()),\n    ParameterList: ([] as string[]).concat(ParameterList0.lookaheads()),\n    ParameterListFollow: ([] as string[]).concat(\n      ParameterListFollow0.lookaheads()\n    ),\n    Parameter: ([] as string[]).concat(\n      Parameter0.lookaheads(),\n      Parameter1.lookaheads(),\n      Parameter2.lookaheads()\n    ),\n    ProcType: ([] as string[]).concat(ProcType0.lookaheads()),\n    ReturnTypex: ([] as string[]).concat(ReturnTypex0.lookaheads()),\n    PtypeList: ([] as string[]).concat(PtypeList0.lookaheads()),\n    PtypeListFollow: ([] as string[]).concat(PtypeListFollow0.lookaheads()),\n    PtypeListEl: ([] as string[]).concat(\n      PtypeListEl0.lookaheads(),\n      PtypeListEl1.lookaheads(),\n      PtypeListEl2.lookaheads()\n    ),\n    SDecl: ([] as string[]).concat(SDecl0.lookaheads()),\n    SDeclFollow: ([] as string[]).concat(SDeclFollow0.lookaheads()),\n    Forward: ([] as string[]).concat(Forward0.lookaheads()),\n    IdentifierList: ([] as string[]).concat(IdentifierList0.lookaheads()),\n    IdentifierListFollow: ([] as string[]).concat(\n      IdentifierListFollow0.lookaheads()\n    ),\n    Clause: ([] as string[]).concat(\n      Clause0.lookaheads(),\n      Clause1.lookaheads(),\n      Clause2.lookaheads(),\n      Clause3.lookaheads(),\n      Clause4.lookaheads(),\n      Clause5.lookaheads(),\n      Clause6.lookaheads(),\n      Clause7.lookaheads(),\n      Clause8.lookaheads()\n    ),\n    ClauseDo: ([] as string[]).concat(ClauseDo0.lookaheads()),\n    ClauseBy: ([] as string[]).concat(ClauseBy0.lookaheads()),\n    ClauseExprFollow: ([] as string[]).concat(ClauseExprFollow0.lookaheads()),\n    IfClauseThen: ([] as string[]).concat(\n      IfClauseThen0.lookaheads(),\n      IfClauseThen1.lookaheads()\n    ),\n    CaseList: ([] as string[]).concat(CaseList0.lookaheads()),\n    CaseListFollow: ([] as string[]).concat(CaseListFollow0.lookaheads()),\n    CaseListEl: ([] as string[]).concat(CaseListEl0.lookaheads()),\n    WriteClause: ([] as string[]).concat(\n      WriteClause0.lookaheads(),\n      WriteClause1.lookaheads(),\n      WriteClause2.lookaheads(),\n      WriteClause3.lookaheads(),\n      WriteClause4.lookaheads()\n    ),\n    WriteList: ([] as string[]).concat(WriteList0.lookaheads()),\n    WriteListFollow: ([] as string[]).concat(WriteListFollow0.lookaheads()),\n    WriteListEl: ([] as string[]).concat(WriteListEl0.lookaheads()),\n    WriteListElFollow: ([] as string[]).concat(WriteListElFollow0.lookaheads()),\n    Raster: ([] as string[]).concat(Raster0.lookaheads()),\n    RasterOp: ([] as string[]).concat(\n      RasterOp0.lookaheads(),\n      RasterOp1.lookaheads(),\n      RasterOp2.lookaheads(),\n      RasterOp3.lookaheads(),\n      RasterOp4.lookaheads(),\n      RasterOp5.lookaheads(),\n      RasterOp6.lookaheads(),\n      RasterOp7.lookaheads()\n    ),\n    ClauseList: ([] as string[]).concat(ClauseList0.lookaheads()),\n    ClauseListFollow: ([] as string[]).concat(ClauseListFollow0.lookaheads()),\n    Expression: ([] as string[]).concat(Expression0.lookaheads()),\n    ExpressionFollow: ([] as string[]).concat(ExpressionFollow0.lookaheads()),\n    Exp1: ([] as string[]).concat(Exp10.lookaheads()),\n    Exp1Follow: ([] as string[]).concat(Exp1Follow0.lookaheads()),\n    Exp2: ([] as string[]).concat(Exp20.lookaheads(), Exp21.lookaheads()),\n    Exp2Tilde: ([] as string[]).concat(Exp2Tilde0.lookaheads()),\n    Exp2Op: ([] as string[]).concat(Exp2Op0.lookaheads()),\n    Exp3: ([] as string[]).concat(Exp30.lookaheads()),\n    Exp3Op: ([] as string[]).concat(Exp3Op0.lookaheads()),\n    Exp4: ([] as string[]).concat(Exp40.lookaheads()),\n    Exp4Op: ([] as string[]).concat(Exp4Op0.lookaheads()),\n    Exp5: ([] as string[]).concat(Exp50.lookaheads(), Exp51.lookaheads()),\n    Exp5Follow: ([] as string[]).concat(Exp5Follow0.lookaheads()),\n    ExpressionArg: ([] as string[]).concat(ExpressionArg0.lookaheads()),\n    ExpressionArgFollow: ([] as string[]).concat(\n      ExpressionArgFollow0.lookaheads(),\n      ExpressionArgFollow1.lookaheads()\n    ),\n    Exp6: ([] as string[]).concat(\n      Exp60.lookaheads(),\n      Exp61.lookaheads(),\n      Exp62.lookaheads(),\n      Exp63.lookaheads(),\n      Exp64.lookaheads(),\n      Exp65.lookaheads(),\n      Exp66.lookaheads()\n    ),\n    ValueConstructor: ([] as string[]).concat(\n      ValueConstructor0.lookaheads(),\n      ValueConstructor1.lookaheads(),\n      ValueConstructor2.lookaheads(),\n      ValueConstructor3.lookaheads()\n    ),\n    VectorConstr: ([] as string[]).concat(\n      VectorConstr0.lookaheads(),\n      VectorConstr1.lookaheads()\n    ),\n    VectorConstrFollow: ([] as string[]).concat(\n      VectorConstrFollow0.lookaheads()\n    ),\n    Range: ([] as string[]).concat(Range0.lookaheads()),\n    RangeFollow: ([] as string[]).concat(RangeFollow0.lookaheads()),\n    RangeEl: ([] as string[]).concat(RangeEl0.lookaheads()),\n    ImageConstr: ([] as string[]).concat(ImageConstr0.lookaheads()),\n    SubimageConstr: ([] as string[]).concat(SubimageConstr0.lookaheads()),\n    SubimageConstrMid: ([] as string[]).concat(SubimageConstrMid0.lookaheads()),\n    SubimageConstrEnd: ([] as string[]).concat(SubimageConstrEnd0.lookaheads()),\n    PictureConstr: ([] as string[]).concat(\n      PictureConstr0.lookaheads(),\n      PictureConstr1.lookaheads(),\n      PictureConstr2.lookaheads(),\n      PictureConstr3.lookaheads(),\n      PictureConstr4.lookaheads(),\n      PictureConstr5.lookaheads()\n    ),\n    Literal: ([] as string[]).concat(\n      Literal0.lookaheads(),\n      Literal1.lookaheads(),\n      Literal2.lookaheads(),\n      Literal3.lookaheads(),\n      Literal4.lookaheads(),\n      Literal5.lookaheads()\n    ),\n    IntegerLiteral: ([] as string[]).concat(IntegerLiteral0.lookaheads()),\n    BooleanLiteral: ([] as string[]).concat(\n      BooleanLiteral0.lookaheads(),\n      BooleanLiteral1.lookaheads()\n    ),\n    PixelLiteral: ([] as string[]).concat(\n      PixelLiteral0.lookaheads(),\n      PixelLiteral1.lookaheads()\n    ),\n    PixelLiteralFollow: ([] as string[]).concat(\n      PixelLiteralFollow0.lookaheads()\n    ),\n    AddOp: ([] as string[]).concat(AddOp0.lookaheads(), AddOp1.lookaheads()),\n    MultOp: ([] as string[]).concat(\n      MultOp0.lookaheads(),\n      MultOp1.lookaheads(),\n      MultOp2.lookaheads(),\n      MultOp3.lookaheads(),\n      MultOp4.lookaheads(),\n      MultOp5.lookaheads(),\n      MultOp6.lookaheads()\n    ),\n    RelOp: ([] as string[]).concat(\n      RelOp0.lookaheads(),\n      RelOp1.lookaheads(),\n      RelOp2.lookaheads()\n    ),\n    EqOp: ([] as string[]).concat(EqOp0.lookaheads(), EqOp1.lookaheads()),\n    ComparOp: ([] as string[]).concat(\n      ComparOp0.lookaheads(),\n      ComparOp1.lookaheads(),\n      ComparOp2.lookaheads(),\n      ComparOp3.lookaheads()\n    ),\n    TypeOp: ([] as string[]).concat(TypeOp0.lookaheads(), TypeOp1.lookaheads()),\n    Identifier: ([] as string[]).concat(\n      Identifier0.lookaheads(),\n      Identifier1.lookaheads()\n    ),\n    StandardExp: ([] as string[]).concat(StandardExp0.lookaheads()),\n    StandardName: ([] as string[]).concat(\n      StandardName0.lookaheads(),\n      StandardName1.lookaheads(),\n      StandardName2.lookaheads(),\n      StandardName3.lookaheads(),\n      StandardName4.lookaheads(),\n      StandardName5.lookaheads(),\n      StandardName6.lookaheads(),\n      StandardName7.lookaheads(),\n      StandardName8.lookaheads(),\n      StandardName9.lookaheads(),\n      StandardName10.lookaheads(),\n      StandardName11.lookaheads(),\n      StandardName12.lookaheads(),\n      StandardName13.lookaheads()\n    ),\n    StandardId: ([] as string[]).concat(\n      StandardId0.lookaheads(),\n      StandardId1.lookaheads(),\n      StandardId2.lookaheads(),\n      StandardId3.lookaheads(),\n      StandardId4.lookaheads(),\n      StandardId5.lookaheads(),\n      StandardId6.lookaheads(),\n      StandardId7.lookaheads(),\n      StandardId8.lookaheads(),\n      StandardId9.lookaheads(),\n      StandardId10.lookaheads()\n    ),\n  };\n}\nexport class Program0 {\n  constructor(public pos: number, public sequence: Sequence) {}\n  static lookaheads(): string[] {\n    return [\n      \"let\",\n      \"structure\",\n      \"procedure\",\n      \"forward\",\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Program = Program0;\nexport class Sequence0 {\n  constructor(\n    public pos: number,\n    public sequenceEl: SequenceEl,\n    public sequenceFollow: SequenceFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"let\",\n      \"structure\",\n      \"procedure\",\n      \"forward\",\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Sequence = Sequence0;\nexport class SequenceFollow0 {\n  constructor(public pos: number, public sequenceEl: SequenceEl) {}\n  static lookaheads(): string[] {\n    return [\";\"];\n  }\n}\nexport type SequenceFollow = SequenceFollow0;\nexport class SequenceEl0 {\n  constructor(public pos: number, public declaration: Declaration) {}\n  static lookaheads(): string[] {\n    return [\"let\", \"structure\", \"procedure\", \"forward\"];\n  }\n}\nexport class SequenceEl1 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type SequenceEl = SequenceEl0 | SequenceEl1;\nexport class Declaration0 {\n  constructor(public pos: number, public letDecl: LetDecl) {}\n  static lookaheads(): string[] {\n    return [\"let\"];\n  }\n}\nexport class Declaration1 {\n  constructor(public pos: number, public structureDecl: StructureDecl) {}\n  static lookaheads(): string[] {\n    return [\"structure\"];\n  }\n}\nexport class Declaration2 {\n  constructor(public pos: number, public procDecl: ProcDecl) {}\n  static lookaheads(): string[] {\n    return [\"procedure\"];\n  }\n}\nexport class Declaration3 {\n  constructor(public pos: number, public forward: Forward) {}\n  static lookaheads(): string[] {\n    return [\"forward\"];\n  }\n}\nexport type Declaration =\n  | Declaration0\n  | Declaration1\n  | Declaration2\n  | Declaration3;\nexport class LetDecl0 {\n  constructor(\n    public pos: number,\n    public identifier: Identifier,\n    public initOp: InitOp,\n    public clause: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"let\"];\n  }\n}\nexport type LetDecl = LetDecl0;\nexport class InitOp0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"=\"];\n  }\n}\nexport class InitOp1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\":=\"];\n  }\n}\nexport type InitOp = InitOp0 | InitOp1;\nexport class StructureDecl0 {\n  constructor(\n    public pos: number,\n    public identifier: Identifier,\n    public structureDeclFields: StructureDeclFields | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\"structure\"];\n  }\n}\nexport type StructureDecl = StructureDecl0;\nexport class StructureDeclFields0 {\n  constructor(public pos: number, public fieldList: FieldList | void) {}\n  static lookaheads(): string[] {\n    return [\"(\"];\n  }\n}\nexport type StructureDeclFields = StructureDeclFields0;\nexport class FieldList0 {\n  constructor(\n    public pos: number,\n    public fieldListEl: FieldListEl,\n    public fieldListFollow: FieldListFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\"__TYPE\"];\n  }\n}\nexport type FieldList = FieldList0;\nexport class FieldListFollow0 {\n  constructor(public pos: number, public fieldListEl: FieldListEl) {}\n  static lookaheads(): string[] {\n    return [\";\"];\n  }\n}\nexport type FieldListFollow = FieldListFollow0;\nexport class FieldListEl0 {\n  constructor(\n    public pos: number,\n    public type: Type_,\n    public identifierList: IdentifierList\n  ) {}\n  static lookaheads(): string[] {\n    return [\"__TYPE\"];\n  }\n}\nexport type FieldListEl = FieldListEl0;\nexport class ProcDecl0 {\n  constructor(\n    public pos: number,\n    public identifier: Identifier,\n    public procDeclType: ProcDeclType | void,\n    public clause: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"procedure\"];\n  }\n}\nexport type ProcDecl = ProcDecl0;\nexport class ProcDeclType0 {\n  constructor(\n    public pos: number,\n    public parameterList: ParameterList | void,\n    public returnTypex: ReturnTypex | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\"(\"];\n  }\n}\nexport type ProcDeclType = ProcDeclType0;\nexport class ParameterList0 {\n  constructor(\n    public pos: number,\n    public parameter: Parameter,\n    public parameterListFollow: ParameterListFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\"__TYPE\", \"structure\", \"(\"];\n  }\n}\nexport type ParameterList = ParameterList0;\nexport class ParameterListFollow0 {\n  constructor(public pos: number, public parameter: Parameter) {}\n  static lookaheads(): string[] {\n    return [\";\"];\n  }\n}\nexport type ParameterListFollow = ParameterListFollow0;\nexport class Parameter0 {\n  constructor(\n    public pos: number,\n    public type: Type_,\n    public identifierList: IdentifierList\n  ) {}\n  static lookaheads(): string[] {\n    return [\"__TYPE\"];\n  }\n}\nexport class Parameter1 {\n  constructor(public pos: number, public structureDecl: StructureDecl) {}\n  static lookaheads(): string[] {\n    return [\"structure\"];\n  }\n}\nexport class Parameter2 {\n  constructor(\n    public pos: number,\n    public procType: ProcType,\n    public identifierList: IdentifierList\n  ) {}\n  static lookaheads(): string[] {\n    return [\"(\"];\n  }\n}\nexport type Parameter = Parameter0 | Parameter1 | Parameter2;\nexport class ProcType0 {\n  constructor(\n    public pos: number,\n    public ptypeList: PtypeList | void,\n    public returnTypex: ReturnTypex | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\"(\"];\n  }\n}\nexport type ProcType = ProcType0;\nexport class ReturnTypex0 {\n  constructor(public pos: number, public type: Type_) {}\n  static lookaheads(): string[] {\n    return [\"->\"];\n  }\n}\nexport type ReturnTypex = ReturnTypex0;\nexport class PtypeList0 {\n  constructor(\n    public pos: number,\n    public ptypeListEl: PtypeListEl,\n    public ptypeListFollow: PtypeListFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\"__TYPE\", \"(\", \"structure\"];\n  }\n}\nexport type PtypeList = PtypeList0;\nexport class PtypeListFollow0 {\n  constructor(public pos: number, public ptypeListEl: PtypeListEl) {}\n  static lookaheads(): string[] {\n    return [\",\"];\n  }\n}\nexport type PtypeListFollow = PtypeListFollow0;\nexport class PtypeListEl0 {\n  constructor(public pos: number, public type: Type_) {}\n  static lookaheads(): string[] {\n    return [\"__TYPE\"];\n  }\n}\nexport class PtypeListEl1 {\n  constructor(public pos: number, public procType: ProcType) {}\n  static lookaheads(): string[] {\n    return [\"(\"];\n  }\n}\nexport class PtypeListEl2 {\n  constructor(public pos: number, public sDecl: SDecl) {}\n  static lookaheads(): string[] {\n    return [\"structure\"];\n  }\n}\nexport type PtypeListEl = PtypeListEl0 | PtypeListEl1 | PtypeListEl2;\nexport class SDecl0 {\n  constructor(\n    public pos: number,\n    public type: Type_,\n    public sDeclFollow: SDeclFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\"structure\"];\n  }\n}\nexport type SDecl = SDecl0;\nexport class SDeclFollow0 {\n  constructor(public pos: number, public type: Type_) {}\n  static lookaheads(): string[] {\n    return [\",\"];\n  }\n}\nexport type SDeclFollow = SDeclFollow0;\nexport class Forward0 {\n  constructor(\n    public pos: number,\n    public identifier: Identifier,\n    public procType: ProcType | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\"forward\"];\n  }\n}\nexport type Forward = Forward0;\nexport class IdentifierList0 {\n  constructor(\n    public pos: number,\n    public identifier: Identifier,\n    public identifierListFollow: IdentifierListFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type IdentifierList = IdentifierList0;\nexport class IdentifierListFollow0 {\n  constructor(public pos: number, public identifier: Identifier) {}\n  static lookaheads(): string[] {\n    return [\",\"];\n  }\n}\nexport type IdentifierListFollow = IdentifierListFollow0;\nexport class Clause0 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public ifClauseThen: IfClauseThen\n  ) {}\n  static lookaheads(): string[] {\n    return [\"if\"];\n  }\n}\nexport class Clause1 {\n  constructor(\n    public pos: number,\n    public repeat: Clause,\n    public whilex: Clause,\n    public clauseDo: ClauseDo | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\"repeat\"];\n  }\n}\nexport class Clause2 {\n  constructor(public pos: number, public whilex: Clause, public dox: Clause) {}\n  static lookaheads(): string[] {\n    return [\"while\"];\n  }\n}\nexport class Clause3 {\n  constructor(\n    public pos: number,\n    public identifier: Identifier,\n    public from: Clause,\n    public to: Clause,\n    public clauseBy: ClauseBy | void,\n    public dox: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"for\"];\n  }\n}\nexport class Clause4 {\n  constructor(\n    public pos: number,\n    public casex: Clause,\n    public caseList: CaseList,\n    public defaultx: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"case\"];\n  }\n}\nexport class Clause5 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"abort\"];\n  }\n}\nexport class Clause6 {\n  constructor(public pos: number, public writeClause: WriteClause) {}\n  static lookaheads(): string[] {\n    return [\"write\", \"output\", \"out.byte\", \"out.16\", \"out.32\"];\n  }\n}\nexport class Clause7 {\n  constructor(public pos: number, public raster: Raster) {}\n  static lookaheads(): string[] {\n    return [\"ror\", \"rand\", \"xor\", \"copy\", \"nand\", \"nor\", \"not\", \"xnor\"];\n  }\n}\nexport class Clause8 {\n  constructor(\n    public pos: number,\n    public expression: Expression,\n    public clauseExprFollow: ClauseExprFollow | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Clause =\n  | Clause0\n  | Clause1\n  | Clause2\n  | Clause3\n  | Clause4\n  | Clause5\n  | Clause6\n  | Clause7\n  | Clause8;\nexport class ClauseDo0 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\"do\"];\n  }\n}\nexport type ClauseDo = ClauseDo0;\nexport class ClauseBy0 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\"by\"];\n  }\n}\nexport type ClauseBy = ClauseBy0;\nexport class ClauseExprFollow0 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\":=\"];\n  }\n}\nexport type ClauseExprFollow = ClauseExprFollow0;\nexport class IfClauseThen0 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\"do\"];\n  }\n}\nexport class IfClauseThen1 {\n  constructor(public pos: number, public then: Clause, public elsex: Clause) {}\n  static lookaheads(): string[] {\n    return [\"then\"];\n  }\n}\nexport type IfClauseThen = IfClauseThen0 | IfClauseThen1;\nexport class CaseList0 {\n  constructor(\n    public pos: number,\n    public caseListEl: CaseListEl,\n    public caseListFollow: CaseListFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type CaseList = CaseList0;\nexport class CaseListFollow0 {\n  constructor(public pos: number, public caseListEl: CaseListEl) {}\n  static lookaheads(): string[] {\n    return [\";\"];\n  }\n}\nexport type CaseListFollow = CaseListFollow0;\nexport class CaseListEl0 {\n  constructor(\n    public pos: number,\n    public clauseList: ClauseList,\n    public clause: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type CaseListEl = CaseListEl0;\nexport class WriteClause0 {\n  constructor(public pos: number, public writeList: WriteList) {}\n  static lookaheads(): string[] {\n    return [\"write\"];\n  }\n}\nexport class WriteClause1 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public writeList: WriteList\n  ) {}\n  static lookaheads(): string[] {\n    return [\"output\"];\n  }\n}\nexport class WriteClause2 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public b: Clause,\n    public c: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"out.byte\"];\n  }\n}\nexport class WriteClause3 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public b: Clause,\n    public c: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"out.16\"];\n  }\n}\nexport class WriteClause4 {\n  constructor(public pos: number, public clause: Clause, public b: Clause) {}\n  static lookaheads(): string[] {\n    return [\"out.32\"];\n  }\n}\nexport type WriteClause =\n  | WriteClause0\n  | WriteClause1\n  | WriteClause2\n  | WriteClause3\n  | WriteClause4;\nexport class WriteList0 {\n  constructor(\n    public pos: number,\n    public writeListEl: WriteListEl,\n    public writeListFollow: WriteListFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type WriteList = WriteList0;\nexport class WriteListFollow0 {\n  constructor(public pos: number, public writeListEl: WriteListEl) {}\n  static lookaheads(): string[] {\n    return [\",\"];\n  }\n}\nexport type WriteListFollow = WriteListFollow0;\nexport class WriteListEl0 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public writeListElFollow: WriteListElFollow | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type WriteListEl = WriteListEl0;\nexport class WriteListElFollow0 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\":\"];\n  }\n}\nexport type WriteListElFollow = WriteListElFollow0;\nexport class Raster0 {\n  constructor(\n    public pos: number,\n    public rasterOp: RasterOp,\n    public thisx: Clause,\n    public that: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"ror\", \"rand\", \"xor\", \"copy\", \"nand\", \"nor\", \"not\", \"xnor\"];\n  }\n}\nexport type Raster = Raster0;\nexport class RasterOp0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"ror\"];\n  }\n}\nexport class RasterOp1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"rand\"];\n  }\n}\nexport class RasterOp2 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"xor\"];\n  }\n}\nexport class RasterOp3 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"copy\"];\n  }\n}\nexport class RasterOp4 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"nand\"];\n  }\n}\nexport class RasterOp5 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"nor\"];\n  }\n}\nexport class RasterOp6 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"not\"];\n  }\n}\nexport class RasterOp7 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"xnor\"];\n  }\n}\nexport type RasterOp =\n  | RasterOp0\n  | RasterOp1\n  | RasterOp2\n  | RasterOp3\n  | RasterOp4\n  | RasterOp5\n  | RasterOp6\n  | RasterOp7;\nexport class ClauseList0 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public clauseListFollow: ClauseListFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type ClauseList = ClauseList0;\nexport class ClauseListFollow0 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\",\"];\n  }\n}\nexport type ClauseListFollow = ClauseListFollow0;\nexport class Expression0 {\n  constructor(\n    public pos: number,\n    public exp1: Exp1,\n    public expressionFollow: ExpressionFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Expression = Expression0;\nexport class ExpressionFollow0 {\n  constructor(public pos: number, public exp1: Exp1) {}\n  static lookaheads(): string[] {\n    return [\"or\"];\n  }\n}\nexport type ExpressionFollow = ExpressionFollow0;\nexport class Exp10 {\n  constructor(\n    public pos: number,\n    public exp2: Exp2,\n    public exp1Follow: Exp1Follow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Exp1 = Exp10;\nexport class Exp1Follow0 {\n  constructor(public pos: number, public exp2: Exp2) {}\n  static lookaheads(): string[] {\n    return [\"and\"];\n  }\n}\nexport type Exp1Follow = Exp1Follow0;\nexport class Exp20 {\n  constructor(\n    public pos: number,\n    public exp2Tilde: Exp2Tilde,\n    public exp3: Exp3,\n    public exp2Op: Exp2Op[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\"~\"];\n  }\n}\nexport class Exp21 {\n  constructor(public pos: number, public exp3: Exp3, public exp2Op: Exp2Op[]) {}\n  static lookaheads(): string[] {\n    return [\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Exp2 = Exp20 | Exp21;\nexport class Exp2Tilde0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"~\"];\n  }\n}\nexport type Exp2Tilde = Exp2Tilde0;\nexport class Exp2Op0 {\n  constructor(public pos: number, public relOp: RelOp, public exp3: Exp3) {}\n  static lookaheads(): string[] {\n    return [\"=\", \"~=\", \"<=\", \"<\", \">=\", \">\", \"is\", \"isnt\"];\n  }\n}\nexport type Exp2Op = Exp2Op0;\nexport class Exp30 {\n  constructor(public pos: number, public exp4: Exp4, public exp3Op: Exp3Op[]) {}\n  static lookaheads(): string[] {\n    return [\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Exp3 = Exp30;\nexport class Exp3Op0 {\n  constructor(public pos: number, public addOp: AddOp, public exp4: Exp4) {}\n  static lookaheads(): string[] {\n    return [\"+\", \"-\"];\n  }\n}\nexport type Exp3Op = Exp3Op0;\nexport class Exp40 {\n  constructor(public pos: number, public exp5: Exp5, public exp4Op: Exp4Op[]) {}\n  static lookaheads(): string[] {\n    return [\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Exp4 = Exp40;\nexport class Exp4Op0 {\n  constructor(public pos: number, public multOp: MultOp, public exp5: Exp5) {}\n  static lookaheads(): string[] {\n    return [\"++\", \"div\", \"rem\", \"*\", \"/\", \"^\", \"&\"];\n  }\n}\nexport type Exp4Op = Exp4Op0;\nexport class Exp50 {\n  constructor(\n    public pos: number,\n    public addOp: AddOp,\n    public exp6: Exp6,\n    public exp5Follow: Exp5Follow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\"+\", \"-\"];\n  }\n}\nexport class Exp51 {\n  constructor(\n    public pos: number,\n    public exp6: Exp6,\n    public exp5Follow: Exp5Follow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Exp5 = Exp50 | Exp51;\nexport class Exp5Follow0 {\n  constructor(public pos: number, public expressionArg: ExpressionArg) {}\n  static lookaheads(): string[] {\n    return [\"(\"];\n  }\n}\nexport type Exp5Follow = Exp5Follow0;\nexport class ExpressionArg0 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public expressionArgFollow: ExpressionArgFollow | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type ExpressionArg = ExpressionArg0;\nexport class ExpressionArgFollow0 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\"|\"];\n  }\n}\nexport class ExpressionArgFollow1 {\n  constructor(public pos: number, public clauseList: ClauseList) {}\n  static lookaheads(): string[] {\n    return [\",\"];\n  }\n}\nexport type ExpressionArgFollow = ExpressionArgFollow0 | ExpressionArgFollow1;\nexport class Exp60 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\"(\"];\n  }\n}\nexport class Exp61 {\n  constructor(public pos: number, public sequence: Sequence | void) {}\n  static lookaheads(): string[] {\n    return [\"begin\"];\n  }\n}\nexport class Exp62 {\n  constructor(public pos: number, public sequence: Sequence | void) {}\n  static lookaheads(): string[] {\n    return [\"{\"];\n  }\n}\nexport class Exp63 {\n  constructor(public pos: number, public standardExp: StandardExp) {}\n  static lookaheads(): string[] {\n    return [\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n    ];\n  }\n}\nexport class Exp64 {\n  constructor(public pos: number, public literal: Literal) {}\n  static lookaheads(): string[] {\n    return [\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n    ];\n  }\n}\nexport class Exp65 {\n  constructor(public pos: number, public valueConstructor: ValueConstructor) {}\n  static lookaheads(): string[] {\n    return [\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n    ];\n  }\n}\nexport class Exp66 {\n  constructor(public pos: number, public identifier: Identifier) {}\n  static lookaheads(): string[] {\n    return [\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Exp6 = Exp60 | Exp61 | Exp62 | Exp63 | Exp64 | Exp65 | Exp66;\nexport class ValueConstructor0 {\n  constructor(public pos: number, public vectorConstr: VectorConstr) {}\n  static lookaheads(): string[] {\n    return [\"vector\", \"@\"];\n  }\n}\nexport class ValueConstructor1 {\n  constructor(public pos: number, public imageConstr: ImageConstr) {}\n  static lookaheads(): string[] {\n    return [\"image\"];\n  }\n}\nexport class ValueConstructor2 {\n  constructor(public pos: number, public subimageConstr: SubimageConstr) {}\n  static lookaheads(): string[] {\n    return [\"limit\"];\n  }\n}\nexport class ValueConstructor3 {\n  constructor(public pos: number, public pictureConstr: PictureConstr) {}\n  static lookaheads(): string[] {\n    return [\"shift\", \"scale\", \"rotate\", \"colour\", \"text\", \"[\"];\n  }\n}\nexport type ValueConstructor =\n  | ValueConstructor0\n  | ValueConstructor1\n  | ValueConstructor2\n  | ValueConstructor3;\nexport class VectorConstr0 {\n  constructor(public pos: number, public range: Range, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\"vector\"];\n  }\n}\nexport class VectorConstr1 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public type: Type_,\n    public b: Clause,\n    public vectorConstrFollow: VectorConstrFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\"@\"];\n  }\n}\nexport type VectorConstr = VectorConstr0 | VectorConstr1;\nexport class VectorConstrFollow0 {\n  constructor(public pos: number, public clause: Clause) {}\n  static lookaheads(): string[] {\n    return [\",\"];\n  }\n}\nexport type VectorConstrFollow = VectorConstrFollow0;\nexport class Range0 {\n  constructor(\n    public pos: number,\n    public rangeEl: RangeEl,\n    public rangeFollow: RangeFollow[]\n  ) {}\n  static lookaheads(): string[] {\n    return [\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Range = Range0;\nexport class RangeFollow0 {\n  constructor(public pos: number, public rangeEl: RangeEl) {}\n  static lookaheads(): string[] {\n    return [\",\"];\n  }\n}\nexport type RangeFollow = RangeFollow0;\nexport class RangeEl0 {\n  constructor(public pos: number, public a: Clause, public b: Clause) {}\n  static lookaheads(): string[] {\n    return [\n      \"if\",\n      \"repeat\",\n      \"while\",\n      \"for\",\n      \"case\",\n      \"abort\",\n      \"write\",\n      \"output\",\n      \"out.byte\",\n      \"out.16\",\n      \"out.32\",\n      \"ror\",\n      \"rand\",\n      \"xor\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"xnor\",\n      \"~\",\n      \"+\",\n      \"-\",\n      \"(\",\n      \"begin\",\n      \"{\",\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n      \"nil\",\n      \"nullfile\",\n      \"__NUMBER\",\n      \"true\",\n      \"false\",\n      \"__STRING\",\n      \"on\",\n      \"off\",\n      \"vector\",\n      \"@\",\n      \"image\",\n      \"limit\",\n      \"shift\",\n      \"scale\",\n      \"rotate\",\n      \"colour\",\n      \"text\",\n      \"[\",\n      \"__ID\",\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type RangeEl = RangeEl0;\nexport class ImageConstr0 {\n  constructor(\n    public pos: number,\n    public image: Clause,\n    public by: Clause,\n    public of: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"image\"];\n  }\n}\nexport type ImageConstr = ImageConstr0;\nexport class SubimageConstr0 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public subimageConstrMid: SubimageConstrMid | void,\n    public subimageConstrEnd: SubimageConstrEnd | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\"limit\"];\n  }\n}\nexport type SubimageConstr = SubimageConstr0;\nexport class SubimageConstrMid0 {\n  constructor(public pos: number, public to: Clause, public by: Clause) {}\n  static lookaheads(): string[] {\n    return [\"to\"];\n  }\n}\nexport type SubimageConstrMid = SubimageConstrMid0;\nexport class SubimageConstrEnd0 {\n  constructor(public pos: number, public at1: Clause, public at2: Clause) {}\n  static lookaheads(): string[] {\n    return [\"at\"];\n  }\n}\nexport type SubimageConstrEnd = SubimageConstrEnd0;\nexport class PictureConstr0 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public b: Clause,\n    public c: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"shift\"];\n  }\n}\nexport class PictureConstr1 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public b: Clause,\n    public c: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"scale\"];\n  }\n}\nexport class PictureConstr2 {\n  constructor(public pos: number, public clause: Clause, public b: Clause) {}\n  static lookaheads(): string[] {\n    return [\"rotate\"];\n  }\n}\nexport class PictureConstr3 {\n  constructor(public pos: number, public clause: Clause, public b: Clause) {}\n  static lookaheads(): string[] {\n    return [\"colour\"];\n  }\n}\nexport class PictureConstr4 {\n  constructor(\n    public pos: number,\n    public clause: Clause,\n    public b: Clause,\n    public c: Clause,\n    public d: Clause,\n    public e: Clause\n  ) {}\n  static lookaheads(): string[] {\n    return [\"text\"];\n  }\n}\nexport class PictureConstr5 {\n  constructor(public pos: number, public clause: Clause, public b: Clause) {}\n  static lookaheads(): string[] {\n    return [\"[\"];\n  }\n}\nexport type PictureConstr =\n  | PictureConstr0\n  | PictureConstr1\n  | PictureConstr2\n  | PictureConstr3\n  | PictureConstr4\n  | PictureConstr5;\nexport class Literal0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"nil\"];\n  }\n}\nexport class Literal1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"nullfile\"];\n  }\n}\nexport class Literal2 {\n  constructor(public pos: number, public integerLiteral: IntegerLiteral) {}\n  static lookaheads(): string[] {\n    return [\"__NUMBER\"];\n  }\n}\nexport class Literal3 {\n  constructor(public pos: number, public booleanLiteral: BooleanLiteral) {}\n  static lookaheads(): string[] {\n    return [\"true\", \"false\"];\n  }\n}\nexport class Literal4 {\n  constructor(public pos: number, public string: String_) {}\n  static lookaheads(): string[] {\n    return [\"__STRING\"];\n  }\n}\nexport class Literal5 {\n  constructor(public pos: number, public pixelLiteral: PixelLiteral) {}\n  static lookaheads(): string[] {\n    return [\"on\", \"off\"];\n  }\n}\nexport type Literal =\n  | Literal0\n  | Literal1\n  | Literal2\n  | Literal3\n  | Literal4\n  | Literal5;\nexport class IntegerLiteral0 {\n  constructor(public pos: number, public number: Number_) {}\n  static lookaheads(): string[] {\n    return [\"__NUMBER\"];\n  }\n}\nexport type IntegerLiteral = IntegerLiteral0;\nexport class BooleanLiteral0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"true\"];\n  }\n}\nexport class BooleanLiteral1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"false\"];\n  }\n}\nexport type BooleanLiteral = BooleanLiteral0 | BooleanLiteral1;\nexport class PixelLiteral0 {\n  constructor(\n    public pos: number,\n    public pixelLiteralFollow: PixelLiteralFollow | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\"on\"];\n  }\n}\nexport class PixelLiteral1 {\n  constructor(\n    public pos: number,\n    public pixelLiteralFollow: PixelLiteralFollow | void\n  ) {}\n  static lookaheads(): string[] {\n    return [\"off\"];\n  }\n}\nexport type PixelLiteral = PixelLiteral0 | PixelLiteral1;\nexport class PixelLiteralFollow0 {\n  constructor(public pos: number, public pixelLiteral: PixelLiteral) {}\n  static lookaheads(): string[] {\n    return [\"&\"];\n  }\n}\nexport type PixelLiteralFollow = PixelLiteralFollow0;\nexport class AddOp0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"+\"];\n  }\n}\nexport class AddOp1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"-\"];\n  }\n}\nexport type AddOp = AddOp0 | AddOp1;\nexport class MultOp0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"++\"];\n  }\n}\nexport class MultOp1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"div\"];\n  }\n}\nexport class MultOp2 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"rem\"];\n  }\n}\nexport class MultOp3 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"*\"];\n  }\n}\nexport class MultOp4 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"/\"];\n  }\n}\nexport class MultOp5 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"^\"];\n  }\n}\nexport class MultOp6 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"&\"];\n  }\n}\nexport type MultOp =\n  | MultOp0\n  | MultOp1\n  | MultOp2\n  | MultOp3\n  | MultOp4\n  | MultOp5\n  | MultOp6;\nexport class RelOp0 {\n  constructor(public pos: number, public eqOp: EqOp) {}\n  static lookaheads(): string[] {\n    return [\"=\", \"~=\"];\n  }\n}\nexport class RelOp1 {\n  constructor(public pos: number, public comparOp: ComparOp) {}\n  static lookaheads(): string[] {\n    return [\"<=\", \"<\", \">=\", \">\"];\n  }\n}\nexport class RelOp2 {\n  constructor(public pos: number, public typeOp: TypeOp) {}\n  static lookaheads(): string[] {\n    return [\"is\", \"isnt\"];\n  }\n}\nexport type RelOp = RelOp0 | RelOp1 | RelOp2;\nexport class EqOp0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"=\"];\n  }\n}\nexport class EqOp1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"~=\"];\n  }\n}\nexport type EqOp = EqOp0 | EqOp1;\nexport class ComparOp0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"<=\"];\n  }\n}\nexport class ComparOp1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"<\"];\n  }\n}\nexport class ComparOp2 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\">=\"];\n  }\n}\nexport class ComparOp3 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\">\"];\n  }\n}\nexport type ComparOp = ComparOp0 | ComparOp1 | ComparOp2 | ComparOp3;\nexport class TypeOp0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"is\"];\n  }\n}\nexport class TypeOp1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"isnt\"];\n  }\n}\nexport type TypeOp = TypeOp0 | TypeOp1;\nexport class Identifier0 {\n  constructor(public pos: number, public id: Id_) {}\n  static lookaheads(): string[] {\n    return [\"__ID\"];\n  }\n}\nexport class Identifier1 {\n  constructor(public pos: number, public standardId: StandardId) {}\n  static lookaheads(): string[] {\n    return [\n      \"r.w\",\n      \"i.w\",\n      \"s.w\",\n      \"s.o\",\n      \"s.i\",\n      \"maxint\",\n      \"maxreal\",\n      \"epsilon\",\n      \"pi\",\n      \"cursor\",\n      \"screen\",\n    ];\n  }\n}\nexport type Identifier = Identifier0 | Identifier1;\nexport class StandardExp0 {\n  constructor(public pos: number, public standardName: StandardName) {}\n  static lookaheads(): string[] {\n    return [\n      \"upb\",\n      \"lwb\",\n      \"eof\",\n      \"read.a.line\",\n      \"read\",\n      \"readi\",\n      \"readr\",\n      \"readb\",\n      \"peek\",\n      \"reads\",\n      \"read.name\",\n      \"read.byte\",\n      \"read.16\",\n      \"read.32\",\n    ];\n  }\n}\nexport type StandardExp = StandardExp0;\nexport class StandardName0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"upb\"];\n  }\n}\nexport class StandardName1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"lwb\"];\n  }\n}\nexport class StandardName2 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"eof\"];\n  }\n}\nexport class StandardName3 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"read.a.line\"];\n  }\n}\nexport class StandardName4 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"read\"];\n  }\n}\nexport class StandardName5 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"readi\"];\n  }\n}\nexport class StandardName6 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"readr\"];\n  }\n}\nexport class StandardName7 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"readb\"];\n  }\n}\nexport class StandardName8 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"peek\"];\n  }\n}\nexport class StandardName9 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"reads\"];\n  }\n}\nexport class StandardName10 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"read.name\"];\n  }\n}\nexport class StandardName11 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"read.byte\"];\n  }\n}\nexport class StandardName12 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"read.16\"];\n  }\n}\nexport class StandardName13 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"read.32\"];\n  }\n}\nexport type StandardName =\n  | StandardName0\n  | StandardName1\n  | StandardName2\n  | StandardName3\n  | StandardName4\n  | StandardName5\n  | StandardName6\n  | StandardName7\n  | StandardName8\n  | StandardName9\n  | StandardName10\n  | StandardName11\n  | StandardName12\n  | StandardName13;\nexport class StandardId0 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"r.w\"];\n  }\n}\nexport class StandardId1 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"i.w\"];\n  }\n}\nexport class StandardId2 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"s.w\"];\n  }\n}\nexport class StandardId3 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"s.o\"];\n  }\n}\nexport class StandardId4 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"s.i\"];\n  }\n}\nexport class StandardId5 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"maxint\"];\n  }\n}\nexport class StandardId6 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"maxreal\"];\n  }\n}\nexport class StandardId7 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"epsilon\"];\n  }\n}\nexport class StandardId8 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"pi\"];\n  }\n}\nexport class StandardId9 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"cursor\"];\n  }\n}\nexport class StandardId10 {\n  constructor(public pos: number) {}\n  static lookaheads(): string[] {\n    return [\"screen\"];\n  }\n}\nexport type StandardId =\n  | StandardId0\n  | StandardId1\n  | StandardId2\n  | StandardId3\n  | StandardId4\n  | StandardId5\n  | StandardId6\n  | StandardId7\n  | StandardId8\n  | StandardId9\n  | StandardId10;\n","export const program = `! Escher's Square Limit.  Adapted 2020\n\ndraw.scale(610, 410)\n\nprocedure mp(-> pic)\nbegin\n  let i = nil; let it := nil\n  it := nil; d.nl(it, 0, 3); d.nl(it, 3, 4); d.nl(it, 0, 8); d.nl(it, 0, 3); d.ad(it, i)\n  it := nil; d.nl(it, 0, 3); d.nl(it, 3, 4); d.nl(it, 0, 8); d.nl(it, 0, 3); d.ad(it, i)\n  it := nil; d.nl(it, 6, 0); d.nl(it, 4, 4); d.ad(it, i)\n  it := nil; d.nl(it, 4, 5); d.nl(it, 7, 6); d.nl(it, 4, 10); d.nl(it, 4, 5); d.ad(it, i)\n  it := nil; d.nl(it, 11, 0); d.nl(it, 10, 4); d.nl(it, 9, 6); d.nl(it, 8, 8); d.nl(it, 4, 13); d.nl(it, 0, 16); d.ad(it, i)\n  it := nil; d.nl(it, 11, 0); d.nl(it, 14, 2); d.nl(it, 16, 2); d.ad(it, i)\n  it := nil; d.nl(it, 10, 4); d.nl(it, 13, 5); d.nl(it, 16, 4); d.ad(it, i)\n  it := nil; d.nl(it, 9, 6); d.nl(it, 12, 7); d.nl(it, 16, 6); d.ad(it, i)\n  it := nil; d.nl(it, 8, 8); d.nl(it, 12, 9); d.nl(it, 16, 8); d.ad(it, i)\n  it := nil; d.nl(it, 8, 12); d.nl(it, 16, 10); d.ad(it, i)\n  it := nil; d.nl(it, 0, 16); d.nl(it, 5, 15); d.nl(it, 8, 16); d.ad(it, i)\n  it := nil; d.nl(it, 8, 16); d.nl(it, 12, 12); d.nl(it, 16, 12); d.ad(it, i)\n  it := nil; d.nl(it, 10, 16); d.nl(it, 12, 14); d.nl(it, 16, 13); d.ad(it, i)\n  it := nil; d.nl(it, 12, 16); d.nl(it, 13, 15); d.nl(it, 16, 14); d.ad(it, i)\n  it := nil; d.nl(it, 14, 16); d.nl(it, 16, 15); d.ad(it, i)\n  scale i by 1/16, 1/16\nend\n\nprocedure mq(-> pic)\nbegin\n  let i = nil; let it := nil\n  it := nil; d.nl(it, 0, 12); d.nl(it, 3, 13); d.nl(it, 5, 14); d.nl(it, 7, 15); d.nl(it, 8, 16); d.ad(it, i)\n  it := nil; d.nl(it, 0, 0); d.nl(it, 0, 8); d.ad(it, i)\n  it := nil; d.nl(it, 0, 12); d.nl(it, 0, 16); d.ad(it, i)\n  it := nil; d.nl(it, 2, 16); d.nl(it, 3, 13); d.ad(it, i)\n  it := nil; d.nl(it, 4, 16); d.nl(it, 5, 14); d.ad(it, i)\n  it := nil; d.nl(it, 6, 16); d.nl(it, 7, 15); d.ad(it, i)\n  it := nil; d.nl(it, 0, 10); d.nl(it, 7, 11); d.ad(it, i)\n  it := nil; d.nl(it, 8, 15); d.nl(it, 11, 15); d.nl(it, 9, 13); d.nl(it, 8, 15); d.ad(it, i)\n  it := nil; d.nl(it, 9, 12); d.nl(it, 12, 12); d.nl(it, 10, 10); d.nl(it, 9, 12); d.ad(it, i)\n  it := nil; d.nl(it, 0, 8); d.nl(it, 4, 7); d.nl(it, 6, 7); d.nl(it, 8, 8); d.nl(it, 10, 9); d.nl(it, 12, 10); d.nl(it, 16, 16); d.ad(it, i)\n  it := nil; d.nl(it, 4, 7); d.nl(it, 4, 5); d.nl(it, 2, 0); d.ad(it, i)\n  it := nil; d.nl(it, 6, 7); d.nl(it, 6, 5); d.nl(it, 4, 0); d.ad(it, i)\n  it := nil; d.nl(it, 8, 8); d.nl(it, 8, 5); d.nl(it, 6, 0); d.ad(it, i)\n  it := nil; d.nl(it, 10, 9); d.nl(it, 10, 6); d.nl(it, 8, 0); d.ad(it, i)\n  it := nil; d.nl(it, 14, 11); d.nl(it, 10, 0); d.ad(it, i)\n  it := nil; d.nl(it, 12, 0); d.nl(it, 13, 4); d.nl(it, 16, 8); d.nl(it, 15, 10); d.nl(it, 16, 16); d.ad(it, i)\n  it := nil; d.nl(it, 13, 0); d.nl(it, 16, 6); d.ad(it, i)\n  it := nil; d.nl(it, 14, 0); d.nl(it, 16, 4); d.ad(it, i)\n  it := nil; d.nl(it, 15, 0); d.nl(it, 16, 2); d.ad(it, i)\n  scale i by 1/16, 1/16\nend\n\nprocedure mr(-> pic)\nbegin\n  let i = nil; let it := nil\n  it := nil; d.nl(it, 0, 16); d.nl(it, 1, 14); d.nl(it, 2, 12); d.nl(it, 5, 10); d.nl(it, 8, 8); d.nl(it, 14, 6); d.nl(it, 16, 4); d.ad(it, i)\n  it := nil; d.nl(it, 0, 12); d.nl(it, 1, 14); d.ad(it, i)\n  it := nil; d.nl(it, 0, 8); d.nl(it, 2, 12); d.ad(it, i)\n  it := nil; d.nl(it, 0, 4); d.nl(it, 5, 10); d.ad(it, i)\n  it := nil; d.nl(it, 0, 0); d.nl(it, 8, 8); d.ad(it, i)\n  it := nil; d.nl(it, 1, 1); d.nl(it, 4, 0); d.ad(it, i)\n  it := nil; d.nl(it, 2, 2); d.nl(it, 8, 0); d.ad(it, i)\n  it := nil; d.nl(it, 3, 3); d.nl(it, 8, 2); d.nl(it, 12, 0); d.ad(it, i)\n  it := nil; d.nl(it, 5, 5); d.nl(it, 12, 3); d.nl(it, 16, 0); d.ad(it, i)\n  it := nil; d.nl(it, 6, 16); d.nl(it, 11, 10); d.nl(it, 16, 6); d.ad(it, i)\n  it := nil; d.nl(it, 11, 16); d.nl(it, 12, 12); d.nl(it, 16, 8); d.ad(it, i)\n  it := nil; d.nl(it, 12, 12); d.nl(it, 16, 16); d.ad(it, i)\n  it := nil; d.nl(it, 13, 13); d.nl(it, 16, 10); d.ad(it, i)\n  it := nil; d.nl(it, 14, 14); d.nl(it, 16, 12); d.ad(it, i)\n  it := nil; d.nl(it, 15, 15); d.nl(it, 16, 14); d.ad(it, i)\n  scale i by 1/16, 1/16\nend\n\nprocedure ms(-> pic)\nbegin\n  let i = nil; let it := nil\n  it := nil; d.nl(it, 0, 0); d.nl(it, 4, 2); d.nl(it, 8, 2); d.nl(it, 16, 0); d.ad(it, i)\n  it := nil; d.nl(it, 0, 16); d.nl(it, 8, 16); d.ad(it, i)\n  it := nil; d.nl(it, 12, 16); d.nl(it, 16, 16); d.ad(it, i)\n  it := nil; d.nl(it, 2, 1); d.nl(it, 0, 4); d.ad(it, i)\n  it := nil; d.nl(it, 0, 6); d.nl(it, 7, 4); d.ad(it, i)\n  it := nil; d.nl(it, 0, 8); d.nl(it, 8, 6); d.ad(it, i)\n  it := nil; d.nl(it, 0, 10); d.nl(it, 7, 8); d.ad(it, i)\n  it := nil; d.nl(it, 0, 12); d.nl(it, 7, 10); d.ad(it, i)\n  it := nil; d.nl(it, 0, 14); d.nl(it, 7, 13); d.ad(it, i)\n  it := nil; d.nl(it, 8, 16); d.nl(it, 7, 13); d.nl(it, 7, 8); d.nl(it, 8, 6); d.nl(it, 10, 4); d.nl(it, 16, 0); d.ad(it, i)\n  it := nil; d.nl(it, 10, 16); d.nl(it, 11, 10); d.ad(it, i)\n  it := nil; d.nl(it, 12, 16); d.nl(it, 13, 13); d.nl(it, 15, 9); d.nl(it, 16, 8); d.ad(it, i)\n  it := nil; d.nl(it, 13, 13); d.nl(it, 16, 14); d.ad(it, i)\n  it := nil; d.nl(it, 14, 11); d.nl(it, 16, 12); d.ad(it, i)\n  it := nil; d.nl(it, 15, 9); d.nl(it, 16, 10); d.ad(it, i)\n  it := nil; d.nl(it, 12, 4); d.nl(it, 12, 7); d.nl(it, 10, 6); d.nl(it, 12, 4); d.ad(it, i)\n  it := nil; d.nl(it, 15, 5); d.nl(it, 15, 8); d.nl(it, 13, 7); d.nl(it, 15, 5); d.ad(it, i)\n  scale i by 1/16, 1/16\nend\n\nprocedure rot(cpic p -> pic)\n  shift rotate p by -90 by 1,0\n\nprocedure beside(cint m, n; cpic p, q -> pic)\nbegin\n  let p1 = scale p by m / (m + n), 1\n  let q1 = scale q by n / (m + n), 1\n  let q2 = shift q1 by m / (m + n), 0\n  \n  d.ad(q2, p1)\n  p1\nend\n\nprocedure above(cint m, n; cpic p, q -> pic)\nbegin\n  let p1 = scale p by 1, m / (m + n)\n  let q1 = scale q by 1, n / (m + n)\n  let p2 = shift p1 by 0, n / (m + n)\n  \n  d.ad(p2, q1)\n  q1\nend\n\nprocedure nonet(cpic p1, p2, p3, p4, p5, p6, p7, p8, p9 -> pic)\n  above(1, 2, beside(1, 2, p1, beside(1, 1, p2, p3)),\n    above(1, 1, beside(1, 2, p4, beside(1, 1, p5, p6)),\n      beside(1, 2, p7, beside(1, 1, p8, p9))))\n\nprocedure quartet(cpic p1, p2, p3, p4 -> pic)\n  above(1, 1, beside(1, 1, p1, p2), beside(1, 1, p3, p4))\n\nprocedure cycle(cpic p1 -> pic)\n  quartet(p1, rot(rot(rot(p1))), rot(p1), rot(rot(p1)))\n\nlet p = mp\nlet q = mq\nlet r = mr\nlet s = ms\n\nlet t = quartet(p, q, r, s)\nlet u = cycle(rot(q))\nlet side1 = quartet(nil, nil, rot(t), t)\nlet side2 = quartet(side1, side1, rot(t), t)\nlet corner1 = quartet(nil, nil, nil, u)\nlet corner2 = quartet(corner1, side1, rot(side1), u)\nlet corner = nonet(corner2, side2, side2, rot(side2), u, rot(t), rot(side2), rot(t), rot(q))\nlet square.limit = cycle(corner)\n\ndraw.image(square.limit)\n`;\n","export const forwards = `\nforward reads.prompt(string -> string)\nforward readi.prompt(string -> int)\nforward draw.scale(int, int)\nforward draw.line(#pixel, int, int, int, int)\nforward draw.image(#pixel)\n\nforward d.nl(#pixel, int, int)\nforward d.ad(#pixel, #pixel)\n`;\n","import * as p from \"../parser/parser\";\n\nexport class AnalyzerError extends Error {\n  constructor(public pos: number, public message: string) {\n    super();\n    // Remove internal type representer .!\n    this.message = this.message.replace(/\\.!/, \"\");\n  }\n}\n\nexport enum AccessType {\n  CONST,\n  VAR,\n}\n\nexport class VarType {\n  constructor(\n    public identifier: string,\n    public accessType: AccessType,\n    public type: string\n  ) {}\n}\n\nexport class StructureType {\n  constructor(\n    public identifier: string,\n    public fields: { [ident: string]: string }\n  ) {}\n}\n\nexport class ProcedureType {\n  constructor(\n    public identifier: string,\n    public parameters: { [ident: string]: ProcedureParamType },\n    public returnType: string\n  ) {}\n}\n\nexport class ProcInner {\n  constructor(\n    public fields: ProcInnerField[],\n    public returnType: string | void\n  ) {}\n}\n\nexport class ProcInnerSDecl {\n  constructor(public types: string[]) {}\n}\n\nexport type ProcInnerField = string | ProcInner | ProcInnerSDecl;\n\nexport type ProcedureParamType = string | StructureType | ProcInner;\n\nexport class ForwardType {\n  constructor(public identifier: string, public procType: ProcInner | void) {}\n}\n\nexport type ComplexType =\n  | string\n  | VarType\n  | StructureType\n  | ProcedureType\n  | ProcedureParamType\n  | ForwardType;\n\nexport class TypeStore {\n  public types: { [key: string]: ComplexType } = {};\n}\n\nexport class TypeStack {\n  public stores = [new TypeStore()];\n\n  public currStore() {\n    return this.stores[this.stores.length - 1];\n  }\n\n  public popStore() {\n    this.stores.pop();\n  }\n\n  public pushStore() {\n    this.stores.push(new TypeStore());\n  }\n\n  public getStoredType(\n    varName: string,\n    onlyCurrent: boolean\n  ): void | ComplexType {\n    // If onlyCurrent then we only check latest store\n    // Otherwise we iterate up the stack (order matters)\n    const findInStore = (store: TypeStore) => {\n      const currTypes = store.types;\n      if (varName in currTypes) return currTypes[varName];\n    };\n\n    if (onlyCurrent) {\n      const t = findInStore(this.currStore());\n      if (t) return t;\n    } else\n      for (let i = this.stores.length - 1; i >= 0; i--) {\n        const t = findInStore(this.stores[i]);\n        if (t) return t;\n      }\n  }\n}\n\nexport class Analyzer {\n  private typeStack = new TypeStack();\n\n  constructor(private program: p.Program) {}\n\n  public run(): void {\n    this.seedTypes();\n    this.getTypeProgram(this.program);\n  }\n\n  private seedTypes(): void {\n    // Add standard library types\n    // Procedure options, returns array of constant strings\n    const defaultVars: [string, string][] = [\n      [\"s.w\", \".!number\"],\n      [\"options\", \"*cstring\"],\n      [\"environment\", \"*cstring\"],\n      [\"read.a.line\", \"string\"],\n      [\"readi\", \".!number\"],\n      [\"readr\", \".!number\"],\n      [\"readb\", \"boolean\"],\n      [\"peek\", \"string\"],\n      [\"reads\", \"string\"],\n      [\"read.byte\", \".!number\"],\n      [\"read.16\", \".!number\"],\n      [\"read.32\", \".!number\"],\n    ];\n\n    const currStore = this.typeStack.currStore();\n    for (const defaultVar of defaultVars)\n      currStore.types[defaultVar[0]] = new VarType(\n        defaultVar[0],\n        AccessType.VAR,\n        defaultVar[1]\n      );\n\n    currStore.types[\"dump\"] = new ProcedureType(\n      \"dump\",\n      { a: \"nonvoid\" },\n      \"void\"\n    );\n\n    currStore.types[\"length\"] = new ProcedureType(\n      \"length\",\n      { a: \"vector\" },\n      \".!number\"\n    );\n\n    currStore.types[\"upb\"] = new ProcedureType(\n      \"upb\",\n      { a: \"vector\" },\n      \".!number\"\n    );\n\n    currStore.types[\"lwb\"] = new ProcedureType(\n      \"lwb\",\n      { a: \"vector\" },\n      \".!number\"\n    );\n\n    currStore.types[\"close\"] = new ProcedureType(\n      \"close\",\n      { a: \"cfile\" },\n      \"void\"\n    );\n\n    currStore.types[\"find.substr\"] = new ProcedureType(\n      \"find.substr\",\n      { a: \"cstring\", b: \"cstring\" },\n      \".!number\"\n    );\n\n    currStore.types[\"decode\"] = new ProcedureType(\n      \"decode\",\n      { a: \"cstring\" },\n      \".!number\"\n    );\n\n    currStore.types[\"b.or\"] = new ProcedureType(\n      \"b.or\",\n      { a: \"cint\", b: \"cint\" },\n      \".!number\"\n    );\n\n    currStore.types[\"trace\"] = new ProcedureType(\"trace\", {}, \"void\");\n\n    currStore.types[\"shift.l\"] = new ProcedureType(\n      \"shift.l\",\n      { a: \"cint\", b: \"cint\" },\n      \".!number\"\n    );\n\n    currStore.types[\"fiddle.r\"] = new ProcedureType(\n      \"fiddle.r\",\n      { a: \"creal\" },\n      \"*number\"\n    );\n\n    currStore.types[\"code\"] = new ProcedureType(\n      \"code\",\n      { a: \"cint\" },\n      \"string\"\n    );\n\n    currStore.types[\"read\"] = new ProcedureType(\n      \"read\",\n      { a: \"nonvoid\" },\n      \"string\"\n    );\n\n    currStore.types[\"read.name\"] = new ProcedureType(\n      \"read.name\",\n      { a: \"nonvoid\", b: \"nonvoid\" },\n      \"string\"\n    );\n\n    currStore.types[\"eof\"] = new ProcedureType(\"eof\", { a: \"nonvoid\" }, \"bool\");\n\n    currStore.types[\"iformat\"] = new ProcedureType(\n      \"iformat\",\n      { a: \"cint\" },\n      \"string\"\n    );\n\n    currStore.types[\"float\"] = new ProcedureType(\n      \"float\",\n      { a: \".!number\" },\n      \".!number\"\n    );\n\n    currStore.types[\"digit\"] = new ProcedureType(\n      \"digit\",\n      { a: \"cstring\" },\n      \"bool\"\n    );\n\n    currStore.types[\"letter\"] = new ProcedureType(\n      \"letter\",\n      { a: \"cstring\" },\n      \"bool\"\n    );\n  }\n\n  private expectType(\n    pos: number,\n    expected: string | void,\n    actual: string | void\n  ): void {\n    if (!expected || !actual) return;\n\n    // Lookup real types\n    // Do not lookup if primitive types\n    const p = [\".!number\"];\n    if (!p.includes(expected)) expected = this.resolveType(expected);\n    if (!p.includes(actual)) actual = this.resolveType(actual);\n\n    // Expected can always be less specific than actual\n    // e.g. could have expected nonvoid and actual \"pic\"\n    // Whereas cannot have other way around, so no expect \"pic\" and actual be nonvoid\n\n    // type      = nonvoid     | void\n    // nonvoid   = literal     | image   | vector | \"pic\"\n    // literal   = writeable   | \"pixel\" | \"pntr\" | \"file\"\n    // writeable = ordered     | \"bool\"\n    // ordered   = \".!number\"  | \"string\"\n    // image     = \"#pixel\"    | \"#cpixel\"\n    // vector    = \"*\" nonvoid | \"*c\" nonvoid\n\n    // If actual refers to a type, fetch and set it\n    const actualT = this.typeStack.getStoredType(actual, false);\n    if (typeof actualT === \"string\") actual = actualT;\n    else if (actualT instanceof VarType) actual = actualT.type;\n    // Can't expect forwards\n    else if (actualT instanceof ForwardType) return;\n\n    // If expected refers to a type, fetch and set it\n    const expectedT = this.typeStack.getStoredType(expected, false);\n    if (typeof expectedT === \"string\") expected = expectedT;\n    else if (expectedT instanceof VarType) expected = expectedT.type;\n    // Can't expect forwards\n    else if (expectedT instanceof ForwardType) return;\n\n    // Don't strip if remaining is a real type\n    const rType = [\"const\", \"clause\"];\n    while (actual.startsWith(\"c\") && !rType.includes(actual))\n      actual = actual.slice(1);\n    while (expected.startsWith(\"c\") && !rType.includes(expected))\n      expected = expected.slice(1);\n\n    // Type rewrites (just awkward naming inconsistencies from the reference manual)\n    const rewrites: { [k: string]: string } = {\n      int: \".!number\",\n      real: \".!number\",\n    };\n    const rewriteKeys = Object.keys(rewrites);\n    if (rewriteKeys.includes(expected)) expected = rewrites[expected];\n    if (rewriteKeys.includes(actual)) actual = rewrites[actual];\n\n    // Simple identical match\n    if (expected === actual) return;\n\n    // Pointers ignore type rules.  Ignore them.\n    if (expected === \"pntr\" || actual === \"pntr\") return;\n\n    const matchCheck = {\n      type(actual: string) {\n        return this.nonvoid(actual) || true;\n      },\n      nonvoid(actual: string) {\n        return actual !== \"void\";\n      },\n      literal(actual: string) {\n        return (\n          [\"pixel\", \"pntr\", \"file\"].includes(actual) || this.writeable(actual)\n        );\n      },\n      writeable(actual: string) {\n        return [\"bool\"].includes(actual) || this.ordered(actual);\n      },\n      ordered(actual: string) {\n        return [\".!number\", \"string\"].includes(actual);\n      },\n      image(actual: string) {\n        return [\"#pixel\", \"#cpixel\"].includes(actual);\n      },\n      vector: function (actual: string): boolean {\n        if (actual.startsWith(\"*\")) return this.nonvoid(actual.substr(1));\n        else if (actual.startsWith(\"*c\")) return this.nonvoid(actual.substr(2));\n        else return false;\n      },\n    };\n\n    let r = false;\n\n    if (expected === \"type\") r = matchCheck.type(actual);\n    else if (expected === \"nonvoid\") r = matchCheck.nonvoid(actual);\n    else if (expected === \"literal\") r = matchCheck.literal(actual);\n    else if (expected === \"writeable\") r = matchCheck.writeable(actual);\n    else if (expected === \"ordered\") r = matchCheck.ordered(actual);\n    else if (expected === \"image\") r = matchCheck.image(actual);\n    else if (expected === \"vector\" || expected.startsWith(\"*\"))\n      r = matchCheck.vector(actual);\n    else\n      throw new AnalyzerError(\n        pos,\n        `Expected type ${expected}, received type ${actual}`\n      );\n\n    if (!r)\n      throw new AnalyzerError(\n        pos,\n        `Expected type ${expected}, received type ${actual}`\n      );\n  }\n\n  private requireSoftID(id: p.Identifier): string {\n    if (id instanceof p.Identifier1)\n      return this.getTypeStandardId(id.standardId);\n    else return id.id.val;\n  }\n\n  private idFromClause(c: p.Clause): string {\n    // exp66<exp5<exp4<exp3<exp2<exp1<expression<clause8\n    if (\n      c instanceof p.Clause8 &&\n      c.expression.exp1.exp2.exp3.exp4.exp5.exp6 instanceof p.Exp66\n    ) {\n      return this.requireSoftID(\n        c.expression.exp1.exp2.exp3.exp4.exp5.exp6.identifier\n      );\n    }\n    throw new AnalyzerError(c.pos, `Can only index using exact ID of field`);\n  }\n\n  private matchStructureCreation(\n    pos: number,\n    st: StructureType,\n    args: p.Clause[]\n  ) {\n    // clauseList should match each structure property\n    const expectedFieldCount = Object.keys(st.fields).length;\n    const actualFieldCount = args.length;\n    if (expectedFieldCount !== actualFieldCount)\n      throw new AnalyzerError(\n        pos,\n        `Expected ${expectedFieldCount} fields ` +\n          `for structure, received ${actualFieldCount} fields`\n      );\n\n    for (let i = 0; i < expectedFieldCount; i++) {\n      const expectedType = Object.values(st.fields)[i];\n      const actualType = this.getTypeClause(args[i]);\n      this.expectType(args[i].pos, expectedType, actualType);\n    }\n  }\n\n  private matchProcCall(pos: number, pc: ProcedureType, args: p.Clause[]) {\n    // clauseList should match each argument type\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const arg_type = this.resolveType(this.getTypeClause(arg));\n      const param = Object.values(pc.parameters)[i];\n      if (typeof param === \"string\") this.expectType(arg.pos, param, arg_type);\n    }\n  }\n\n  private resolveType(id: string | void): string {\n    if (!id) return \"\";\n\n    let ret: string | void;\n    const type = this.typeStack.getStoredType(id, false);\n    if (typeof type === \"string\") ret = type;\n    else if (type instanceof VarType) ret = type.type;\n    else if (type instanceof ProcedureType) ret = type.returnType as string;\n\n    return ret || id;\n  }\n\n  // Specific pullers\n\n  private pullStructureDecl(n: p.StructureDecl): StructureType {\n    const id = this.requireSoftID(n.identifier);\n\n    // Structure cannot already be declared at this level\n    const existingType = this.typeStack.getStoredType(id, true);\n    if (existingType) {\n      throw new AnalyzerError(n.identifier.pos, \"Identifier already used\");\n    }\n\n    // Get fields from structure_decl_fields\n    const fields: { [ident: string]: string } = {};\n    if (n.structureDeclFields && n.structureDeclFields.fieldList) {\n      // Add fields\n      const fieldList = n.structureDeclFields.fieldList;\n\n      const addFromFieldListEl = (fle: p.FieldListEl) => {\n        const type = fle.type.val;\n        // First identifier\n        const id = this.requireSoftID(fle.identifierList.identifier);\n        fields[id] = type;\n        // Iterate through following identifiers\n        fle.identifierList.identifierListFollow.forEach((ident) => {\n          const id = this.requireSoftID(ident.identifier);\n          fields[id] = type;\n        });\n      };\n\n      // Add for field_list_el and through field_list_follows\n      addFromFieldListEl(fieldList.fieldListEl);\n      fieldList.fieldListFollow.forEach((flf) =>\n        addFromFieldListEl(flf.fieldListEl)\n      );\n    }\n\n    return new StructureType(id, fields);\n  }\n\n  private pullProcType(n: p.ProcType): ProcInner {\n    // Fetch fields\n    const fields: ProcInnerField[] = [];\n\n    const handleEl = (pel: p.PtypeListEl) => {\n      if (pel instanceof p.PtypeListEl0) fields.push(pel.type.val);\n      else if (pel instanceof p.PtypeListEl1) {\n        fields.push(this.pullProcType(pel.procType));\n      } else if (pel instanceof p.PtypeListEl2) {\n        const types: string[] = [];\n        const sd = pel.sDecl;\n        types.push(sd.type.val);\n        sd.sDeclFollow.forEach((sdf) => types.push(sdf.type.val));\n        fields.push(new ProcInnerSDecl(types));\n      }\n    };\n\n    if (n.ptypeList) {\n      handleEl(n.ptypeList.ptypeListEl);\n      n.ptypeList.ptypeListFollow.forEach((plf) => handleEl(plf.ptypeListEl));\n    }\n\n    const returnType = n.returnTypex && n.returnTypex.type.val;\n\n    return new ProcInner(fields, returnType);\n  }\n\n  private pullProcDecl(n: p.ProcDecl): ProcedureType {\n    // Get proc ID\n    const id = this.requireSoftID(n.identifier);\n\n    // Proc cannot already be declared at this level\n    const existingType = this.typeStack.getStoredType(id, true);\n    if (existingType && !(existingType instanceof ForwardType)) {\n      throw new AnalyzerError(n.identifier.pos, \"Identifier already used\");\n    }\n\n    // Pull ProcDeclType\n    let params: { [ident: string]: ProcedureParamType } = {};\n    let returnType: string | void = undefined;\n    if (n.procDeclType) {\n      const parseParam = (param: p.Parameter) => {\n        if (param instanceof p.Parameter0) {\n          const type = param.type.val;\n          const id = this.requireSoftID(param.identifierList.identifier);\n\n          params[id] = type;\n          param.identifierList.identifierListFollow.forEach((ilf) => {\n            const id = this.requireSoftID(ilf.identifier);\n            params[id] = type;\n          });\n        } else if (param instanceof p.Parameter1) {\n          const struct = this.pullStructureDecl(param.structureDecl);\n          params[struct.identifier] = struct;\n        } else if (param instanceof p.Parameter2) {\n          const procType = this.pullProcType(param.procType);\n\n          const id = this.requireSoftID(param.identifierList.identifier);\n          params[id] = procType;\n\n          param.identifierList.identifierListFollow.forEach((ilf) => {\n            const id = this.requireSoftID(ilf.identifier);\n            params[id] = procType;\n          });\n        }\n      };\n\n      // Resolve parameter list\n      const pList = n.procDeclType.parameterList;\n      if (pList) {\n        parseParam(pList.parameter);\n        pList.parameterListFollow.forEach((pl) => parseParam(pl.parameter));\n      }\n\n      // Resolve return type\n      const rType = n.procDeclType.returnTypex;\n      if (rType) returnType = rType.type.val;\n    }\n\n    return new ProcedureType(id, params, returnType || \"void\");\n  }\n\n  // Beware ...\n\n  private getTypeProgram(n: p.Program): string | void {\n    let ret: string | void = undefined;\n\n    this.getTypeSequence(n.sequence);\n\n    return ret;\n  }\n\n  private getTypeSequence(n: p.Sequence): string | void {\n    let ret: string | void = undefined;\n\n    ret = this.getTypeSequenceEl(n.sequenceEl);\n    n.sequenceFollow.forEach((n) => {\n      ret = this.getTypeSequenceFollow(n);\n    });\n\n    return ret;\n  }\n\n  private getTypeSequenceFollow(n: p.SequenceFollow): string | void {\n    let ret: string | void = undefined;\n\n    ret = this.getTypeSequenceEl(n.sequenceEl);\n\n    return ret;\n  }\n\n  private getTypeSequenceEl(n: p.SequenceEl): string | void {\n    let ret: string | void = undefined;\n\n    if (n instanceof p.SequenceEl0) {\n      ret = this.getTypeDeclaration(n.declaration);\n    } else if (n instanceof p.SequenceEl1) {\n      ret = this.getTypeClause(n.clause);\n    }\n\n    return ret;\n  }\n\n  private getTypeDeclaration(n: p.Declaration): string | void {\n    let ret: string | void = undefined;\n\n    if (n instanceof p.Declaration0) {\n      ret = this.getTypeLetDecl(n.letDecl);\n    } else if (n instanceof p.Declaration1) {\n      ret = this.getTypeStructureDecl(n.structureDecl);\n    } else if (n instanceof p.Declaration2) {\n      ret = this.getTypeProcDecl(n.procDecl);\n    } else if (n instanceof p.Declaration3) {\n      ret = this.getTypeForward(n.forward);\n    }\n\n    return ret;\n  }\n\n  private getTypeLetDecl(n: p.LetDecl): string | void {\n    let ret: string | void = undefined;\n\n    const id = this.requireSoftID(n.identifier);\n\n    // Var cannot already be declared at this level\n    const existingType = this.typeStack.getStoredType(id, true);\n    if (existingType)\n      throw new AnalyzerError(n.identifier.pos, \"Identifier already used\");\n\n    // Calculate type\n    ret = this.getTypeClause(n.clause);\n    if (!ret) {\n      throw new AnalyzerError(n.clause.pos, \"Did not return type\");\n    }\n    ret = this.resolveType(ret);\n\n    // If n.initOp is type InitOp0 (=) then it's constant else var\n    this.typeStack.currStore().types[id] = new VarType(\n      id,\n      n.initOp instanceof p.InitOp0 ? AccessType.CONST : AccessType.VAR,\n      ret\n    );\n\n    return ret;\n  }\n\n  private getTypeStructureDecl(n: p.StructureDecl): string | void {\n    let ret: string | void = undefined;\n\n    const st = this.pullStructureDecl(n);\n\n    this.typeStack.currStore().types[st.identifier] = st;\n\n    return ret;\n  }\n\n  private getTypeProcDecl(n: p.ProcDecl): string | void {\n    let ret: string | void = undefined;\n\n    const proc = this.pullProcDecl(n);\n\n    // Store type\n    this.typeStack.currStore().types[proc.identifier] = proc;\n\n    // Push store\n    this.typeStack.pushStore();\n\n    // Add each proc parameter to current type stack\n    const currStore = this.typeStack.currStore();\n    Object.keys(proc.parameters).forEach(\n      (paramName) => (currStore.types[paramName] = proc.parameters[paramName])\n    );\n\n    // Validate clause matches unless void return type\n    let clauseType = this.getTypeClause(n.clause);\n    clauseType = this.resolveType(clauseType);\n    if (proc.returnType !== \"void\") {\n      this.expectType(n.pos, proc.returnType, clauseType);\n    }\n\n    // Pop store\n    this.typeStack.popStore();\n\n    ret = clauseType;\n    return ret;\n  }\n\n  private getTypeForward(n: p.Forward): string | void {\n    let ret: string | void = undefined;\n\n    // Get forward ID\n    const id = this.requireSoftID(n.identifier);\n\n    // Cannot already be used\n    const existingType = this.typeStack.getStoredType(id, true);\n    if (existingType) throw new AnalyzerError(n.pos, \"identifier already used\");\n\n    // Get proc type\n    const procType = n.procType && this.pullProcType(n.procType);\n\n    // Store\n    const forward = new ForwardType(id, procType);\n    this.typeStack.currStore().types[id] = forward;\n\n    return ret;\n  }\n\n  private getTypeClause(n: p.Clause): string | void {\n    let ret: string | void = undefined;\n\n    // Run operation within own store\n    const nst = (a: () => void) => {\n      this.typeStack.pushStore();\n      a();\n      this.typeStack.popStore();\n    };\n\n    if (n instanceof p.Clause0) {\n      // If clause\n      // Push stack\n      this.typeStack.pushStore();\n      // n.clause must be a bool type\n      const conditionalType = this.getTypeClause(n.clause);\n      this.expectType(n.clause.pos, \"bool\", conditionalType);\n\n      const ift = n.ifClauseThen;\n      if (ift instanceof p.IfClauseThen0) {\n        // if n.ifClauseThen is type 0 return type is that clause\n        // Return type is the clause\n        ret = this.getTypeClause(ift.clause);\n      } else if (ift instanceof p.IfClauseThen1) {\n        // if n.ifClausethen is type 1 then `then` and `elsex` must match and are return type\n        const thenType = this.getTypeClause(ift.then);\n        const elseType = this.getTypeClause(ift.elsex);\n        this.expectType(ift.elsex.pos, thenType, elseType);\n        ret = thenType;\n      }\n\n      ret = this.resolveType(ret);\n      // Pop stack\n      this.typeStack.popStore();\n    } else if (n instanceof p.Clause1) {\n      // Push stack\n      this.typeStack.pushStore();\n      // Repeat clause\n      const repeatType = this.getTypeClause(n.repeat);\n      // Pop stack\n      this.typeStack.popStore();\n\n      // Condition must be bool type\n      const conditionalType = this.getTypeClause(n.whilex);\n      this.expectType(n.whilex.pos, \"bool\", conditionalType);\n\n      // If do clause set, must be same type as repeat expression type\n      if (n.clauseDo) {\n        const doType = this.getTypeClause(n.clauseDo.clause);\n        this.expectType(n.clauseDo.clause.pos, repeatType, doType);\n      }\n\n      // Set return type\n      ret = repeatType;\n    } else if (n instanceof p.Clause2) {\n      // While clause\n      // Push a new type store\n      this.typeStack.pushStore();\n\n      // Clause type\n      const clauseType = this.getTypeClause(n.dox);\n      ret = clauseType;\n\n      // Condition must be bool type\n      const conditionalType = this.getTypeClause(n.whilex);\n      this.expectType(n.whilex.pos, \"bool\", conditionalType);\n\n      // Pop store\n      this.typeStack.popStore();\n    } else if (n instanceof p.Clause3) {\n      // For loop\n      // Push a new type store\n      this.typeStack.pushStore();\n\n      const id = this.requireSoftID(n.identifier);\n      // Store iterator type\n      this.typeStack.currStore().types[id] = new VarType(\n        id,\n        AccessType.VAR,\n        \".!number\"\n      );\n\n      // from, to, and by all must be numbers\n      const fromType = this.getTypeClause(n.from);\n      this.expectType(n.from.pos, \".!number\", fromType);\n      const toType = this.getTypeClause(n.to);\n      this.expectType(n.to.pos, \".!number\", toType);\n      if (n.clauseBy) {\n        const byType = this.getTypeClause(n.clauseBy.clause);\n        this.expectType(n.clauseBy.clause.pos, \".!number\", byType);\n      }\n\n      // do clause is return\n      this.typeStack.pushStore();\n      const doType = this.getTypeClause(n.dox);\n      this.typeStack.popStore();\n      ret = doType;\n\n      // Pop store\n      this.typeStack.popStore();\n    } else if (n instanceof p.Clause4) {\n      // Case list\n      // Each case has the same type and that is the return type\n      const caseClauseType = this.resolveType(this.getTypeClause(n.casex));\n      this.expectType(n.casex.pos, \"nonvoid\", caseClauseType);\n\n      // Get default type\n      const defaultType = this.resolveType(this.getTypeClause(n.defaultx));\n      ret = defaultType;\n\n      // Ensure every case has the same type, and matches caseClauseType\n      const checkCaseListEl = (cle: p.CaseListEl) => {\n        // Clauses must match caseClauseType\n\n        nst(() =>\n          this.expectType(\n            cle.clauseList.clause.pos,\n            caseClauseType,\n            this.resolveType(this.getTypeClause(cle.clauseList.clause))\n          )\n        );\n        cle.clauseList.clauseListFollow.forEach((clause) =>\n          nst(() =>\n            this.expectType(\n              clause.pos,\n              caseClauseType,\n              this.resolveType(this.getTypeClause(clause))\n            )\n          )\n        );\n\n        // Clause must match defaultType\n        nst(() =>\n          this.expectType(\n            cle.clause.pos,\n            defaultType,\n            this.resolveType(this.getTypeClause(cle.clause))\n          )\n        );\n      };\n\n      // Validate\n      checkCaseListEl(n.caseList.caseListEl);\n      n.caseList.caseListFollow.forEach((clf) =>\n        checkCaseListEl(clf.caseListEl)\n      );\n    } else if (n instanceof p.Clause5) {\n      // Abort clause, nothing to do\n    } else if (n instanceof p.Clause6) {\n      // Write clause\n      ret = this.getTypeWriteClause(n.writeClause);\n    } else if (n instanceof p.Clause7) {\n      // Raster clause\n      ret = this.getTypeRaster(n.raster);\n    } else if (n instanceof p.Clause8) {\n      // Expression, possible assignment\n      const expType = this.getTypeExpression(n.expression);\n      // If clauseExprFollow set, expType must be mutable varType and\n      //  expType must be a string\n      if (n.clauseExprFollow) {\n        if (typeof expType !== \"string\")\n          throw new AnalyzerError(n.expression.pos, \"Unable to set variable\");\n\n        const heldVar = this.typeStack.getStoredType(expType, false);\n        if (!heldVar) {\n          // Setting a transient variable\n          ret = expType;\n        } else {\n          if (!(heldVar instanceof VarType)) {\n            throw new AnalyzerError(n.expression.pos, \"Unable to set variable\");\n          }\n\n          // Must not be a constant\n          if (heldVar.accessType === AccessType.CONST)\n            throw new AnalyzerError(\n              n.expression.pos,\n              `Unable to modify constant variable ${heldVar.identifier} type ${heldVar.type}`\n            );\n\n          // Calculate type of clause\n          const clauseType = this.getTypeClause(n.clauseExprFollow.clause);\n          // Must match\n          this.expectType(\n            n.clauseExprFollow.clause.pos,\n            heldVar.type,\n            clauseType\n          );\n        }\n      } else {\n        ret = expType;\n      }\n    }\n\n    return ret;\n  }\n\n  private getTypeWriteClause(n: p.WriteClause): string | void {\n    let ret: string | void = undefined;\n\n    if (n instanceof p.WriteClause0) {\n      // Write clause\n      // No return\n      // Need to validate writeList\n      this.getTypeWriteList(n.writeList);\n    } else if (n instanceof p.WriteClause1) {\n      // Output clause\n      // No return\n      // Clause must be file type\n      this.expectType(n.clause.pos, \"file\", this.getTypeClause(n.clause));\n      // Validate writeList\n      this.getTypeWriteList(n.writeList);\n    } else if (n instanceof p.WriteClause2) {\n      // Output byte clause\n      // No return, first clause is file, second and third are numbers\n      this.expectType(n.clause.pos, \"file\", this.getTypeClause(n.clause));\n      this.expectType(n.b.pos, \".!number\", this.getTypeClause(n.b));\n      this.expectType(n.c.pos, \".!number\", this.getTypeClause(n.c));\n    } else if (n instanceof p.WriteClause3) {\n      // Output 16 clause\n      // No return, first clause is file, second and third are numbers\n      this.expectType(n.clause.pos, \"file\", this.getTypeClause(n.clause));\n      this.expectType(n.b.pos, \".!number\", this.getTypeClause(n.b));\n      this.expectType(n.c.pos, \".!number\", this.getTypeClause(n.c));\n    } else if (n instanceof p.WriteClause4) {\n      // Output 32 clause\n      // No return, first clause is file, second is number\n      this.expectType(n.clause.pos, \"file\", this.getTypeClause(n.clause));\n      this.expectType(n.b.pos, \".!number\", this.getTypeClause(n.b));\n    }\n\n    return ret;\n  }\n\n  private getTypeWriteList(n: p.WriteList): string | void {\n    let ret: string | void = undefined;\n\n    const checkWriteListEl = (wle: p.WriteListEl) => {\n      // First clause must be writeable\n      this.expectType(\n        wle.clause.pos,\n        \"writeable\",\n        this.getTypeClause(wle.clause)\n      );\n      // If set, second clause must be number\n      if (wle.writeListElFollow) {\n        this.expectType(\n          wle.writeListElFollow.clause.pos,\n          \".!number\",\n          this.getTypeClause(wle.writeListElFollow.clause)\n        );\n      }\n    };\n\n    // Check for initial and for all subsequent\n    checkWriteListEl(n.writeListEl);\n    n.writeListFollow.forEach((wlf) => checkWriteListEl(wlf.writeListEl));\n\n    return ret;\n  }\n\n  private getTypeRaster(n: p.Raster): string | void {\n    let ret: string | void = undefined;\n\n    // First clause type image, second type #pixel\n    this.expectType(n.thisx.pos, \"image\", this.getTypeClause(n.thisx));\n    this.expectType(n.that.pos, \"#pixel\", this.getTypeClause(n.that));\n\n    return ret;\n  }\n\n  private getTypeExpression(n: p.Expression): string | void {\n    let ret: string | void = undefined;\n\n    if (n.expressionFollow.length > 0) {\n      // If expressionFollow set, then all exp1s must be bools, returns a bool\n      ret = \"bool\";\n      this.expectType(n.exp1.pos, \"bool\", this.getTypeExp1(n.exp1));\n      n.expressionFollow.forEach((ef) =>\n        this.expectType(ef.exp1.pos, \"bool\", this.getTypeExp1(ef.exp1))\n      );\n    } else {\n      // Else just return the first expr1 type\n      ret = this.getTypeExp1(n.exp1);\n    }\n\n    return ret;\n  }\n\n  private getTypeExp1(n: p.Exp1): string | void {\n    let ret: string | void = undefined;\n\n    if (n.exp1Follow.length > 0) {\n      // If exp1Follow set, then all exp2s must be bools, returns a bool\n      ret = \"bool\";\n      this.expectType(n.exp2.pos, \"bool\", this.getTypeExp2(n.exp2));\n      n.exp1Follow.forEach((ef) =>\n        this.expectType(ef.exp2.pos, \"bool\", this.getTypeExp2(ef.exp2))\n      );\n    } else {\n      // Else just return the first expr2 type\n      ret = this.getTypeExp2(n.exp2);\n    }\n\n    return ret;\n  }\n\n  private getTypeExp2(n: p.Exp2): string | void {\n    let ret: string | void = undefined;\n\n    const checkRel = () => {\n      ret = \"bool\";\n      let left = this.getTypeExp3(n.exp3);\n      // While exp2Op, iterate through setting left and resolving against right\n      // exp3 [rel_op exp3]*\n      n.exp2Op.forEach((e2op) => {\n        const right = this.getTypeExp3(e2op.exp3);\n        if (e2op.relOp instanceof p.RelOp0) {\n          // If equality op, then must be the same type of nonvoid\n          this.expectType(e2op.pos, \"nonvoid\", right);\n          this.expectType(e2op.pos, this.resolveType(left as string), right);\n        } else if (e2op.relOp instanceof p.RelOp1) {\n          // If comparison op, then must be same type of ordered\n          this.expectType(e2op.pos, \"ordered\", right);\n          this.expectType(e2op.pos, this.resolveType(left as string), right);\n        } else if (e2op.relOp instanceof p.RelOp2) {\n          // If type op, left must be a pntr, right must be identifier\n          //  pointing to structure\n          this.expectType(n.exp3.pos, \"pntr\", left);\n          if (!right) {\n            throw new AnalyzerError(\n              e2op.exp3.pos,\n              \"Expected structure identifier\"\n            );\n          } else {\n            const t = this.typeStack.getStoredType(right, false);\n            if (!t || !(t instanceof StructureType)) {\n              throw new AnalyzerError(\n                e2op.exp3.pos,\n                \"Expected structure identifier\"\n              );\n            }\n          }\n        }\n\n        // Each returns a bool\n        left = \"bool\";\n      });\n    };\n\n    if (n instanceof p.Exp20) {\n      // Negated, check rel\n      checkRel();\n    } else if (n instanceof p.Exp21) {\n      // If exp2op set then must be bool, calculate relatives\n      if (n.exp2Op.length > 0) {\n        checkRel();\n      } else {\n        // Else just return type\n        ret = this.getTypeExp3(n.exp3);\n      }\n    }\n\n    return ret;\n  }\n\n  private getTypeExp3(n: p.Exp3): string | void {\n    let ret: string | void = undefined;\n\n    if (n.exp3Op.length > 0) {\n      // if exp3Op set then both must be numbers\n      this.expectType(n.exp4.pos, \".!number\", this.getTypeExp4(n.exp4));\n      n.exp3Op.forEach((e3op) =>\n        this.expectType(e3op.exp4.pos, \".!number\", this.getTypeExp4(e3op.exp4))\n      );\n      ret = \".!number\";\n    } else {\n      // Else just return type\n      ret = this.getTypeExp4(n.exp4);\n    }\n\n    return ret;\n  }\n\n  private getTypeExp4(n: p.Exp4): string | void {\n    let ret: string | void = undefined;\n\n    if (n.exp4Op.length > 0) {\n      if (n.exp4Op[0].multOp instanceof p.MultOp0) {\n        // String concatenation\n        this.expectType(n.exp5.pos, \"string\", this.getTypeExp5(n.exp5));\n        n.exp4Op.forEach((e4op) =>\n          this.expectType(e4op.exp5.pos, \"string\", this.getTypeExp5(e4op.exp5))\n        );\n        ret = \"string\";\n      } else {\n        // Else number operations\n        this.expectType(n.exp5.pos, \".!number\", this.getTypeExp5(n.exp5));\n        n.exp4Op.forEach((e4op) =>\n          this.expectType(\n            e4op.exp5.pos,\n            \".!number\",\n            this.getTypeExp5(e4op.exp5)\n          )\n        );\n        ret = \".!number\";\n      }\n    } else {\n      // Else just return type\n      ret = this.getTypeExp5(n.exp5);\n    }\n\n    return ret;\n  }\n\n  private getTypeExp5(n: p.Exp5): string | void {\n    let ret: string | void = undefined;\n\n    // For exp5Follow, if not expressionArgFollow0 then it's dereference\n    // Otherwise it's .. who knows\n\n    ret = this.getTypeExp6(n.exp6);\n\n    const index = (cl: p.Clause[]) => {\n      if (typeof ret !== \"string\")\n        throw new AnalyzerError(n.exp6.pos, \"Unable to index\");\n\n      ret = this.resolveType(ret);\n      const t = this.typeStack.getStoredType(ret, false);\n\n      if (t instanceof StructureType) {\n        (n.exp6 as any).v_type = \"struct\";\n        // Match and adjust ret and index(:1)\n        // cl[0] must be a field, set ret and re-index\n\n        const id = this.idFromClause(cl[0]);\n        // Fetch and make sure field exists\n        const fieldType = t.fields[id];\n        if (!fieldType)\n          throw new AnalyzerError(cl[0].pos, `Unable to match field ${id}`);\n\n        // Set ret and re-index\n        ret = fieldType;\n        if (cl.length > 1) index(cl.slice(1));\n      } else {\n        // strip \"c\" from start\n        while (ret.startsWith(\"c\")) ret = ret.slice(1);\n        if (ret === \"pntr\") return;\n        if (!ret.startsWith(\"*\")) {\n          throw new AnalyzerError(n.exp6.pos, `Unable to index ${ret} ${cl}`);\n        }\n\n        // Clause term must be a number\n        this.expectType(cl[0].pos, \".!number\", this.getTypeClause(cl[0]));\n\n        // Match and adjust ret and index(:1)\n        ret = ret.slice(1);\n        if (cl.length > 1) index(cl.slice(1));\n      }\n    };\n\n    // Resolving multiple dereferences (e.g. dereference of nested struct\n    //  or vector) and function calls\n    if (ret && n.exp5Follow.length > 0) {\n      for (const exp5Follow of n.exp5Follow) {\n        if (!ret)\n          throw new AnalyzerError(n.exp6.pos, \"Unable to operate on void type\");\n        const eArg = exp5Follow.expressionArg;\n        if (\n          !eArg.expressionArgFollow ||\n          eArg.expressionArgFollow instanceof p.ExpressionArgFollow1\n        ) {\n          // Type 1 (clause list) means indexing, structure creation, or proc call\n          // Structure creation\n          // OR Indexing, sequential for successive indexing\n          //  (e.g. of struct pointers or multi dimensional vectors)\n          // OR Procedure call\n\n          // Flatten list of clauses\n          const clauseList = [eArg.clause];\n          if (eArg.expressionArgFollow) {\n            clauseList.push(eArg.expressionArgFollow.clauseList.clause);\n            eArg.expressionArgFollow.clauseList.clauseListFollow.map((clf) =>\n              clauseList.push(clf.clause)\n            );\n          }\n\n          const t = this.typeStack.getStoredType(ret, false);\n          // Destructure and restructure as appropriate\n          if (t instanceof StructureType) {\n            // Structure creation\n            this.matchStructureCreation(n.pos, t, clauseList);\n            // Return type is the structure name\n            ret = t.identifier;\n            // Alternatively if structure ID is a pntr type, return pntr\n            const rType = [\"const\", \"STRUCTURE\"];\n            if (rType.includes(ret)) ret = \"pntr\";\n          } else if (t instanceof ProcedureType) {\n            // Procedure call\n            this.matchProcCall(n.pos, t, clauseList);\n            // Return type is the procedure return type\n            ret = t.returnType;\n          } else if (t instanceof ForwardType) {\n          } else if (t instanceof VarType) {\n            // Structure indexing\n            // Each item in clauselist is a successive index operation\n            if (t.type !== \"clause\") index(clauseList);\n          } else {\n            // Vector indexing\n            // Each item in clauselist is a successive index operation\n            index(clauseList);\n          }\n        } else {\n          // Type 0 (bar) means depth selection\n          // Yields same type as previous, i.e. don't modify\n        }\n      }\n    }\n\n    return ret;\n  }\n  private getTypeExp6(n: p.Exp6): string | void {\n    let ret: string | void = undefined;\n\n    if (n instanceof p.Exp60) {\n      // ( clause ) - return type clause\n      ret = this.getTypeClause(n.clause);\n    } else if (n instanceof p.Exp61) {\n      // begin sequence? end - return type sequence\n      if (n.sequence) ret = this.getTypeSequence(n.sequence);\n    } else if (n instanceof p.Exp62) {\n      // { sequence? } - return type sequence\n      if (n.sequence) ret = this.getTypeSequence(n.sequence);\n    } else if (n instanceof p.Exp63) {\n      // standard expression - return it\n      ret = this.getTypeStandardExp(n.standardExp);\n    } else if (n instanceof p.Exp64) {\n      // literal - return it\n      ret = this.getTypeLiteral(n.literal);\n    } else if (n instanceof p.Exp65) {\n      // value constructor - return it\n      (n as any).v_type = \"vector\";\n      ret = this.getTypeValueConstructor(n.valueConstructor);\n    } else if (n instanceof p.Exp66) {\n      // identifier - must be a variable, check and return\n      const id = this.requireSoftID(n.identifier);\n      const type = this.typeStack.getStoredType(id, false);\n      if (!type)\n        throw new AnalyzerError(n.identifier.pos, `Type ${id} does not exist`);\n\n      if (typeof type === \"string\") ret = type;\n      else if (type instanceof VarType) ret = type.identifier;\n      else if (type instanceof ProcedureType) ret = type.identifier;\n      else if (type instanceof StructureType) ret = type.identifier;\n      else if (type instanceof ForwardType) ret = type.identifier;\n      else\n        throw new AnalyzerError(n.identifier.pos, `Type ${type} not expected`);\n    }\n\n    return ret;\n  }\n\n  private getTypeValueConstructor(n: p.ValueConstructor): string | void {\n    let ret: string | void = undefined;\n\n    if (n instanceof p.ValueConstructor0) {\n      // Vector constructor\n      ret = this.getTypeVectorConstr(n.vectorConstr);\n    } else if (n instanceof p.ValueConstructor1) {\n      // Image constructor\n      ret = this.getTypeImageConstr(n.imageConstr);\n    } else if (n instanceof p.ValueConstructor2) {\n      // Subimage constructor\n      ret = this.getTypeSubimageConstr(n.subimageConstr);\n    } else if (n instanceof p.ValueConstructor3) {\n      // Picture constructor\n      ret = this.getTypePictureConstr(n.pictureConstr);\n    }\n\n    return ret;\n  }\n\n  private getTypeVectorConstr(n: p.VectorConstr): string | void {\n    let ret: string | void = undefined;\n\n    if (n instanceof p.VectorConstr0) {\n      // \"vector\" range \"of\" clause\n      // Clause must be nonvoid\n      const clauseType = this.getTypeClause(n.clause);\n      if (!clauseType)\n        throw new AnalyzerError(n.clause.pos, `Unable to create void vector`);\n      this.expectType(n.clause.pos, \"nonvoid\", clauseType);\n      // Range is number and number\n      const checkRangeEl = (re: p.RangeEl) => {\n        this.expectType(re.a.pos, \".!number\", this.getTypeClause(re.a));\n        this.expectType(re.b.pos, \".!number\", this.getTypeClause(re.b));\n      };\n      checkRangeEl(n.range.rangeEl);\n      n.range.rangeFollow.forEach((rf) => checkRangeEl(rf.rangeEl));\n\n      // Return type is vector of this\n      ret = \"*\" + this.resolveType(clauseType);\n    } else if (n instanceof p.VectorConstr1) {\n      // \"@\" clause \"of\" type \"[\" clause:b vector_constr_follow* \"]\"\n      // clause is number, b and each of follow is same nonvoid T, return is *T\n      this.expectType(n.clause.pos, \".!number\", this.getTypeClause(n.clause));\n\n      const clauseType = this.getTypeClause(n.b);\n      this.expectType(n.b.pos, \"nonvoid\", clauseType);\n      n.vectorConstrFollow.forEach((vcf) =>\n        this.expectType(vcf.pos, clauseType, this.getTypeClause(vcf.clause))\n      );\n\n      ret = \"*\" + clauseType;\n    }\n\n    return ret;\n  }\n\n  private getTypeImageConstr(n: p.ImageConstr): string | void {\n    let ret: string | void = undefined;\n\n    // \"image\" clause:image \"by\" clause:by \"of\" clause:of\n    // image type image T, by type number, of type number, return type T\n    const imageType = this.getTypeClause(n.image);\n    this.expectType(n.image.pos, \"image\", imageType);\n    ret = imageType;\n    this.expectType(n.by.pos, \".!number\", this.getTypeClause(n.by));\n    this.expectType(n.of.pos, \".!number\", this.getTypeClause(n.of));\n\n    return ret;\n  }\n\n  private getTypeSubimageConstr(n: p.SubimageConstr): string | void {\n    let ret: string | void = undefined;\n\n    // \"limit\" clause subimage_constr_mid? subimage_constr_end?\n    // clause type image T, return type T, to/by/at1/at2 all number\n    const imageType = this.getTypeClause(n.clause);\n    this.expectType(n.clause.pos, \"image\", imageType);\n    ret = imageType;\n\n    if (n.subimageConstrMid) {\n      this.expectType(\n        n.subimageConstrMid.to.pos,\n        \".!number\",\n        this.getTypeClause(n.subimageConstrMid.to)\n      );\n      this.expectType(\n        n.subimageConstrMid.by.pos,\n        \".!number\",\n        this.getTypeClause(n.subimageConstrMid.by)\n      );\n    }\n\n    if (n.subimageConstrEnd) {\n      this.expectType(\n        n.subimageConstrEnd.at1.pos,\n        \".!number\",\n        this.getTypeClause(n.subimageConstrEnd.at1)\n      );\n      this.expectType(\n        n.subimageConstrEnd.at2.pos,\n        \".!number\",\n        this.getTypeClause(n.subimageConstrEnd.at2)\n      );\n    }\n\n    return ret;\n  }\n\n  private getTypePictureConstr(n: p.PictureConstr): string | void {\n    let ret: string | void = undefined;\n\n    if (n instanceof p.PictureConstr0) {\n      // \"shift\" clause \"by\" clause:b \",\" clause:c\n      // clause type pic, b/c type number, return pic\n      ret = \"pic\";\n      this.expectType(n.clause.pos, \"pic\", this.getTypeClause(n.clause));\n      this.expectType(n.b.pos, \".!number\", this.getTypeClause(n.b));\n      this.expectType(n.c.pos, \".!number\", this.getTypeClause(n.c));\n    } else if (n instanceof p.PictureConstr1) {\n      // \"scale\" clause \"by\" clause:b \",\" clause:c\n      // clause type pic, b/c type number, return pic\n      ret = \"pic\";\n      this.expectType(n.clause.pos, \"pic\", this.getTypeClause(n.clause));\n      this.expectType(n.b.pos, \".!number\", this.getTypeClause(n.b));\n      this.expectType(n.c.pos, \".!number\", this.getTypeClause(n.c));\n    } else if (n instanceof p.PictureConstr2) {\n      // \"rotate\" clause \"by\" clause:b\n      // clause type pic, b type number, return pic\n      ret = \"pic\";\n      this.expectType(n.clause.pos, \"pic\", this.getTypeClause(n.clause));\n      this.expectType(n.b.pos, \".!number\", this.getTypeClause(n.b));\n    } else if (n instanceof p.PictureConstr3) {\n      // \"colour\" clause \"in\" clause:b\n      // clause type pic, b type number, return pic\n      ret = \"pic\";\n      this.expectType(n.clause.pos, \"pic\", this.getTypeClause(n.clause));\n      this.expectType(n.b.pos, \".!number\", this.getTypeClause(n.b));\n    } else if (n instanceof p.PictureConstr4) {\n      // \"text\" clause \"from\" clause:b \",\" clause:c \"to\" clause:d \",\" clause:e\n      // clause type pic, b/c/d/e type number, return pic\n      ret = \"pic\";\n      this.expectType(n.clause.pos, \"pic\", this.getTypeClause(n.clause));\n      this.expectType(n.b.pos, \".!number\", this.getTypeClause(n.b));\n      this.expectType(n.c.pos, \".!number\", this.getTypeClause(n.c));\n      this.expectType(n.d.pos, \".!number\", this.getTypeClause(n.d));\n      this.expectType(n.e.pos, \".!number\", this.getTypeClause(n.e));\n    } else if (n instanceof p.PictureConstr5) {\n      // \"[\" clause \",\" clause:b \"]\"\n      // clause/b type number, return pic\n      ret = \"pic\";\n      this.expectType(n.clause.pos, \".!number\", this.getTypeClause(n.clause));\n      this.expectType(n.b.pos, \".!number\", this.getTypeClause(n.b));\n    }\n\n    return ret;\n  }\n\n  private getTypeLiteral(n: p.Literal): string | void {\n    let ret: string | void = undefined;\n\n    if (n instanceof p.Literal0) {\n      // nil\n      ret = \"pntr\";\n    } else if (n instanceof p.Literal1) {\n      // nullfile\n      ret = \"file\";\n    } else if (n instanceof p.Literal2) {\n      // integer literal\n      ret = \".!number\";\n    } else if (n instanceof p.Literal3) {\n      // boolean literal\n      ret = \"bool\";\n    } else if (n instanceof p.Literal4) {\n      // string\n      ret = \"string\";\n    } else if (n instanceof p.Literal5) {\n      // pixel literal\n      ret = \"#pixel\";\n    }\n\n    return ret;\n  }\n\n  private getTypeStandardExp(n: p.StandardExp): string | void {\n    let ret: string | void = undefined;\n\n    ret = this.getTypeStandardName(n.standardName);\n\n    return ret;\n  }\n\n  private getTypeStandardName(n: p.StandardName): string | void {\n    let ret: string | void = undefined;\n\n    if (n instanceof p.StandardName0) ret = \"upb\";\n    else if (n instanceof p.StandardName1) ret = \"lwb\";\n    else if (n instanceof p.StandardName2) ret = \"eof\";\n    else if (n instanceof p.StandardName3) ret = \"read.a.line\";\n    else if (n instanceof p.StandardName4) ret = \"read\";\n    else if (n instanceof p.StandardName5) ret = \"readi\";\n    else if (n instanceof p.StandardName6) ret = \"readr\";\n    else if (n instanceof p.StandardName7) ret = \"readb\";\n    else if (n instanceof p.StandardName8) ret = \"peek\";\n    else if (n instanceof p.StandardName9) ret = \"reads\";\n    else if (n instanceof p.StandardName10) ret = \"read.name\";\n    else if (n instanceof p.StandardName11) ret = \"read.byte\";\n    else if (n instanceof p.StandardName12) ret = \"read.16\";\n    else if (n instanceof p.StandardName13) ret = \"read.32\";\n\n    return ret;\n  }\n\n  private getTypeStandardId(n: p.StandardId): string {\n    let ret = \"\";\n\n    if (n instanceof p.StandardId0) ret = \"r.w\";\n    else if (n instanceof p.StandardId1) ret = \"i.w\";\n    else if (n instanceof p.StandardId2) ret = \"s.w\";\n    else if (n instanceof p.StandardId3) ret = \"s.o\";\n    else if (n instanceof p.StandardId4) ret = \"s.i\";\n    else if (n instanceof p.StandardId5) ret = \"maxint\";\n    else if (n instanceof p.StandardId6) ret = \"maxreal\";\n    else if (n instanceof p.StandardId7) ret = \"epsilon\";\n    else if (n instanceof p.StandardId8) ret = \"pi\";\n    else if (n instanceof p.StandardId9) ret = \"cursor\";\n    else if (n instanceof p.StandardId10) ret = \"screen\";\n\n    return ret;\n  }\n}\n","import jsBeautify from \"js-beautify\";\nimport React, { useEffect, useState } from \"react\";\nimport { Analyzer, AnalyzerError } from \"./compiler/analyzer/analyzer\";\nimport { CodeGen } from \"./compiler/codegen/codegen\";\nimport { forwards } from \"./compiler/codegen/forwards\";\nimport { prelude } from \"./compiler/codegen/prelude\";\nimport { program as escherS } from \"./compiler/examples/escher.S\";\nimport { Parser, Program } from \"./compiler/parser/parser\";\nimport { EditorPort } from \"./components/Editor\";\nimport { Image } from \"./components/Image\";\nimport { Menu } from \"./components/Menu\";\n\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-eval */\n\nexport type ImageType = [[number, number], [number, number]][];\n\nconst genAST = (\n  program: string\n): { ast: Program } | { error: string; pos: number } => {\n  try {\n    const p = new Parser(program);\n    return { ast: p.parse() };\n  } catch (e) {\n    return { error: e.message, pos: e.pos };\n  }\n};\n\nconst typeCheck = (\n  ast: Program\n): { error: string; pos: number } | undefined => {\n  try {\n    const a = new Analyzer(ast);\n    a.run();\n  } catch (e) {\n    if (e instanceof AnalyzerError) return { error: e.message, pos: e.pos };\n    throw e;\n  }\n};\n\nconst genCode = (ast: Program) => {\n  const cg = new CodeGen(ast);\n  const code = cg.generate();\n  const prettyCode = jsBeautify.js_beautify(code);\n  return prettyCode;\n};\n\nconst prettyError = (code: string, msg: string, pos: number): string => {\n  const lineNum = code.slice(0, pos).split(\"\\n\").length;\n\n  return `Error on line ${lineNum}: ${msg}`;\n};\n\nexport const App = () => {\n  const [programCode, setProgramCode] = useState(escherS);\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [img, setImg] = useState<ImageType>([]);\n  (window as any).setImg = (i: any) => setImg(i);\n\n  const compile = (includePrelude: boolean, pCode = programCode) => {\n    setErrMsg(\"\");\n    setOutput(\"\");\n    setImg([]);\n\n    const ast = genAST(forwards + pCode);\n\n    if (\"error\" in ast)\n      setErrMsg(prettyError(programCode, ast.error, ast.pos - forwards.length));\n    else {\n      const typeCheckErr = typeCheck(ast.ast);\n      if (typeCheckErr)\n        setErrMsg(\n          prettyError(\n            programCode,\n            typeCheckErr.error,\n            typeCheckErr.pos - forwards.length\n          )\n        );\n      else {\n        const code = (includePrelude ? prelude : \"\") + genCode(ast.ast);\n        if (!includePrelude) setOutput(code);\n        return code;\n      }\n    }\n  };\n\n  const compileAndRun = () => {\n    const code = compile(true);\n    if (code) {\n      (window as any).olog = [];\n      eval(code);\n      const output_log = (window as any).olog;\n      const out = output_log.join(\"\\n\");\n      setOutput(out);\n    }\n  };\n\n  const setAndCompile = (program: string) => {\n    setProgramCode(program);\n    // Have to pass in program as setProgramCode is delayed\n    compile(false, program);\n  };\n\n  const loadFile = () => {\n    const input = document.createElement(\"input\");\n    const handleFiles = () => {\n      if (!input.files) return;\n      const reader = new FileReader();\n      reader.onload = () => setAndCompile(reader.result as any);\n      reader.readAsText(input.files[0]);\n      input.remove();\n    };\n\n    input.type = \"file\";\n    input.addEventListener(\"change\", handleFiles);\n    input.click();\n  };\n  const saveFile = () => {\n    const blob = new Blob([programCode], { type: \"text/s-algol\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"program.S\";\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  useEffect(() => {\n    compile(false);\n  }, []);\n\n  return (\n    <div className=\"h-screen grid grid-cols-3\">\n      <div className=\"col-span-3\">\n        <Menu\n          {...{ loadFile, saveFile, compile, compileAndRun, setAndCompile }}\n        />\n      </div>\n\n      <div className=\"col-span-2 border-r\">\n        <EditorPort {...{ programCode, setProgramCode }} />\n      </div>\n\n      <div className=\"overflow-y-scroll\">\n        {errMsg.length > 0 ? (\n          <pre className=\"m-2 p-2 bg-red-400 text-white font-semibold\">\n            {errMsg}\n          </pre>\n        ) : (\n          <div className=\"m-2 p-2 bg-green-400 text-white font-semibold\">\n            Success\n          </div>\n        )}\n        {img.length > 0 && (\n          <div className=\"m-2\">\n            <Image image={img} />\n          </div>\n        )}\n        {output.length > 0 && (\n          <pre className=\"m-2 p-2 bg-gray-100\">{output}</pre>\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as p from \"../parser/parser\";\n\nclass StructDef {\n  constructor(public name: string, public fields: string[]) {}\n}\nclass ProcDec {\n  constructor(public name: string) {}\n}\n\ntype Type = StructDef | ProcDec;\ntype TypeMap = { [k: string]: Type };\n\nclass TypeStack {\n  maps: TypeMap[] = [\n    {\n      reads: new ProcDec(\"reads\"),\n      readi: new ProcDec(\"readi\"),\n      upb: new ProcDec(\"upb\"),\n      lwb: new ProcDec(\"lwb\"),\n      dump: new ProcDec(\"dump\"),\n    },\n  ];\n  now = () => this.maps[this.maps.length - 1];\n  pop = () => this.maps.pop();\n  push = () => this.maps.push({});\n  has = (k: string) => {\n    for (const m of this.maps) if (Object.keys(m).includes(k)) return m[k];\n  };\n}\n\nexport class CodeGen {\n  constructor(private program: p.Program) {}\n\n  private typeStack = new TypeStack();\n\n  generate(): string {\n    const code = this.genProgram(this.program);\n    // Perform some tidying\n    const improved = code.replace(/^;*/, \"\").trim();\n    return improved;\n  }\n\n  // Utility methods\n  private getSoftID(n: p.Identifier): string {\n    return (n as p.Identifier0).id.val.replace(/\\./g, \"_\");\n  }\n\n  private flattenIdentifierList(n: p.IdentifierList): string[] {\n    return [\n      this.getSoftID(n.identifier),\n      ...n.identifierListFollow.map((f) => this.getSoftID(f.identifier)),\n    ];\n  }\n\n  private immediate(x: string): string {\n    return `(()=>{return ${x}})()`;\n  }\n\n  // Generation methods below\n\n  private genProgram(n: p.Program): string {\n    return this.genSequence(n.sequence);\n  }\n\n  private genSequence(n: p.Sequence, ret = false): string {\n    this.typeStack.push();\n\n    const sequences = [\n      n.sequenceEl,\n      ...n.sequenceFollow.map((sf) => sf.sequenceEl),\n    ].map((se) => this.genSequenceEl(se));\n\n    if (ret && sequences.length > 0)\n      sequences[sequences.length - 1] =\n        \"return \" + this.immediate(sequences[sequences.length - 1]);\n\n    const s = sequences.join(\";\");\n\n    this.typeStack.pop();\n\n    return s;\n  }\n\n  private genSequenceFollow(n: p.SequenceFollow): string {\n    return this.genSequenceEl(n.sequenceEl);\n  }\n\n  private genSequenceEl(n: p.SequenceEl): string {\n    if (n instanceof p.SequenceEl0) {\n      return this.genDeclaration(n.declaration);\n    } else if (n instanceof p.SequenceEl1) {\n      return this.genClause(n.clause);\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genDeclaration(n: p.Declaration): string {\n    if (n instanceof p.Declaration0) {\n      return this.genLetDecl(n.letDecl);\n    } else if (n instanceof p.Declaration1) {\n      return this.genStructureDecl(n.structureDecl);\n    } else if (n instanceof p.Declaration2) {\n      return this.genProcDecl(n.procDecl);\n    } else if (n instanceof p.Declaration3) {\n      return this.genForward(n.forward);\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genLetDecl(n: p.LetDecl): string {\n    const isConst = n.initOp instanceof p.InitOp0;\n    const clause = this.genClause(n.clause);\n\n    return `${isConst ? \"const\" : \"let\"} ${this.getSoftID(\n      n.identifier\n    )} = ${this.immediate(clause)}`;\n  }\n\n  private genStructureDecl(n: p.StructureDecl): string {\n    // Register structure type for future invocation\n    const id = this.getSoftID(n.identifier);\n\n    const fields: string[] = [];\n\n    if (n.structureDeclFields && n.structureDeclFields.fieldList) {\n      // Get field names\n      const fieldList = n.structureDeclFields.fieldList;\n\n      [\n        fieldList.fieldListEl,\n        ...fieldList.fieldListFollow.map((f) => f.fieldListEl),\n      ].map((el) =>\n        fields.push(...this.flattenIdentifierList(el.identifierList))\n      );\n    }\n\n    this.typeStack.now()[id] = new StructDef(id, fields);\n\n    return \"\";\n  }\n\n  private genProcDecl(n: p.ProcDecl): string {\n    const id = this.getSoftID(n.identifier);\n    const params: string[] = [];\n\n    this.typeStack.now()[id] = new ProcDec(id);\n\n    this.typeStack.push();\n    let clause = this.genClause(n.clause);\n    // if (!(n.clause instanceof p.Clause8)) clause = `return ${clause}`;\n    this.typeStack.pop();\n\n    // Check if we have params\n    if (n.procDeclType && n.procDeclType.parameterList) {\n      const pl = n.procDeclType.parameterList;\n      [pl.parameter, ...pl.parameterListFollow.map((p) => p.parameter)].forEach(\n        (param) => {\n          if (param instanceof p.Parameter0) {\n            params.push(...this.flattenIdentifierList(param.identifierList));\n          } else if (param instanceof p.Parameter1) {\n            params.push(this.getSoftID(param.structureDecl.identifier));\n          } else if (param instanceof p.Parameter2) {\n            params.push(...this.flattenIdentifierList(param.identifierList));\n          }\n        }\n      );\n    }\n\n    return `const ${id} = (${params.join(\", \")}) => ${clause};`;\n  }\n\n  private genForward(n: p.Forward): string {\n    const id = this.getSoftID(n.identifier);\n    this.typeStack.now()[id] = new ProcDec(id);\n    return \"\";\n  }\n\n  private genClause(n: p.Clause): string {\n    // Must return the last thing\n    // Clause is called like `const sconst = () => {genClause()}`\n\n    if (n instanceof p.Clause0) {\n      // If statement\n      const ifClause = this.immediate(this.genClause(n.clause));\n      if (n.ifClauseThen instanceof p.IfClauseThen0) {\n        let doClause = this.genClause(n.ifClauseThen.clause);\n        if (!doClause.startsWith(\"{\")) doClause = `return ${doClause}`;\n        return `(()=>{if (${ifClause}) ${doClause}})()`;\n        // const doClause = this.immediate(this.genClause(n.ifClauseThen.clause));\n        // return `(()=>{if (${ifClause}) {return ${doClause}}})()`;\n      } else {\n        let thenClause = this.genClause(n.ifClauseThen.then);\n        if (!thenClause.startsWith(\"{\")) thenClause = `return ${thenClause}`;\n        let elseClause = this.genClause(n.ifClauseThen.elsex);\n        if (!elseClause.startsWith(\"{\")) elseClause = `return ${elseClause}`;\n        return `(()=>{if (${ifClause}) ${thenClause} else ${elseClause}})()`;\n        // const thenClause = this.immediate(this.genClause(n.ifClauseThen.then));\n        // const elseClause = this.immediate(this.genClause(n.ifClauseThen.elsex));\n        // return `(()=>{if (${ifClause}) {return ${thenClause}} else {return ${elseClause}}})()`;\n      }\n    } else if (n instanceof p.Clause1) {\n      // Repeat statement\n      // REPEAT clause WHILE clause\n      // REPEAT clause WHILE clause DO clause\n      const whileClause = this.genClause(n.whilex);\n      const repeatClause = this.genClause(n.repeat);\n      if (n.clauseDo) {\n        return \"\";\n      } else {\n        return `do {${repeatClause}} while (${whileClause})`;\n      }\n    } else if (n instanceof p.Clause2) {\n      // While statement\n      const whileClause = this.genClause(n.whilex);\n      const doClause = this.genClause(n.dox);\n      return `while (${whileClause}) {${doClause}}`;\n    } else if (n instanceof p.Clause3) {\n      // For statement\n      const id = this.getSoftID(n.identifier);\n      const fromClause = this.immediate(this.genClause(n.from));\n      const toClause = this.immediate(this.genClause(n.to));\n      const doClause = this.genClause(n.dox);\n\n      let byClause = \"1\";\n      if (n.clauseBy)\n        byClause = this.immediate(this.genClause(n.clauseBy.clause));\n\n      return `(()=>{for (let ${id} = ${fromClause}; ${byClause} > 0 ? ${id} <= ${toClause} : ${id} > ${toClause};  ${id} += ${byClause}) {(()=>{${doClause}})()}})()`;\n    } else if (n instanceof p.Clause4) {\n      // Case statement\n      const switchClause = this.genClause(n.casex);\n      const defaultClause = this.genClause(n.defaultx);\n\n      const cases = [\n        n.caseList.caseListEl,\n        ...n.caseList.caseListFollow.map((clf) => clf.caseListEl),\n      ]\n        .map((cle) => {\n          const subCases = [\n            cle.clauseList.clause,\n            ...cle.clauseList.clauseListFollow.map((clf) => clf.clause),\n          ].map((clause) => `case ${this.genClause(clause)}:`);\n          const clause = this.genClause(cle.clause);\n          return `${subCases.join(\"\\n\")} return ${this.immediate(clause)}`;\n        })\n        .join(\"\\n\");\n\n      return `(()=>{switch (${this.immediate(\n        switchClause\n      )}) {${cases}\\ndefault: return ${this.immediate(defaultClause)}}})()`;\n    } else if (n instanceof p.Clause5) {\n      // Abort statement\n      return \"\";\n    } else if (n instanceof p.Clause6) {\n      // Write clause\n      return this.genWriteClause(n.writeClause);\n    } else if (n instanceof p.Clause7) {\n      // Raster expression\n      throw new Error(\"TODO implement raster expression\");\n    } else if (n instanceof p.Clause8) {\n      // Expression\n      const expr = this.genExpression(n.expression);\n      if (n.clauseExprFollow) {\n        // Assignment\n        const to = this.genClause(n.clauseExprFollow.clause);\n        return `${expr} = ${to};`;\n      } else {\n        // Normal expression, just compute result\n        return expr;\n      }\n    }\n\n    console.log(n);\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genWriteClause(n: p.WriteClause): string {\n    if (n instanceof p.WriteClause0) {\n      return `write(${this.genWriteList(n.writeList)});`;\n    } else if (n instanceof p.WriteClause1) {\n    } else if (n instanceof p.WriteClause2) {\n    } else if (n instanceof p.WriteClause3) {\n    } else if (n instanceof p.WriteClause4) {\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genWriteList(n: p.WriteList): string {\n    return [n.writeListEl, ...n.writeListFollow.map((wlf) => wlf.writeListEl)]\n      .map((wle) => this.genWriteListEl(wle))\n      .join(\",\");\n  }\n\n  private genWriteListEl(n: p.WriteListEl): string {\n    if (n.writeListElFollow !== undefined)\n      throw new Error(\"TODO unable to handle depth writing\");\n    return this.genClause(n.clause);\n  }\n\n  private genExpression(n: p.Expression): string {\n    return (\n      this.genExp1(n.exp1) +\n      n.expressionFollow.map((ef) => `|| ${this.genExp1(ef.exp1)}`).join(\" \")\n    );\n  }\n\n  private genExp1(n: p.Exp1): string {\n    return (\n      this.genExp2(n.exp2) +\n      n.exp1Follow.map((ef) => `&& ${this.genExp2(ef.exp2)}`).join(\" \")\n    );\n  }\n\n  private genExp2(n: p.Exp2): string {\n    // if exp20 then we have a tilde at the front indicating boolean negation\n    const s =\n      this.genExp3(n.exp3) +\n      n.exp2Op\n        .map((eop) => `${this.genRelOp(eop.relOp)} ${this.genExp3(eop.exp3)}`)\n        .join(\" \");\n\n    return n instanceof p.Exp20 ? `!(${s})` : s;\n  }\n\n  private genExp3(n: p.Exp3): string {\n    return (\n      this.genExp4(n.exp4) +\n      n.exp3Op\n        .map((eop) => `${this.genAddOp(eop.addOp)} ${this.genExp4(eop.exp4)}`)\n        .join(\" \")\n    );\n  }\n\n  private genExp4(n: p.Exp4): string {\n    return (\n      this.genExp5(n.exp5) +\n      n.exp4Op\n        .map((eop) => `${this.genMultOp(eop.multOp)} ${this.genExp5(eop.exp5)}`)\n        .join(\" \")\n    );\n  }\n\n  private genExp5(n: p.Exp5): string {\n    // if exp50 then we have an addition operation at the start\n\n    const e6g = this.genExp6(n.exp6);\n    const type = this.typeStack.has(e6g);\n\n    let s = e6g;\n\n    const follows = n.exp5Follow.map((ef) =>\n      this.genExpressionArg(ef.expressionArg)\n    );\n\n    if (type instanceof StructDef) {\n      const parts = [];\n      for (let i = 0; i < type.fields.length; i++)\n        parts.push(`\"${type.fields[i]}\": ${follows[0][i]}`);\n\n      return `{${parts.join(\",\")}}`;\n    } else {\n      if (type instanceof ProcDec) s += `(${follows.join()})`;\n      else if ((n.exp6 as any).v_type === \"struct\") s = `${s}[\"${follows[0]}\"]`;\n      else if (follows.length > 0) {\n        // Not struct, not proc, must be vector indexing\n        return `${s}[${follows[0].join()}]`;\n      }\n\n      if (n instanceof p.Exp50) s = this.genAddOp(n.addOp) + `(${s})`;\n    }\n\n    return s;\n  }\n\n  private genExpressionArg(n: p.ExpressionArg): string[] {\n    if (n.expressionArgFollow instanceof p.ExpressionArgFollow0) {\n      return [];\n    }\n\n    const accessClauses = [n.clause];\n    if (n.expressionArgFollow instanceof p.ExpressionArgFollow1)\n      accessClauses.push(\n        n.expressionArgFollow.clauseList.clause,\n        ...n.expressionArgFollow.clauseList.clauseListFollow.map(\n          (clf) => clf.clause\n        )\n      );\n\n    const computedClauses = accessClauses.map((ac) => this.genClause(ac));\n\n    return computedClauses;\n  }\n\n  private genExp6(n: p.Exp6): string {\n    if (n instanceof p.Exp60) {\n      return `(${this.genClause(n.clause)})`;\n    } else if (n instanceof p.Exp61 || n instanceof p.Exp62) {\n      // Generate all sequences and append last\n      // return n.sequence ? this.genSequence(n.sequence, true) : \"\";\n      return `{${n.sequence ? this.genSequence(n.sequence, true) : \"\"}}`;\n    } else if (n instanceof p.Exp63) {\n      return this.genStandardExp(n.standardExp);\n    } else if (n instanceof p.Exp64) {\n      return this.genLiteral(n.literal);\n    } else if (n instanceof p.Exp65) {\n      return this.genValueConstructor(n.valueConstructor);\n    } else if (n instanceof p.Exp66) {\n      return this.genIdentifier(n.identifier);\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genValueConstructor(n: p.ValueConstructor): string {\n    if (n instanceof p.ValueConstructor0) {\n      return this.genVectorConstr(n.vectorConstr);\n    } else if (n instanceof p.ValueConstructor1) {\n    } else if (n instanceof p.ValueConstructor2) {\n    } else if (n instanceof p.ValueConstructor3) {\n      return this.genPictureConstr(n.pictureConstr);\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genVectorConstr(n: p.VectorConstr): string {\n    if (n instanceof p.VectorConstr0) {\n      const from = this.genClause(n.range.rangeEl.a);\n      const to = this.genClause(n.range.rangeEl.b);\n      const val = this.genClause(n.clause);\n      return `(()=>{const a = {};for(let i = ${from}; i <= ${to}; i++) a[i] = ${val};return a;})()`;\n    } else if (n instanceof p.VectorConstr1) {\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genPictureConstr(n: p.PictureConstr): string {\n    if (n instanceof p.PictureConstr0) {\n      // Shift\n      const a = this.genClause(n.clause);\n      const b = this.genClause(n.b);\n      const c = this.genClause(n.c);\n      return `_d_sh(${a}, ${b}, ${c})`;\n    } else if (n instanceof p.PictureConstr1) {\n      // Scale\n      const a = this.genClause(n.clause);\n      const b = this.genClause(n.b);\n      const c = this.genClause(n.c);\n      return `_d_sc(${a}, ${b}, ${c})`;\n    } else if (n instanceof p.PictureConstr2) {\n      // Rotate\n      const a = this.genClause(n.clause);\n      const b = this.genClause(n.b);\n      return `_d_ro(${a}, ${b})`;\n    } else if (n instanceof p.PictureConstr3) {\n    } else if (n instanceof p.PictureConstr4) {\n    } else if (n instanceof p.PictureConstr5) {\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genLiteral(n: p.Literal): string {\n    if (n instanceof p.Literal0) {\n      return \"[]\";\n    } else if (n instanceof p.Literal1) {\n      return \"undefined\";\n    } else if (n instanceof p.Literal2) {\n      return n.integerLiteral.number.val.toString();\n    } else if (n instanceof p.Literal3) {\n      return n.booleanLiteral instanceof p.BooleanLiteral0 ? \"true\" : \"false\";\n    } else if (n instanceof p.Literal4) {\n      return `\"${n.string.val}\"`;\n    } else if (n instanceof p.Literal5) {\n      throw new Error(\"Pixel literals not implemented\");\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genAddOp(n: p.AddOp): string {\n    if (n instanceof p.AddOp0) {\n      return \"+\";\n    } else if (n instanceof p.AddOp1) {\n      return \"-\";\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genMultOp(n: p.MultOp): string {\n    if (n instanceof p.MultOp0) {\n      return \"+\";\n    } else if (n instanceof p.MultOp1) {\n      return \"\";\n    } else if (n instanceof p.MultOp2) {\n      return \"%\";\n    } else if (n instanceof p.MultOp3) {\n      return \"*\";\n    } else if (n instanceof p.MultOp4) {\n      return \"/\";\n    } else if (n instanceof p.MultOp5) {\n      throw new Error(\"Pixel joining not supported\");\n    } else if (n instanceof p.MultOp6) {\n      throw new Error(\"Pixel inclusion not supported\");\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genRelOp(n: p.RelOp): string {\n    if (n instanceof p.RelOp0) {\n      return this.genEqOp(n.eqOp);\n    } else if (n instanceof p.RelOp1) {\n      return this.genComparOp(n.comparOp);\n    } else if (n instanceof p.RelOp2) {\n      return this.genTypeOp(n.typeOp);\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genEqOp(n: p.EqOp): string {\n    if (n instanceof p.EqOp0) {\n      return \"==\";\n    } else if (n instanceof p.EqOp1) {\n      return \"!=\";\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genComparOp(n: p.ComparOp): string {\n    if (n instanceof p.ComparOp0) {\n      return \"<=\";\n    } else if (n instanceof p.ComparOp1) {\n      return \"<\";\n    } else if (n instanceof p.ComparOp2) {\n      return \">=\";\n    } else if (n instanceof p.ComparOp3) {\n      return \">\";\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genTypeOp(n: p.TypeOp): string {\n    if (n instanceof p.TypeOp0) {\n      return \"instanceof\";\n    } else if (n instanceof p.TypeOp1) {\n      return \"\";\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genIdentifier(n: p.Identifier): string {\n    if (n instanceof p.Identifier0) {\n      return this.getSoftID(n);\n    } else if (n instanceof p.Identifier1) {\n      return this.genStandardId(n.standardId);\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genStandardExp(n: p.StandardExp): string {\n    return this.genStandardName(n.standardName);\n  }\n\n  private genStandardName(n: p.StandardName): string {\n    if (n instanceof p.StandardName0) {\n      return \"upb\";\n    } else if (n instanceof p.StandardName1) {\n      return \"lwb\";\n    } else if (n instanceof p.StandardName2) {\n      return \"eof\";\n    } else if (n instanceof p.StandardName3) {\n      return \"read.a.line\";\n    } else if (n instanceof p.StandardName4) {\n      return \"read\";\n    } else if (n instanceof p.StandardName5) {\n      return \"readi\";\n    } else if (n instanceof p.StandardName6) {\n      return \"readr\";\n    } else if (n instanceof p.StandardName7) {\n      return \"readb\";\n    } else if (n instanceof p.StandardName8) {\n      return \"peak\";\n    } else if (n instanceof p.StandardName9) {\n      return \"reads\";\n    } else if (n instanceof p.StandardName10) {\n      return \"read.name\";\n    } else if (n instanceof p.StandardName11) {\n      return \"read.byte\";\n    } else if (n instanceof p.StandardName12) {\n      return \"read.16\";\n    } else if (n instanceof p.StandardName13) {\n      return \"read.32\";\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n\n  private genStandardId(n: p.StandardId): string {\n    if (n instanceof p.StandardId0) {\n      return \"r.w\";\n    } else if (n instanceof p.StandardId1) {\n      return \"i.w\";\n    } else if (n instanceof p.StandardId2) {\n      return \"s.w\";\n    } else if (n instanceof p.StandardId3) {\n      return \"s.o\";\n    } else if (n instanceof p.StandardId4) {\n      return \"s.i\";\n    } else if (n instanceof p.StandardId5) {\n      return \"maxint\";\n    } else if (n instanceof p.StandardId6) {\n      return \"maxreal\";\n    } else if (n instanceof p.StandardId7) {\n      return \"epsilon\";\n    } else if (n instanceof p.StandardId8) {\n      return \"pi\";\n    } else if (n instanceof p.StandardId9) {\n      return \"cursor\";\n    } else if (n instanceof p.StandardId10) {\n      return \"screen\";\n    }\n\n    throw new Error(\"Unhandled branch\");\n  }\n}\n","export const prelude = `\nconst write = (...args) => window.olog.push(args.join(\"\"));\nconst reads = () => prompt(\"Program requests string input\");\nconst readi = () => parseInt(prompt(\"Program requests integer input\"));\nconst upb = of => Math.max(...Object.keys(of).map(k=>parseInt(k)));\nconst lwb = of => Math.min(...Object.keys(of).map(k=>parseInt(k)));\n\nconst reads_prompt = p => prompt(p);\nconst readi_prompt = p => parseInt(prompt(p));\nconst dump = o => console.log(o);\n\n\n// GRAPHICS\nwindow._adc_wm = 20;\nwindow._adc_hm = 15;\nconst draw_scale = (x, y) => {\n  window._adc_wm = x;\n  window._adc_hm = y;\n}\n\nconst draw_line = (image, x1, y1, x2, y2) => image.push([[x1, y1], [x2, y2]]);\nconst draw_image = image => {\n  image.forEach(line => {\n    line[0][0] *= window._adc_wm;\n    line[1][0] *= window._adc_wm;\n    line[0][1] *= window._adc_hm;\n    line[1][1] *= window._adc_hm;\n  });\n  window.setImg(image);\n}\n\nconst d_nl = (pic, x, y) => {\n  if (pic.length === 0) pic.push([[x, y], [x, y]]);\n  else {\n    const last = pic[pic.length - 1];\n    pic.push([[last[1][0], last[1][1]], [x, y]]);\n  }\n};\nconst d_ad = (from, to) => to.push(...from.map(line=>[\n  [line[0][0], line[0][1]],\n  [line[1][0], line[1][1]]\n]));\nconst _rotate_point = (angle_r, x, y) => {\n  const c = Math.cos(angle_r);\n  const s = Math.sin(angle_r);\n  return [c * x + s * y, c * y - s * x];\n}\nconst _d_ro = (pic, angle) => {\n  const angle_r = (Math.PI / 180) * angle;\n  return pic.map(line => [\n    _rotate_point(angle_r, line[0][0], line[0][1]),\n    _rotate_point(angle_r, line[1][0], line[1][1])\n  ]);\n};\nconst _d_sh = (pic, x, y) => pic.map(line => [\n  [line[0][0] + x, line[0][1] + y],\n  [line[1][0] + x, line[1][1] + y]\n]);\nconst _d_sc = (pic, x, y) => pic.map(line => [\n  [line[0][0] * x, line[0][1] * y],\n  [line[1][0] * x, line[1][1] * y]\n]);\n`;\n","import { ControlledEditor, monaco } from \"@monaco-editor/react\";\nimport React from \"react\";\nimport \"./EditorStyles.css\";\n\n// Add syntax highlighting for S-algol\nmonaco.init().then((m) => {\n  m.languages.register({ id: \"salgol\" });\n  m.languages.setMonarchTokensProvider(\"salgol\", {\n    keywords: [\n      \"abort\",\n      \"and\",\n      \"at\",\n      \"begin\",\n      \"by\",\n      \"c\",\n      \"case\",\n      \"cursor\",\n      \"default\",\n      \"do\",\n      \"else\",\n      \"end\",\n      \"eof\",\n      \"epsilon\",\n      \"false\",\n      \"for\",\n      \"forward\",\n      \"from\",\n      \"i.w\",\n      \"if\",\n      \"in\",\n      \"let\",\n      \"limit\",\n      \"lwb\",\n      \"maxint\",\n      \"maxreal\",\n      \"nil\",\n      \"nullfile\",\n      \"of\",\n      \"off\",\n      \"on\",\n      \"onto\",\n      \"or\",\n      \"out.16\",\n      \"out.32\",\n      \"out.byte\",\n      \"output\",\n      \"peek\",\n      \"pi\",\n      \"procedure\",\n      \"r.w\",\n      \"read\",\n      \"read.16\",\n      \"read.32\",\n      \"read.a.line\",\n      \"read.byte\",\n      \"read.name\",\n      \"readb\",\n      \"readi\",\n      \"readr\",\n      \"reads\",\n      \"repeat\",\n      \"rotate\",\n      \"s.i\",\n      \"s.o\",\n      \"s.w\",\n      \"scale\",\n      \"screen\",\n      \"shift\",\n      \"structure\",\n      \"text\",\n      \"then\",\n      \"to\",\n      \"true\",\n      \"upb\",\n      \"vector\",\n      \"while\",\n      \"write\",\n    ],\n\n    typeKeywords: [\n      \"cint\",\n      \"creal\",\n      \"cbool\",\n      \"cstring\",\n      \"cpixel\",\n      \"cpic\",\n      \"cpntr\",\n      \"cfile\",\n      \"c#pixel\",\n      \"c#cpixel\",\n      \"colour\",\n      \"#cpixel\",\n      \"#pixel\",\n      \"bool\",\n      \"file\",\n      \"image\",\n      \"pic\",\n      \"pixel\",\n      \"pntr\",\n      \"real\",\n      \"int\",\n      \"string\",\n    ],\n\n    operators: [\n      \"&\",\n      \"*\",\n      \"+\",\n      \"++\",\n      \",\",\n      \"-\",\n      \"->\",\n      \"/\",\n      \":\",\n      \"::\",\n      \":=\",\n      \";\",\n      \"=\",\n      \"~=\",\n      \"<\",\n      \"<=\",\n      \">\",\n      \">=\",\n      \"@\",\n      \"^\",\n      \"~\",\n      \"copy\",\n      \"nand\",\n      \"nor\",\n      \"not\",\n      \"rand\",\n      \"ror\",\n      \"xnor\",\n      \"xor\",\n      \"div\",\n      \"rem\",\n      \"is\",\n      \"isnt\",\n    ],\n\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*/^%]+/,\n\n    // C# style strings\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n\n    // The main tokenizer for our languages\n    tokenizer: {\n      root: [\n        // identifiers and keywords\n        [\n          /[\\w.]+/,\n          {\n            cases: {\n              \"@typeKeywords\": \"keyword\",\n              \"@keywords\": \"keyword\",\n              \"@default\": \"identifier\",\n            },\n          },\n        ],\n\n        // whitespace\n        { include: \"@whitespace\" },\n\n        // delimiters and operators\n        [/[{}()[]]/, \"@brackets\"],\n        [/[<>](?!@symbols)/, \"@brackets\"],\n        [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }],\n\n        // @ annotations.\n        // Note: message are supressed during the first load -- change some lines to see them.\n        [/@\\s*[\\w.]+/, { token: \"annotation\" }],\n\n        // numbers\n        [/\\d*\\.\\d+([eE][-+]?\\d+)?/, \"number.float\"],\n        [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n        [/\\d+/, \"number\"],\n\n        // delimiter: after number because of .\\d floats\n        [/[;,.]/, \"delimiter\"],\n\n        // strings\n        [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], // non-teminated string\n        [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n\n        // characters\n        [/'[^\\\\']'/, \"string\"],\n        [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n        [/'/, \"string.invalid\"],\n      ],\n\n      string: [\n        [/[^\\\\\"]+/, \"string\"],\n        [/@escapes/, \"string.escape\"],\n        [/\\\\./, \"string.escape.invalid\"],\n        [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }],\n      ],\n\n      whitespace: [\n        [/[ \\t\\r\\n]+/, \"white\"],\n        [/!.*$/, \"comment\"],\n      ],\n    },\n  });\n});\n\nexport const EditorPort = (props: {\n  programCode: string;\n  setProgramCode: (to: string) => void;\n}) => (\n  <ControlledEditor\n    value={props.programCode}\n    onChange={(_, v) => props.setProgramCode(v as string)}\n    language=\"salgol\"\n  />\n);\n","import React, { useEffect, useRef } from \"react\";\nimport { ImageType } from \"../App\";\n\nexport const Image = (props: { image: ImageType }) => {\n  // Reference to canvas objec\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // Update canvas when the image changes\n  useEffect(() => {\n    // Fetch reference\n    const c = canvasRef.current!;\n    // Get 2d context\n    const ctx = c.getContext(\"2d\")!;\n\n    // Clear existing\n    ctx.clearRect(0, 0, c.width, c.height);\n    // Prep for path work\n    ctx.beginPath();\n    // Draw lines between coords\n    for (const el of props.image) {\n      ctx.moveTo(el[0][0], el[0][1]);\n      ctx.lineTo(el[1][0], el[1][1]);\n    }\n    // Stroke line\n    ctx.stroke();\n  }, [props.image]);\n\n  return <canvas width=\"600\" height=\"400\" ref={canvasRef} />;\n};\n","import React from \"react\";\nimport { program as escherS } from \"../compiler/examples/escher.S\";\nimport { program as fastS } from \"../compiler/examples/fast.S\";\nimport { program as testS } from \"../compiler/examples/tests.S\";\n\nconst Button = (props: { clicked: () => void; text: string }) => (\n  <div\n    onClick={props.clicked}\n    className=\"px-2 m-1 py-1 border rounded cursor-pointer hover:bg-gray-100\"\n  >\n    {props.text}\n  </div>\n);\n\nexport const Menu = (props: {\n  loadFile: () => void;\n  saveFile: () => void;\n  compile: (includePrelude: boolean) => void;\n  compileAndRun: () => void;\n  setAndCompile: (prog: string) => void;\n}) => {\n  const preloadedFiles = [\n    [\"tests.S\", testS],\n    [\"fast.S\", fastS],\n    [\"escher.S\", escherS],\n  ];\n\n  return (\n    <div className=\"border-b px-5 flex\">\n      <div className=\"p-2 font-semibold\">S-algol Compiler</div>\n      <div className=\"pl-5 flex\">\n        {preloadedFiles.map((item) => (\n          <Button\n            key={item[0]}\n            clicked={() => props.setAndCompile(item[1])}\n            text={`Load ${item[0]}`}\n          />\n        ))}\n        <Button clicked={() => props.loadFile()} text=\"Load file\" />\n        <Button clicked={() => props.saveFile()} text=\"Save file\" />\n        <Button clicked={() => props.compile(false)} text=\"Compile\" />\n        <Button clicked={() => props.compileAndRun()} text=\"Run\" />\n      </div>\n    </div>\n  );\n};\n","export const program = `! S-algol Javascript Compiler (2020)\n\n!! CURRENTLY SUPPORTED FEATURES\n!! ============================\n!! Function definition (+nested), calling, with/without parameters\n!! Variable assignment, reassignment, lookup\n!! Control flow: IF, WHILE, FOR, CASE\n!! Structure creation, modification, lookup\n!! Type 1 vector creation with upb/lwb, assignment, lookup\n!! Vector graphics\n!! Basic IO\n\n!! STDLIB\n!! ======\n!! write(...args)                            Write to REPL output\n!! reads(->string)                           Read string from user\n!! readi(->int)                              Read int from user\n!! upb(->int)                                Get upper bound of vector\n!! lwb(->int)                                Get lower bound of vector\n\n!! reads.prompt(string->string)              Prompt user for string input\n!! readi.prompt(string->int)                 Prompt user for int input\n!! draw.scale(int, int)                      Set the canvas scale\n!! draw.line(#pixel, int, int, int, int)     Draw a line on a picture\n!! draw.image(#pixel)                        Render the picture\n!! d.nl(#pixel, int, int)                    Add a point to an image\n!! d.ad(#pixel, #pixel)                      Merge two images\n!! dump(nonvoid)                             Dump object to browser console\n\n\n\n! Test while control flow\nprocedure while.test(-> int)\nbegin\n     let x := 13\n     while x < 20 do x := x + 1\n     x\nend\nwrite \"test while, expect 20 -> \", while.test\n\n\n\n! Test vectors\nprocedure gen.vector(-> *int)\nbegin\n     let v := vector 1 :: 10 of 1\n     v(5) := 5\n     v\nend\nprocedure vector.access.test(-> int)\nbegin\n     let v := gen.vector\n     v(1) + v(5)\nend\nwrite \"test vector access, expect 6 -> \", vector.access.test\n\n\n\n! Test structures\nstructure some.struct(bool works; int count)\nprocedure struct.int.test(-> int)\nbegin\n     let s := some.struct(true, 10)\n     s(count)\nend\nprocedure struct.bool.test(-> bool)\nbegin\n     let s := some.struct(true, 10)\n     s(works)\nend\nprocedure struct.assign.test(-> int)\nbegin\n     let s := some.struct(true, 10)\n     s(count) := 20\n     s(count)\nend\nwrite \"test struct int, expect 10 -> \", struct.int.test\nwrite \"test struct bool, expect true -> \", struct.bool.test\nwrite \"test struct assign, expect 20 -> \", struct.assign.test\n\n\n\n! Test if control flow\nprocedure if.test(int x -> int)\nbegin\n     if x < 20 then x else x + 1\nend\nwrite \"test if, expect 10 -> \", if.test(10)\nwrite \"test if, expect 21 -> \", if.test(20)\n\n\n\n! Test for control flow\nprocedure for.test(-> int)\nbegin\n     let x := 0\n     for y = 0 to 10 by 2 do x := x + 1\n     x\nend\nwrite \"test for, expect 6 -> \", for.test\n\n\n\n! Test case control flow\nprocedure case.test(string x -> int)\n     case x of \n     \"1\": 3\n     \"2\": 2\n     \"3\": 1\n     default: 4\nwrite \"test case, expect 3 -> \", case.test(\"1\")\nwrite \"test case, expect 2 -> \", case.test(\"2\")\nwrite \"test case, expect 1 -> \", case.test(\"3\")\nwrite \"test case, expect 4 -> \", case.test(\"10\")\n\n\n\n! Test function calls and nesting control flow\nprocedure returns.3(->int)\n     3\nprocedure returns.inner.call(->int)\nbegin\n     procedure ret(->int); returns.3\n     ret\nend\nwrite \"test calls, expect 3 -> \", returns.inner.call`;\n","export const program = `! Fast Murray Polygon.  4/11/87.  Adapted 2020\n! Click run at the top, and use values 2, 2, 3, 5, 5, 5\n\nprocedure change.parities(*bool p; int start)\nbegin\n    for i = start to 1 by -2 do p(i) := ~p(i)\nend\n\nprocedure increment(*int d, r; int i -> int)\nbegin\n    if d(i) < r(i) - 1 then {d(i) := d(i) + 1; i}\n    else {d(i) := 0; increment(d, r, i + 1)}\nend\n\nprocedure get.rads(*int digits, radices; int x.rad, y.rad)\nbegin\n    for i = 1 to 2 * x.rad by 2 do radices(i) := readi.prompt(\"X radices\")\n    for i = 2 to 2 * y.rad by 2 do radices(i) := readi.prompt(\"Y radices\")\nend \n\nprocedure number.pts(*int r; int start, inc -> int)\nbegin\n    let res := 1\n    for j = start to upb(r) - 1 by inc do res := res * r(j)\n    res \nend \n\nlet x.rad = readi.prompt(\"Number of X radices\")\nlet y.rad = readi.prompt(\"Number of Y radices\")\n\nlet max.rad = if x.rad > y.rad then x.rad else y.rad\nlet complexity = 2 * max.rad\nlet digits = vector 1 :: complexity + 1 of 0\nlet radices = vector 1 :: complexity + 1 of 1\nlet parities = vector 1 :: complexity + 1 of true\n\nget.rads(digits, radices, x.rad, y.rad)\nlet no.pts := number.pts(radices, 1, 1)\nlet nx := number.pts(radices, 1, 2)\nlet ny := number.pts(radices, 2, 2)\n\nlet width = if nx > ny then nx else ny\nlet x1 := 0\nlet y1 := 0\nlet x2 := 0\nlet y2 := 0\nlet next.seg := nil\n\nfor itr = 1 to no.pts - 1 do\nbegin\n    let i = increment(digits, radices, 1)\n    change.parities(parities, i)\n    let inc = if parities(i + 1) then 1 else -1\n    if i rem 2 = 1 then x2 := x2 + inc else y2 := y2 + inc\n    draw.line(next.seg, x1, y1, x2, y2)\n    if i rem 2 = 1 then x1 := x2 else y1 := y2\nend\ndraw.image(next.seg)\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}